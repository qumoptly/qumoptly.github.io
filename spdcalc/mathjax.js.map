{"version":3,"sources":["webpack:///mathjax.js","webpack:///webpack/bootstrap b16b1049d4ea060a467e","webpack:///./~/mathjax/unpacked/MathJax.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","document","getElementById","childNodes","createElement","window","MathJax","Hub","AuthorConfig","version","fileversion","cdnVersion","cdnFileVersions","BASENAME","BASE","PROTO","OBJECT","def","obj","constructor","hasOwnProperty","CONSTRUCTOR","arguments","callee","Init","this","Object","Subclass","classdef","SUPER","Augment","protoFunction","can","has","isa","prototype","args","length","apply","toString","fn","method","property","SimpleSUPER","define","src","dst","wrap","f","match","result","err","isArray","Array","CALLBACK","data","cb","execute","isCallback","hook","object","called","autoReset","concat","slice","reset","ISCALLBACK","EVAL","code","eval","TESTEVAL","__TeSt_VaR__","error","execScript","__code","__result","Error","head","getElementsByTagName","body","script","appendChild","createTextNode","removeChild","USING","i","DELAY","time","callback","timeout","setTimeout","WAITFOR","signal","WAITSIGNAL","pending","WAITEXECUTE","signals","oldExecute","push","AFTER","HOOKS","hooks","remove","running","Add","priority","splice","Remove","Execute","callbacks","RemovePending","sort","EXECUTEHOOKS","handler","QUEUE","queue","Push","Process","Suspend","Resume","wait","SIGNAL","name","posted","listeners","posting","Post","message","forget","Clear","Interest","ignorePast","NoInterest","MessageHook","msg","ExecuteHooks","type","RemoveHook","find","Callback","CallBack","Delay","After","Queue","Signal","Hooks","isSafari2","navigator","vendor","vendorSub","sheets","HEAD","styleSheets","SCRIPTS","REMOVESCRIPTS","Ajax","PATH","Contrib","loading","loadHooks","styleDelay","config","root","path","params","STATUS","OK","ERROR","fileURL","file","substr","fileName","url","fileRev","V","urlRev","Require","toUpperCase","split","pop","noContrib","FILE","Load","addHook","loader","LoadHook","removeHook","Preloading","preloaded","JS","status","Message","File","onerror","CSS","link","rel","href","timer","create","node","nodeName","styleSheet","chrome","start","checkSafari2","checkLength","AJAX","check","delay","total","Math","floor","loadTimeout","loadComplete","cssRules","isStyle","sheet","rules","clearTimeout","loadError","Set","Styles","styles","styleString","StyleString","style","cssText","string","join","HTML","Element","contents","replace","ucMatch","Insert","setAttribute","setScript","addElement","span","TextNode","text","addText","setScriptBug","firstChild","getScript","innerHTML","Cookie","prefix","expires","keys","cookie","escape","Date","setDate","getDate","toGMTString","Get","pattern","RegExp","exec","unescape","value","parseFloat","Localization","locale","directory","strings","ast","menuTitle","bg","bcc","br","ca","cdo","cs","da","de","diq","en","isLoaded","eo","es","fa","fi","fr","gl","he","ia","it","ja","kn","ko","lb","lki","lt","mk","nl","oc","pl","pt","pt-br","ru","sco","scn","sl","sv","tr","uk","vi","zh-hans","SPLIT","regex","last","lastIndex","index","_","phrase","processSnippet","processString","lookupPhrase","domain","parts","charAt","number","n","plural","plurals","snippet","part","processMarkdown","markdownPattern","target","concatString","load","loadDomain","RestartAfter","localeData","domains","domainData","loadFile","dir","Try","restart","resetLocale","toLowerCase","dashPos","lastIndexOf","substring","remap","setLocale","Menu","addTranslation","definition","isNew","menu","CreateLocaleMenu","setCSS","div","fontFamily","fontDirection","direction","textAlign","ready","log","current","textNodeBug","#MathJax_Message","position","left","bottom","background-color","border","margin","padding","z-index","color","font-size","width","white-space","#MathJax_MSIE_Frame","top","browsers","MSIE","browser","msieFixedPositionBug","documentMode","quirks","compatMode","Chrome","parentNode","frame","attachEvent","addDiv","removeAttribute","zIndex","height","MoveFrame","display","parent","insertBefore","documentElement","scrollLeft","scrollTop","clientWidth","clientHeight","localize","filterText","messageStyle","processing","typesetting","clearCounts","clearDelay","restarted","cleared","filteredText","next","prev","nodeValue","Log",".MathJax_Preview","jax","extensions","preJax","postJax","displayAlign","displayIndent","preRemoveClass","showProcessingMessages","delayStartupUntil","skipStartupTypeset","elements","positionToHash","showMathMenu","showMathMenuMSIE","menuSettings","zoom","CTRL","ALT","CMD","Shift","discoverable","zscale","renderer","font","context","mpContext","mpMouse","texHints","FastPreview","assistiveMML","inTabOrder","semantics","errorSettings","font-style","ignoreMMLattributes","preProcessors","inputJax","outputJax","order","processSectionDelay","processUpdateTime","processUpdateDelay","Config","CombineConfig","Register","PreProcessor","StartupHook","Startup","UnRegister","getAllJax","element","scripts","elementScripts","elementJax","getJaxByType","mimeType","getJaxByInputType","getJaxFor","isMathJaxNode","isMathJax","jaxID","OutputJax","getJaxFromMath","isJax","tagName","state","ElementJax","STATE","PROCESSED","className","setRenderer","unshift","Typeset","isReady","ec","elementCallback","count","PreProcess","takeAction","Update","Reprocess","Rerender","action","getTime","j","jaxIDs","scriptAction","needsUpdate","UPDATE","OUTPUT","prepareScripts","disabled","hover","Extension","MathEvents","Hover","ClearHover","PENDING","checkScriptSiblings","checked","pre","previousSibling","post","nextSibling","preview","processInput","saveScript","input","Attach","postInputHooks","now","processError","prepareOutput","JAX","lastPrepError","processOutput","inputID","processMessage","formatError","LOCALIZE","arg1","arg2","sourceURL","line","lineNumber","Jax","errorText","messageId","EVENT","Event","HUB","oncontextmenu","onmousedown","Mousedown","onkeydown","Keydown","tabIndex","getTabOrder","lastError","e","isHTMLCollection","HTMLCollection2Array","alreadyDone","contains","msieHTMLCollectionBug","HTMLCollection","nodes","NODES","SplitList","String","list","trim",".MathJax_Error","Configured","files","URL","THIS","loadArray","ConfigDelay","onload","ConfigBlocks","SETTINGS","CHTMLpreview","AssistiveMML","k","Extensions","registered","Hash","location","hash","scrollIntoView","a","HashCheck","hashCheck","MenuZoom","MathMenu","MathZoom","onLoad","readyState","Browser","isMSIE","addEventListener","noDOMContentEvent","synchronous","ROOT","JAXFILE","require","cdef","cObject","ndef","Translate","mimetype","copyTranslate","preProcess","preTranslate","postProcess","postTranslate","extensionDir","InputJax","sourceMenuTitle","SourceElement","originalText","fontDir","isPacked","imageDir","Text","keep","clear","Detach","Clone","GetID","newID","ID","errors","ContextMenu","AltContextMenu","math","sourceMenuFormat","STARTUP","CONFIG","namespaceURI","getElementsByTagNameNS","namePattern","$2","KV","AGENT","userAgent","BROWSERS","isMac","platform","isPC","isEdge","loadTimes","isFirefox","isSafari","app","isChrome","isOpera","opera","isKonqueror","versionAtLeast","v","bv","parseInt","Select","choices","xAGENT","VERSION","MATCH","Safari","webkit","appVersion","isMobile","noContextMenu","Firefox","product","rv","date","buildID","productSub","Opera","Edge","isIE9","performance","msPerformance","NoMathPlayer","ActiveXObject","hasMathPlayer","mathplayer","classid","namespaces","add","mpNamespace","write","mpImported","console","AuthorInit"],"mappings":"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","file":"mathjax.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n\t/* vim: set ts=2 et sw=2 tw=80: */\n\t\n\t/*************************************************************\n\t *\n\t *  MathJax.js\n\t *  \n\t *  The main support code for the MathJax Hub, including the\n\t *  Ajax, Callback, Messaging, and Object-Oriented Programming\n\t *  libraries, as well as the base Jax classes, and startup\n\t *  processing code.\n\t *  \n\t *  ---------------------------------------------------------------------\n\t *  \n\t *  Copyright (c) 2009-2016 The MathJax Consortium\n\t * \n\t *  Licensed under the Apache License, Version 2.0 (the \"License\");\n\t *  you may not use this file except in compliance with the License.\n\t *  You may obtain a copy of the License at\n\t * \n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t * \n\t *  Unless required by applicable law or agreed to in writing, software\n\t *  distributed under the License is distributed on an \"AS IS\" BASIS,\n\t *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t *  See the License for the specific language governing permissions and\n\t *  limitations under the License.\n\t */\n\t\n\t\n\t//\n\t//  Check if browser can support MathJax (no one fails this nowadays)\n\t//\n\tif (document.getElementById && document.childNodes && document.createElement) {\n\t//\n\t//  Skip if MathJax is already loaded\n\t//\n\tif (!(window.MathJax && MathJax.Hub)) {\n\t  \n\t//\n\t//  Get author configuration from MathJax variable, if any\n\t//\n\tif (window.MathJax) {window.MathJax = {AuthorConfig: window.MathJax}}\n\t               else {window.MathJax = {}}\n\t\n\t// MathJax.isPacked = true; // This line is uncommented by the packer.\n\t\n\tMathJax.version = \"2.7.0-beta\";\n\tMathJax.fileversion = \"2.7.0-beta\";\n\tMathJax.cdnVersion = \"2.7.0-beta\";  // specifies a revision to break caching\n\tMathJax.cdnFileVersions = {};  // can be used to specify revisions for individual files\n\t\n\t/**********************************************************/\n\t\n\t(function (BASENAME) {\n\t  var BASE = window[BASENAME];\n\t  if (!BASE) {BASE = window[BASENAME] = {}}\n\t\n\t  var PROTO = [];  // a static object used to indicate when a prototype is being created\n\t  var OBJECT = function (def) {\n\t    var obj = def.constructor; if (!obj) {obj = function () {}}\n\t    for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}}\n\t    return obj;\n\t  };\n\t  var CONSTRUCTOR = function () {\n\t    return function () {return arguments.callee.Init.call(this,arguments)};\n\t  };\n\t\n\t  BASE.Object = OBJECT({\n\t    constructor: CONSTRUCTOR(),\n\t    \n\t    Subclass: function (def,classdef) {\n\t      var obj = CONSTRUCTOR();\n\t      obj.SUPER = this; obj.Init = this.Init;\n\t      obj.Subclass = this.Subclass; obj.Augment = this.Augment;\n\t      obj.protoFunction = this.protoFunction;\n\t      obj.can = this.can; obj.has = this.has; obj.isa = this.isa;\n\t      obj.prototype = new this(PROTO);\n\t      obj.prototype.constructor = obj;  // the real constructor\n\t      obj.Augment(def,classdef);\n\t      return obj;\n\t    },\n\t  \n\t    Init: function (args) {\n\t      var obj = this;\n\t      if (args.length === 1 && args[0] === PROTO) {return obj}\n\t      if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)}\n\t      return obj.Init.apply(obj,args) || obj;\n\t    },\n\t    \n\t    Augment: function (def,classdef) {\n\t      var id;\n\t      if (def != null) {\n\t        for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}}\n\t        // MSIE doesn't list toString even if it is not native so handle it separately\n\t        if (def.toString !== this.prototype.toString && def.toString !== {}.toString)\n\t          {this.protoFunction('toString',def.toString)}\n\t      }\n\t      if (classdef != null) {\n\t        for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}}\n\t      }\n\t      return this;\n\t    },\n\t  \n\t    protoFunction: function (id,def) {\n\t      this.prototype[id] = def;\n\t      if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype}\n\t    },\n\t  \n\t    prototype: {\n\t      Init: function () {},\n\t      SUPER: function (fn) {return fn.callee.SUPER},\n\t      can: function (method) {return typeof(this[method]) === \"function\"},\n\t      has: function (property) {return typeof(this[property]) !== \"undefined\"},\n\t      isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)}\n\t    },\n\t  \n\t    can: function (method)   {return this.prototype.can.call(this,method)},\n\t    has: function (property) {return this.prototype.has.call(this,property)},\n\t    isa: function (obj) {\n\t      var constructor = this;\n\t      while (constructor) {\n\t        if (constructor === obj) {return true} else {constructor = constructor.SUPER}\n\t      }\n\t      return false;\n\t    },\n\t\n\t\n\t    SimpleSUPER: OBJECT({\n\t      constructor: function (def) {return this.SimpleSUPER.define(def)},\n\t\n\t      define: function (src) {\n\t\tvar dst = {};\n\t\tif (src != null) {\n\t          for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}}\n\t\t  // MSIE doesn't list toString even if it is not native so handle it separately\n\t          if (src.toString !== this.prototype.toString && src.toString !== {}.toString)\n\t            {dst.toString = this.wrap('toString',src.toString)}\n\t\t}\n\t\treturn dst;\n\t      },\n\t\n\t      wrap: function (id,f) {\n\t        if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f}\n\t        var fn = function () {\n\t          this.SUPER = fn.SUPER[id];\n\t          try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err}\n\t          delete this.SUPER;\n\t          return result;\n\t        }\n\t        fn.toString = function () {return f.toString.apply(f,arguments)}\n\t        return fn;\n\t      }\n\t\n\t    })\n\t  });\n\t  \n\t  BASE.Object.isArray = Array.isArray || function (obj) {\n\t    return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t  };\n\t  \n\t  BASE.Object.Array = Array;\n\t\n\t})(\"MathJax\");\n\t\n\t/**********************************************************/\n\t\n\t/*\n\t *  Create a callback function from various forms of data:\n\t *  \n\t *     MathJax.Callback(fn)    -- callback to a function\n\t *\n\t *     MathJax.Callback([fn])  -- callback to function\n\t *     MathJax.Callback([fn,data...])\n\t *                             -- callback to function with given data as arguments\n\t *     MathJax.Callback([object,fn])\n\t *                             -- call fn with object as \"this\"\n\t *     MathJax.Callback([object,fn,data...])\n\t *                             -- call fn with object as \"this\" and data as arguments\n\t *     MathJax.Callback([\"method\",object])\n\t *                             -- call method of object wth object as \"this\"\n\t *     MathJax.Callback([\"method\",object,data...])\n\t *                             -- as above, but with data as arguments to method\n\t *\n\t *     MathJax.Callback({hook: fn, data: [...], object: this})\n\t *                             -- give function, data, and object to act as \"this\" explicitly\n\t *\n\t *     MathJax.Callback(\"code\")  -- callback that compiles and executes a string\n\t *\n\t *     MathJax.Callback([...],i)\n\t *                             -- use slice of array starting at i and interpret\n\t *                                result as above.  (Used for passing \"arguments\" array\n\t *                                and trimming initial arguments, if any.)\n\t */\n\t\n\t/*\n\t *    MathJax.Callback.After([...],cb1,cb2,...)\n\t *                             -- make a callback that isn't called until all the other\n\t *                                ones are called first.  I.e., wait for a union of\n\t *                                callbacks to occur before making the given callback.\n\t */\n\t\n\t/*\n\t *  MathJax.Callback.Queue([callback,...])\n\t *                             -- make a synchronized queue of commands that process\n\t *                                sequentially, waiting for those that return uncalled\n\t *                                callbacks.\n\t */\n\t\n\t/*\n\t *  MathJax.Callback.Signal(name)\n\t *                             -- finds or creates a names signal, to which listeners\n\t *                                can be attached and are signaled by messages posted\n\t *                                to the signal.  Responses can be asynchronous.\n\t */\n\t\n\t(function (BASENAME) {\n\t  var BASE = window[BASENAME];\n\t  if (!BASE) {BASE = window[BASENAME] = {}}\n\t  var isArray = BASE.Object.isArray;\n\t  //\n\t  //  Create a callback from an associative array\n\t  //\n\t  var CALLBACK = function (data) {\n\t    var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)};\n\t    for (var id in CALLBACK.prototype) {\n\t      if (CALLBACK.prototype.hasOwnProperty(id)) {\n\t        if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]}\n\t                                         else {cb[id] = CALLBACK.prototype[id]}\n\t      }\n\t    }\n\t    cb.toString = CALLBACK.prototype.toString;\n\t    return cb;\n\t  };\n\t  CALLBACK.prototype = {\n\t    isCallback: true,\n\t    hook: function () {},\n\t    data: [],\n\t    object: window,\n\t    execute: function () {\n\t      if (!this.called || this.autoReset) {\n\t        this.called = !this.autoReset;\n\t        return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)));\n\t      }\n\t    },\n\t    reset: function () {delete this.called},\n\t    toString: function () {return this.hook.toString.apply(this.hook,arguments)}\n\t  };\n\t  var ISCALLBACK = function (f) {\n\t    return (typeof(f) === \"function\" && f.isCallback);\n\t  }\n\t\n\t  //\n\t  //  Evaluate a string in global context\n\t  //\n\t  var EVAL = function (code) {return eval.call(window,code)}\n\t  var TESTEVAL = function () {\n\t    EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context\n\t    if (window.__TeSt_VaR__) {\n\t      try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode\n\t      catch (error) { window.__TeSt_VaR__ = null; } \n\t    } else {\n\t      if (window.execScript) {\n\t        // IE\n\t        EVAL = function (code) {\n\t          BASE.__code = code;\n\t          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n\t          window.execScript(code);\n\t          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n\t          if (result instanceof Error) {throw result}\n\t          return result;\n\t        }\n\t      } else {\n\t        // Safari2\n\t        EVAL = function (code) {\n\t          BASE.__code = code;\n\t          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n\t          var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body}\n\t          var script = document.createElement(\"script\");\n\t          script.appendChild(document.createTextNode(code));\n\t          head.appendChild(script); head.removeChild(script);\n\t          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n\t          if (result instanceof Error) {throw result}\n\t          return result;\n\t        }\n\t      }\n\t    }\n\t    TESTEVAL = null;\n\t  };\n\t  \n\t  //\n\t  //  Create a callback from various types of data\n\t  //\n\t  var USING = function (args,i) {\n\t    if (arguments.length > 1) {\n\t      if (arguments.length === 2 && !(typeof arguments[0] === 'function') &&\n\t          arguments[0] instanceof Object && typeof arguments[1] === 'number')\n\t            {args = [].slice.call(args,i)}\n\t      else {args = [].slice.call(arguments,0)}\n\t    }\n\t    if (isArray(args) && args.length === 1) {args = args[0]}\n\t    if (typeof args === 'function') {\n\t      if (args.execute === CALLBACK.prototype.execute) {return args}\n\t      return CALLBACK({hook: args});\n\t    } else if (isArray(args)) {\n\t      if (typeof(args[0]) === 'string' && args[1] instanceof Object &&\n\t                 typeof args[1][args[0]] === 'function') {\n\t        return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)});\n\t      } else if (typeof args[0] === 'function') {\n\t        return CALLBACK({hook: args[0], data: args.slice(1)});\n\t      } else if (typeof args[1] === 'function') {\n\t        return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)});\n\t      }\n\t    } else if (typeof(args) === 'string') {\n\t      if (TESTEVAL) TESTEVAL();\n\t      return CALLBACK({hook: EVAL, data: [args]});\n\t    } else if (args instanceof Object) {\n\t      return CALLBACK(args);\n\t    } else if (typeof(args) === 'undefined') {\n\t      return CALLBACK({});\n\t    }\n\t    throw Error(\"Can't make callback from given data\");\n\t  };\n\t  \n\t  //\n\t  //  Wait for a given time to elapse and then perform the callback\n\t  //\n\t  var DELAY = function (time,callback) {\n\t    callback = USING(callback);\n\t    callback.timeout = setTimeout(callback,time);\n\t    return callback;\n\t  };\n\t\n\t  //\n\t  //  Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed\n\t  //\n\t  var WAITFOR = function (callback,signal) {\n\t    callback = USING(callback);\n\t    if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++}\n\t  };\n\t  var WAITEXECUTE = function () {\n\t    var signals = this.signal; delete this.signal;\n\t    this.execute = this.oldExecute; delete this.oldExecute;\n\t    var result = this.execute.apply(this,arguments);\n\t    if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else {\n\t      for (var i = 0, m = signals.length; i < m; i++) {\n\t        signals[i].pending--;\n\t        if (signals[i].pending <= 0) {signals[i].call()}\n\t      }\n\t    }\n\t  };\n\t  var WAITSIGNAL = function (callback,signals) {\n\t    if (!isArray(signals)) {signals = [signals]}\n\t    if (!callback.signal) {\n\t      callback.oldExecute = callback.execute;\n\t      callback.execute = WAITEXECUTE;\n\t      callback.signal = signals;\n\t    } else if (signals.length === 1) {callback.signal.push(signals[0])}\n\t      else {callback.signal = callback.signal.concat(signals)}\n\t  };\n\t\n\t  //\n\t  //  Create a callback that is called when a collection of other callbacks have\n\t  //  all been executed.  If the callback gets called immediately (i.e., the\n\t  //  others are all already called), check if it returns another callback\n\t  //  and return that instead.\n\t  //\n\t  var AFTER = function (callback) {\n\t    callback = USING(callback);\n\t    callback.pending = 0;\n\t    for (var i = 1, m = arguments.length; i < m; i++)\n\t      {if (arguments[i]) {WAITFOR(arguments[i],callback)}}\n\t    if (callback.pending === 0) {\n\t      var result = callback();\n\t      if (ISCALLBACK(result)) {callback = result}\n\t    }\n\t    return callback;\n\t  };\n\t\n\t  //\n\t  //  An array of prioritized hooks that are executed sequentially\n\t  //  with a given set of data.\n\t  //\n\t  var HOOKS = MathJax.Object.Subclass({\n\t    //\n\t    //  Initialize the array and the auto-reset status\n\t    //\n\t    Init: function (reset) {\n\t      this.hooks = [];\n\t      this.remove = []; // used when hooks are removed during execution of list\n\t      this.reset = reset;\n\t      this.running = false;\n\t    },\n\t    //\n\t    //  Add a callback to the list, in priority order (default priority is 10)\n\t    //\n\t    Add: function (hook,priority) {\n\t      if (priority == null) {priority = 10}\n\t      if (!ISCALLBACK(hook)) {hook = USING(hook)}\n\t      hook.priority = priority;\n\t      var i = this.hooks.length;\n\t      while (i > 0 && priority < this.hooks[i-1].priority) {i--}\n\t      this.hooks.splice(i,0,hook);\n\t      return hook;\n\t    },\n\t    Remove: function (hook) {\n\t      for (var i = 0, m = this.hooks.length; i < m; i++) {\n\t        if (this.hooks[i] === hook) {\n\t          if (this.running) {this.remove.push(i)}\n\t            else {this.hooks.splice(i,1)}\n\t          return;\n\t        }\n\t      }\n\t    },\n\t    //\n\t    //  Execute the list of callbacks, resetting them if requested.\n\t    //  If any return callbacks, return a callback that will be \n\t    //  executed when they all have completed.\n\t    //  Remove any hooks that requested being removed during processing.\n\t    //\n\t    Execute: function () {\n\t      var callbacks = [{}];\n\t      this.running = true;\n\t      for (var i = 0, m = this.hooks.length; i < m; i++) {\n\t        if (this.reset) {this.hooks[i].reset()}\n\t        var result = this.hooks[i].apply(window,arguments);\n\t        if (ISCALLBACK(result) && !result.called) {callbacks.push(result)}\n\t      }\n\t      this.running = false;\n\t      if (this.remove.length) {this.RemovePending()}\n\t      if (callbacks.length === 1) {return null}\n\t      if (callbacks.length === 2) {return callbacks[1]}\n\t      return AFTER.apply({},callbacks);\n\t    },\n\t    //\n\t    //  Remove hooks that asked to be removed during execution of list\n\t    //\n\t    RemovePending: function () {\n\t      this.remove = this.remove.sort();\n\t      for (var i = this.remove.length-1; i >= 0; i--) {this.hooks.splice(i,1)}\n\t      this.remove = [];\n\t    }\n\t\n\t  });\n\t  \n\t  //\n\t  //  Run an array of callbacks passing them the given data.\n\t  //  (Legacy function, since this has been replaced by the HOOKS object).\n\t  //\n\t  var EXECUTEHOOKS = function (hooks,data,reset) {\n\t    if (!hooks) {return null}\n\t    if (!isArray(hooks)) {hooks = [hooks]}\n\t    if (!isArray(data))  {data = (data == null ? [] : [data])}\n\t    var handler = HOOKS(reset);\n\t    for (var i = 0, m = hooks.length; i < m; i++) {handler.Add(hooks[i])}\n\t    return handler.Execute.apply(handler,data);\n\t  };\n\t   \n\t  //\n\t  //  Command queue that performs commands in order, waiting when\n\t  //  necessary for commands to complete asynchronousely\n\t  //\n\t  var QUEUE = BASE.Object.Subclass({\n\t    //\n\t    //  Create the queue and push any commands that are specified\n\t    //\n\t    Init: function () {\n\t      this.pending = this.running = 0;\n\t      this.queue = [];\n\t      this.Push.apply(this,arguments);\n\t    },\n\t    //\n\t    //  Add commands to the queue and run them. Adding a callback object\n\t    //  (rather than a callback specification) queues a wait for that callback.\n\t    //  Return the final callback for synchronization purposes.\n\t    //\n\t    Push: function () {\n\t      var callback;\n\t      for (var i = 0, m = arguments.length; i < m; i++) {\n\t        callback = USING(arguments[i]);\n\t        if (callback === arguments[i] && !callback.called)\n\t          {callback = USING([\"wait\",this,callback])}\n\t        this.queue.push(callback);\n\t      }\n\t      if (!this.running && !this.pending) {this.Process()}\n\t      return callback;\n\t    },\n\t    //\n\t    //  Process the command queue if we aren't waiting on another command\n\t    //\n\t    Process: function (queue) {\n\t      while (!this.running && !this.pending && this.queue.length) {\n\t        var callback = this.queue[0];\n\t        queue = this.queue.slice(1); this.queue = [];\n\t        this.Suspend(); var result = callback(); this.Resume();\n\t        if (queue.length) {this.queue = queue.concat(this.queue)}\n\t        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n\t      }\n\t    },\n\t    //\n\t    //  Suspend/Resume command processing on this queue\n\t    //\n\t    Suspend: function () {this.running++},\n\t    Resume: function () {if (this.running) {this.running--}},\n\t    //\n\t    //  Used by WAITFOR to restart the queue when an action completes\n\t    //\n\t    call: function () {this.Process.apply(this,arguments)},\n\t    wait: function (callback) {return callback}\n\t  });\n\t  \n\t  //\n\t  //  Create a named signal that listeners can attach to, to be signaled by\n\t  //  postings made to the signal.  Posts are queued if they occur while one\n\t  //  is already in process.\n\t  //\n\t  var SIGNAL = QUEUE.Subclass({\n\t    Init: function (name) {\n\t      QUEUE.prototype.Init.call(this);\n\t      this.name = name;\n\t      this.posted = [];              // the messages posted so far\n\t      this.listeners = HOOKS(true);  // those with interest in this signal\n\t      this.posting = false;\n\t      this.callback = null;\n\t    },\n\t    //\n\t    // Post a message to the signal listeners, with callback for when complete\n\t    //\n\t    Post: function (message,callback,forget) {\n\t      callback = USING(callback);\n\t      if (this.posting || this.pending) {\n\t        this.Push([\"Post\",this,message,callback,forget]);\n\t      } else {\n\t        this.callback = callback; callback.reset();\n\t        if (!forget) {this.posted.push(message)}\n\t        this.Suspend(); this.posting = true;\n\t        var result = this.listeners.Execute(message);\n\t        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n\t        this.Resume(); this.posting = false;\n\t        if (!this.pending) {this.call()}\n\t      }\n\t      return callback;\n\t    },\n\t    //\n\t    //  Clear the post history (so new listeners won't get old messages)\n\t    //\n\t    Clear: function (callback) {\n\t      callback = USING(callback);\n\t      if (this.posting || this.pending) {\n\t        callback = this.Push([\"Clear\",this,callback]);\n\t      } else {\n\t        this.posted = [];\n\t        callback();\n\t      }\n\t      return callback;\n\t    },\n\t    //\n\t    //  Call the callback (all replies are in) and process the command queue\n\t    //\n\t    call: function () {this.callback(this); this.Process()},\n\t    \n\t    //\n\t    //  A listener calls this to register interest in the signal (so it will be called\n\t    //  when posts occur).  If ignorePast is true, it will not be sent the post history.\n\t    //\n\t    Interest: function (callback,ignorePast,priority) {\n\t      callback = USING(callback);\n\t      this.listeners.Add(callback,priority);\n\t      if (!ignorePast) {\n\t        for (var i = 0, m = this.posted.length; i < m; i++) {\n\t          callback.reset();\n\t          var result = callback(this.posted[i]);\n\t          if (ISCALLBACK(result) && i === this.posted.length-1) {WAITFOR(result,this)}\n\t        }\n\t      }\n\t      return callback;\n\t    },\n\t    //\n\t    //  A listener calls this to remove itself from a signal\n\t    //\n\t    NoInterest: function (callback) {\n\t      this.listeners.Remove(callback);\n\t    },\n\t    \n\t    //\n\t    //  Hook a callback to a particular message on this signal\n\t    //\n\t    MessageHook: function (msg,callback,priority) {\n\t      callback = USING(callback);\n\t      if (!this.hooks) {this.hooks = {}; this.Interest([\"ExecuteHooks\",this])}\n\t      if (!this.hooks[msg]) {this.hooks[msg] = HOOKS(true)}\n\t      this.hooks[msg].Add(callback,priority);\n\t      for (var i = 0, m = this.posted.length; i < m; i++)\n\t        {if (this.posted[i] == msg) {callback.reset(); callback(this.posted[i])}}\n\t      callback.msg = msg; // keep track so we can remove it\n\t      return callback;\n\t    },\n\t    //\n\t    //  Execute the message hooks for the given message\n\t    //\n\t    ExecuteHooks: function (msg) {\n\t      var type = (isArray(msg) ? msg[0] : msg);\n\t      if (!this.hooks[type]) {return null}\n\t      return this.hooks[type].Execute(msg);\n\t    },\n\t    //\n\t    //  Remove a hook safely\n\t    //\n\t    RemoveHook: function (hook) {\n\t      this.hooks[hook.msg].Remove(hook);\n\t    }\n\t    \n\t  },{\n\t    signals: {},  // the named signals\n\t    find: function (name) {\n\t      if (!SIGNAL.signals[name]) {SIGNAL.signals[name] = new SIGNAL(name)}\n\t      return SIGNAL.signals[name];\n\t    }\n\t  });\n\t  \n\t  //\n\t  //  The main entry-points\n\t  //\n\t  BASE.Callback = BASE.CallBack = USING;\n\t  BASE.Callback.Delay = DELAY;\n\t  BASE.Callback.After = AFTER;\n\t  BASE.Callback.Queue = QUEUE;\n\t  BASE.Callback.Signal = SIGNAL.find;\n\t  BASE.Callback.Hooks = HOOKS;\n\t  BASE.Callback.ExecuteHooks = EXECUTEHOOKS;\n\t})(\"MathJax\");\n\t\n\t\n\t/**********************************************************/\n\t\n\t(function (BASENAME) {\n\t  var BASE = window[BASENAME];\n\t  if (!BASE) {BASE = window[BASENAME] = {}}\n\t  \n\t  var isSafari2 = (navigator.vendor === \"Apple Computer, Inc.\" &&\n\t                   typeof navigator.vendorSub === \"undefined\");\n\t  var sheets = 0; // used by Safari2\n\t\n\t  //\n\t  //  Update sheets count and look up the head object\n\t  //  \n\t  var HEAD = function (head) {\n\t    if (document.styleSheets && document.styleSheets.length > sheets)\n\t      {sheets = document.styleSheets.length}\n\t    if (!head) {\n\t      head = document.head || ((document.getElementsByTagName(\"head\"))[0]);\n\t      if (!head) {head = document.body}\n\t    }\n\t    return head;\n\t  };\n\t  \n\t  //\n\t  //  Remove scripts that are completed so they don't clutter up the HEAD.\n\t  //  This runs via setTimeout since IE7 can't remove the script while it is running.\n\t  //\n\t  var SCRIPTS = [];  // stores scripts to be removed after a delay\n\t  var REMOVESCRIPTS = function () {\n\t    for (var i = 0, m = SCRIPTS.length; i < m; i++) {BASE.Ajax.head.removeChild(SCRIPTS[i])}\n\t    SCRIPTS = [];\n\t  };\n\t  \n\t  var PATH = {};\n\t  PATH[BASENAME] = \"\";  // empty path gets the root URL\n\t  PATH.Contrib = \"https://cdn.mathjax.org/mathjax/contrib\";   // the third-party extensions\n\t  \n\t  BASE.Ajax = {\n\t    loaded: {},         // files already loaded\n\t    loading: {},        // files currently in process of loading\n\t    loadHooks: {},      // hooks to call when files are loaded\n\t    timeout: 15*1000,   // timeout for loading of files (15 seconds)\n\t    styleDelay: 1,      // delay to use before styles are available\n\t    config: {\n\t      root: \"\",         // URL of root directory to load from\n\t      path: PATH        // paths to named URL's (e.g., [MathJax]/...)\n\t    },\n\t    params:  {},        // filled in from MathJax.js?...\n\t\n\t    STATUS: {\n\t      OK: 1,         // file is loading or did load OK\n\t      ERROR: -1      // file timed out during load\n\t    },\n\t\n\t    //\n\t    //  Return a complete URL to a file (replacing any root names)\n\t    //\n\t    fileURL: function (file) {\n\t      var match = file.match(/^\\[([-._a-z0-9]+)\\]/i);\n\t      if (match && match[1] in PATH)\n\t        {file = (PATH[match[1]]||this.config.root) + file.substr(match[1].length+2)}\n\t      return file;\n\t    },\n\t    //\n\t    //  Replace root names if URL includes one\n\t    //\n\t    fileName: function (url) {\n\t      var root = this.config.root;\n\t      if (url.substr(0,root.length) === root) {url = \"[\"+BASENAME+\"]\"+url.substr(root.length)}\n\t      else {\n\t        for (var id in PATH) {if (PATH.hasOwnProperty(id) && PATH[id]) {\n\t          if (url.substr(0,PATH[id].length) === PATH[id])\n\t            {url = \"[\"+id+\"]\"+url.substr(PATH[id].length); break}\n\t        }}\n\t      }\n\t      return url;\n\t    },\n\t    //\n\t    //  Cache-breaking revision number for file\n\t    //\n\t    fileRev: function (file) {\n\t      var V = BASE.cdnFileVersions[file] || BASE.cdnVersion || '';\n\t      if (V) {V = \"?V=\"+V}\n\t      return V;\n\t    },\n\t    urlRev: function (file) {return this.fileURL(file)+this.fileRev(file)},\n\t    \n\t    //\n\t    //  Load a file if it hasn't been already.\n\t    //  Make sure the file URL is \"safe\"?\n\t    //\n\t    Require: function (file,callback) {\n\t      callback = BASE.Callback(callback); var type;\n\t      if (file instanceof Object) {\n\t        for (var i in file)\n\t          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n\t      } else {type = file.split(/\\./).pop().toUpperCase()}\n\t      if (this.params.noContrib && file.substr(0,9) === \"[Contrib]\") {\n\t        callback(this.STATUS.ERROR);\n\t      } else {\n\t        file = this.fileURL(file);\n\t        // FIXME: check that URL is OK\n\t        if (this.loaded[file]) {\n\t          callback(this.loaded[file]);\n\t        } else {\n\t          var FILE = {}; FILE[type] = file;\n\t          this.Load(FILE,callback);\n\t        }\n\t      }\n\t      return callback;\n\t    },\n\t\n\t    //\n\t    //  Load a file regardless of where it is and whether it has\n\t    //  already been loaded.\n\t    //\n\t    Load: function (file,callback) {\n\t      callback = BASE.Callback(callback); var type;\n\t      if (file instanceof Object) {\n\t        for (var i in file)\n\t          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n\t      } else {type = file.split(/\\./).pop().toUpperCase()}\n\t      file = this.fileURL(file);\n\t      if (this.loading[file]) {\n\t        this.addHook(file,callback);\n\t      } else {\n\t        this.head = HEAD(this.head);\n\t        if (this.loader[type]) {this.loader[type].call(this,file,callback)}\n\t          else {throw Error(\"Can't load files of type \"+type)}\n\t      }\n\t      return callback;\n\t    },\n\t    \n\t    //\n\t    //  Register a load hook for a particular file (it will be called when\n\t    //  loadComplete() is called for that file)\n\t    //\n\t    LoadHook: function (file,callback,priority) {\n\t      callback = BASE.Callback(callback);\n\t      if (file instanceof Object)\n\t        {for (var i in file) {if (file.hasOwnProperty(i)) {file = file[i]}}}\n\t      file = this.fileURL(file);\n\t      if (this.loaded[file]) {callback(this.loaded[file])}\n\t        else {this.addHook(file,callback,priority)}\n\t      return callback;\n\t    },\n\t    addHook: function (file,callback,priority) {\n\t      if (!this.loadHooks[file]) {this.loadHooks[file] = MathJax.Callback.Hooks()}\n\t      this.loadHooks[file].Add(callback,priority);\n\t      callback.file = file;\n\t    },\n\t    removeHook: function (hook) {\n\t      if (this.loadHooks[hook.file]) {\n\t        this.loadHooks[hook.file].Remove(hook);\n\t        if (!this.loadHooks[hook.file].hooks.length) {delete this.loadHooks[hook.file]}\n\t      }\n\t    },\n\t    \n\t    //\n\t    //  Used when files are combined in a preloading configuration file\n\t    //\n\t    Preloading: function () {\n\t      for (var i = 0, m = arguments.length; i < m; i++) {\n\t        var file = this.fileURL(arguments[i]);\n\t        if (!this.loading[file]) {this.loading[file] = {preloaded: true}}\n\t      }\n\t    },\n\t    \n\t    //\n\t    //  Code used to load the various types of files\n\t    //  (JS for JavaScript, CSS for style sheets)\n\t    //\n\t    loader: {\n\t      //\n\t      //  Create a SCRIPT tag to load the file\n\t      //\n\t      JS: function (file,callback) {\n\t        var name = this.fileName(file);\n\t        var script = document.createElement(\"script\");\n\t        var timeout = BASE.Callback([\"loadTimeout\",this,file]);\n\t        this.loading[file] = {\n\t          callback: callback,\n\t          timeout: setTimeout(timeout,this.timeout),\n\t          status: this.STATUS.OK,\n\t          script: script\n\t        };\n\t        //\n\t        // Add this to the structure above after it is created to prevent recursion\n\t        //  when loading the initial localization file (before loading messsage is available)\n\t        //\n\t        this.loading[file].message = BASE.Message.File(name);\n\t        script.onerror = timeout;  // doesn't work in IE and no apparent substitute\n\t        script.type = \"text/javascript\";\n\t        script.src = file+this.fileRev(name);\n\t        this.head.appendChild(script);\n\t      },\n\t      //\n\t      //  Create a LINK tag to load the style sheet\n\t      //\n\t      CSS: function (file,callback) {\n\t        var name = this.fileName(file);\n\t        var link = document.createElement(\"link\");\n\t        link.rel = \"stylesheet\"; link.type = \"text/css\";\n\t        link.href = file+this.fileRev(name);\n\t        this.loading[file] = {\n\t          callback: callback,\n\t          message: BASE.Message.File(name),\n\t          status: this.STATUS.OK\n\t        };\n\t        this.head.appendChild(link);\n\t        this.timer.create.call(this,[this.timer.file,file],link);\n\t      }\n\t    },\n\t    \n\t    //\n\t    //  Timing code for checking when style sheets are available.\n\t    //\n\t    timer: {\n\t      //\n\t      //  Create the timing callback and start the timing loop.\n\t      //  We use a delay because some browsers need it to allow the styles\n\t      //  to be processed.\n\t      //\n\t      create: function (callback,node) {\n\t        callback = BASE.Callback(callback);\n\t        if (node.nodeName === \"STYLE\" && node.styleSheet &&\n\t            typeof(node.styleSheet.cssText) !== 'undefined') {\n\t          callback(this.STATUS.OK); // MSIE processes style immediately, but doesn't set its styleSheet!\n\t        } else if (window.chrome && node.nodeName === \"LINK\") {\n\t          callback(this.STATUS.OK); // Chrome doesn't give access to cssRules for stylesheet in\n\t                                    //   a link node, so we can't detect when it is loaded.\n\t        } else if (isSafari2) {\n\t          this.timer.start(this,[this.timer.checkSafari2,sheets++,callback],this.styleDelay);\n\t        } else {\n\t          this.timer.start(this,[this.timer.checkLength,node,callback],this.styleDelay);\n\t        }\n\t        return callback;\n\t      },\n\t      //\n\t      //  Start the timer for the given callback checker\n\t      //\n\t      start: function (AJAX,check,delay,timeout) {\n\t        check = BASE.Callback(check);\n\t        check.execute = this.execute; check.time = this.time;\n\t        check.STATUS = AJAX.STATUS; check.timeout = timeout || AJAX.timeout;\n\t        check.delay = check.total = delay || 0;\n\t        if (delay) {setTimeout(check,delay)} else {check()}\n\t      },\n\t      //\n\t      //  Increment the time total, increase the delay\n\t      //  and test if we are past the timeout time.\n\t      //  \n\t      time: function (callback) {\n\t        this.total += this.delay;\n\t        this.delay = Math.floor(this.delay * 1.05 + 5);\n\t        if (this.total >= this.timeout) {callback(this.STATUS.ERROR); return 1}\n\t        return 0;\n\t      },\n\t      //\n\t      //  For JS file loads, call the proper routine according to status\n\t      //\n\t      file: function (file,status) {\n\t        if (status < 0) {BASE.Ajax.loadTimeout(file)} else {BASE.Ajax.loadComplete(file)}\n\t      },\n\t      //\n\t      //  Call the hook with the required data\n\t      //\n\t      execute: function () {this.hook.call(this.object,this,this.data[0],this.data[1])},\n\t      //\n\t      //  Safari2 doesn't set the link's stylesheet, so we need to look in the\n\t      //  document.styleSheets array for the new sheet when it is created\n\t      //\n\t      checkSafari2: function (check,length,callback) {\n\t        if (check.time(callback)) return;\n\t        if (document.styleSheets.length > length &&\n\t            document.styleSheets[length].cssRules &&\n\t            document.styleSheets[length].cssRules.length)\n\t          {callback(check.STATUS.OK)} else {setTimeout(check,check.delay)}\n\t      },\n\t      //\n\t      //  Look for the stylesheets rules and check when they are defined\n\t      //  and no longer of length zero.  (This assumes there actually ARE\n\t      //  some rules in the stylesheet.)\n\t      //  \n\t      checkLength: function (check,node,callback) {\n\t        if (check.time(callback)) return;\n\t        var isStyle = 0; var sheet = (node.sheet || node.styleSheet);\n\t        try {if ((sheet.cssRules||sheet.rules||[]).length > 0) {isStyle = 1}} catch(err) {\n\t          if (err.message.match(/protected variable|restricted URI/)) {isStyle = 1}\n\t          else if (err.message.match(/Security error/)) {\n\t            // Firefox3 gives \"Security error\" for missing files, so\n\t            //   can't distinguish that from OK files on remote servers.\n\t            //   or OK files in different directory from local files.\n\t            isStyle = 1; // just say it is OK (can't really tell)\n\t          }\n\t        }\n\t        if (isStyle) {\n\t          // Opera 9.6 requires this setTimeout\n\t          setTimeout(BASE.Callback([callback,check.STATUS.OK]),0);\n\t        } else {\n\t          setTimeout(check,check.delay);\n\t        }\n\t      }\n\t    },\n\t\n\t    //\n\t    //  JavaScript code must call this when they are completely initialized\n\t    //  (this allows them to perform asynchronous actions before indicating\n\t    //  that they are complete).\n\t    //\n\t    loadComplete: function (file) {\n\t      file = this.fileURL(file);\n\t      var loading = this.loading[file];\n\t      if (loading && !loading.preloaded) {\n\t        BASE.Message.Clear(loading.message);\n\t        clearTimeout(loading.timeout);\n\t\tif (loading.script) {\n\t\t  if (SCRIPTS.length === 0) {setTimeout(REMOVESCRIPTS,0)}\n\t\t  SCRIPTS.push(loading.script);\n\t\t}\n\t        this.loaded[file] = loading.status; delete this.loading[file];\n\t        this.addHook(file,loading.callback);\n\t      } else {\n\t        if (loading) {delete this.loading[file]}\n\t        this.loaded[file] = this.STATUS.OK;\n\t        loading = {status: this.STATUS.OK}\n\t      }\n\t      if (!this.loadHooks[file]) {return null}\n\t      return this.loadHooks[file].Execute(loading.status);\n\t    },\n\t    \n\t    //\n\t    //  If a file fails to load within the timeout period (or the onerror handler\n\t    //  is called), this routine runs to signal the error condition.\n\t    //  \n\t    loadTimeout: function (file) {\n\t      if (this.loading[file].timeout) {clearTimeout(this.loading[file].timeout)}\n\t      this.loading[file].status = this.STATUS.ERROR;\n\t      this.loadError(file);\n\t      this.loadComplete(file);\n\t    },\n\t    \n\t    //\n\t    //  The default error hook for file load failures\n\t    //\n\t    loadError: function (file) {\n\t      BASE.Message.Set([\"LoadFailed\",\"File failed to load: %1\",file],null,2000);\n\t      BASE.Hub.signal.Post([\"file load error\",file]);\n\t    },\n\t\n\t    //\n\t    //  Defines a style sheet from a hash of style declarations (key:value pairs\n\t    //  where the key is the style selector and the value is a hash of CSS attributes \n\t    //  and values).\n\t    //\n\t    Styles: function (styles,callback) {\n\t      var styleString = this.StyleString(styles);\n\t      if (styleString === \"\") {\n\t        callback = BASE.Callback(callback);\n\t        callback();\n\t      } else {\n\t        var style = document.createElement(\"style\"); style.type = \"text/css\";\n\t        this.head = HEAD(this.head);\n\t        this.head.appendChild(style);\n\t        if (style.styleSheet && typeof(style.styleSheet.cssText) !== 'undefined') {\n\t          style.styleSheet.cssText = styleString;\n\t        } else {\n\t          style.appendChild(document.createTextNode(styleString));\n\t        }\n\t        callback = this.timer.create.call(this,callback,style);\n\t      }\n\t      return callback;\n\t    },\n\t    \n\t    //\n\t    //  Create a stylesheet string from a style declaration object\n\t    //\n\t    StyleString: function (styles) {\n\t      if (typeof(styles) === 'string') {return styles}\n\t      var string = \"\", id, style;\n\t      for (id in styles) {if (styles.hasOwnProperty(id)) {\n\t        if (typeof styles[id] === 'string') {\n\t          string += id + \" {\"+styles[id]+\"}\\n\";\n\t        } else if (BASE.Object.isArray(styles[id])) {\n\t          for (var i = 0; i < styles[id].length; i++) {\n\t            style = {}; style[id] = styles[id][i];\n\t            string += this.StyleString(style);\n\t          }\n\t        } else if (id.substr(0,6) === '@media') {\n\t          string += id + \" {\"+this.StyleString(styles[id])+\"}\\n\";\n\t        } else if (styles[id] != null) {\n\t          style = [];\n\t          for (var name in styles[id]) {if (styles[id].hasOwnProperty(name)) {\n\t            if (styles[id][name] != null) \n\t              {style[style.length] = name + ': ' + styles[id][name]}\n\t          }}\n\t          string += id +\" {\"+style.join('; ')+\"}\\n\";\n\t        }\n\t      }}\n\t      return string;\n\t    }\n\t  };\n\t  \n\t})(\"MathJax\");\n\t\n\t/**********************************************************/\n\t\n\tMathJax.HTML = {\n\t  //\n\t  //  Create an HTML element with given attributes and content.\n\t  //  The def parameter is an (optional) object containing key:value pairs\n\t  //  of the attributes and their values, and contents is an (optional)\n\t  //  array of strings to be inserted as text, or arrays of the form\n\t  //  [type,def,contents] that describes an HTML element to be inserted\n\t  //  into the current element.  Thus the contents can describe a complete\n\t  //  HTML snippet of arbitrary complexity.  E.g.:\n\t  //  \n\t  //    MathJax.HTML.Element(\"span\",{id:\"mySpan\",style{\"font-style\":\"italic\"}},[\n\t  //        \"(See the \",[\"a\",{href:\"http://www.mathjax.org\"},[\"MathJax home page\"]],\n\t  //        \" for more details.)\"]);\n\t  // \n\t  Element: function (type,def,contents) {\n\t    var obj = document.createElement(type), id;\n\t    if (def) {\n\t      if (def.hasOwnProperty(\"style\")) {\n\t        var style = def.style; def.style = {};\n\t        for (id in style) {if (style.hasOwnProperty(id))\n\t          {def.style[id.replace(/-([a-z])/g,this.ucMatch)] = style[id]}}\n\t      }\n\t      MathJax.Hub.Insert(obj,def);\n\t      for (id in def) {\n\t        if (id === \"role\" || id.substr(0,5) === \"aria-\") obj.setAttribute(id,def[id]);\n\t      }\n\t    }\n\t    if (contents) {\n\t      if (!MathJax.Object.isArray(contents)) {contents = [contents]}\n\t      for (var i = 0, m = contents.length; i < m; i++) {\n\t        if (MathJax.Object.isArray(contents[i])) {\n\t          obj.appendChild(this.Element(contents[i][0],contents[i][1],contents[i][2]));\n\t        } else if (type === \"script\") { // IE throws an error if script is added as a text node\n\t          this.setScript(obj, contents[i]);\n\t        } else {\n\t          obj.appendChild(document.createTextNode(contents[i]));\n\t        }\n\t      }\n\t    }\n\t    return obj;\n\t  },\n\t  ucMatch: function (match,c) {return c.toUpperCase()},\n\t  addElement: function (span,type,def,contents) {return span.appendChild(this.Element(type,def,contents))},\n\t  TextNode: function (text) {return document.createTextNode(text)},\n\t  addText: function (span,text) {return span.appendChild(this.TextNode(text))},\n\t\n\t  //\n\t  //  Set and get the text of a script\n\t  //\n\t  setScript: function (script,text) {\n\t    if (this.setScriptBug) {script.text = text} else {\n\t      while (script.firstChild) {script.removeChild(script.firstChild)}\n\t      this.addText(script,text);\n\t    }\n\t  },\n\t  getScript: function (script) {\n\t    var text = (script.text === \"\" ? script.innerHTML : script.text);\n\t    return text.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\");\n\t  },\n\t\n\t  //\n\t  //  Manage cookies\n\t  //\n\t  Cookie: {\n\t    prefix: \"mjx\",\n\t    expires: 365,\n\t    \n\t    //\n\t    //  Save an object as a named cookie\n\t    //\n\t    Set: function (name,def) {\n\t      var keys = [];\n\t      if (def) {\n\t        for (var id in def) {if (def.hasOwnProperty(id)) {\n\t          keys.push(id+\":\"+def[id].toString().replace(/&/g,\"&&\"));\n\t        }}\n\t      }\n\t      var cookie = this.prefix+\".\"+name+\"=\"+escape(keys.join('&;'));\n\t      if (this.expires) {\n\t        var time = new Date(); time.setDate(time.getDate() + this.expires);\n\t        cookie += '; expires='+time.toGMTString();\n\t      }\n\t      try {document.cookie = cookie+\"; path=/\"} catch (err) {} // ignore errors saving cookies\n\t    },\n\t    \n\t    //\n\t    //  Get the contents of a named cookie and incorporate\n\t    //  it into the given object (or return a fresh one)\n\t    //\n\t    Get: function (name,obj) {\n\t      if (!obj) {obj = {}}\n\t      var pattern = new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+name+\"=([^;]*)(?:;|$)\");\n\t      var match;\n\t      try {match = pattern.exec(document.cookie)} catch (err) {}; // ignore errors reading cookies\n\t      if (match && match[1] !== \"\") {\n\t        var keys = unescape(match[1]).split('&;');\n\t        for (var i = 0, m = keys.length; i < m; i++) {\n\t          match = keys[i].match(/([^:]+):(.*)/);\n\t          var value = match[2].replace(/&&/g,'&');\n\t          if (value === \"true\") {value = true} else if (value === \"false\") {value = false}\n\t            else if (value.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)) {value = parseFloat(value)}\n\t          obj[match[1]] = value;\n\t        }\n\t      }\n\t      return obj;\n\t    }\n\t  }\n\t    \n\t};\n\t\n\t\n\t/**********************************************************/\n\t\n\tMathJax.Localization = {\n\t  \n\t  locale: \"en\",\n\t  directory: \"[MathJax]/localization\",\n\t  strings: {\n\t    // Currently, this list is not modified by the MathJax-i18n script. You can\n\t    // run the following command in MathJax/unpacked/localization to update it:\n\t    //\n\t    // find . -name \"*.js\" | xargs grep menuTitle\\: | grep -v qqq | sed 's/^\\.\\/\\(.*\\)\\/.*\\.js\\:  /    \"\\1\"\\: \\{/' | sed 's/,$/\\},/' | sed 's/\"English\"/\"English\", isLoaded: true/' > tmp ; sort tmp > tmp2 ; sed '$ s/,$//' tmp2 ; rm tmp*\n\t    //\n\t    // This only takes languages with localization data so you must also add\n\t    // the languages that use a remap but are not translated at all.\n\t    //\n\t    \"ast\": {menuTitle: \"asturianu\"},\n\t    \"bg\": {menuTitle: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},\n\t    \"bcc\": {menuTitle: \"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},\n\t    \"br\": {menuTitle: \"brezhoneg\"},\n\t    \"ca\": {menuTitle: \"catal\\u00E0\"},\n\t    \"cdo\": {menuTitle: \"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},\n\t    \"cs\": {menuTitle: \"\\u010De\\u0161tina\"},\n\t    \"da\": {menuTitle: \"dansk\"},\n\t    \"de\": {menuTitle: \"Deutsch\"},\n\t    \"diq\": {menuTitle: \"Zazaki\"},\n\t    \"en\": {menuTitle: \"English\", isLoaded: true},\n\t    \"eo\": {menuTitle: \"Esperanto\"},\n\t    \"es\": {menuTitle: \"espa\\u00F1ol\"},\n\t    \"fa\": {menuTitle: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},\n\t    \"fi\": {menuTitle: \"suomi\"},\n\t    \"fr\": {menuTitle: \"fran\\u00E7ais\"},\n\t    \"gl\": {menuTitle: \"galego\"},\n\t    \"he\": {menuTitle: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},\n\t    \"ia\": {menuTitle: \"interlingua\"},\n\t    \"it\": {menuTitle: \"italiano\"},\n\t    \"ja\": {menuTitle: \"\\u65E5\\u672C\\u8A9E\"},\n\t    \"kn\": {menuTitle: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},\n\t    \"ko\": {menuTitle: \"\\uD55C\\uAD6D\\uC5B4\"},\n\t    \"lb\": {menuTitle: \"L\\u00EBtzebuergesch\"},\n\t    \"lki\": {menuTitle: \"\\u0644\\u06D5\\u06A9\\u06CC\"},\n\t    \"lt\": {menuTitle: \"lietuvi\\u0173\"},\n\t    \"mk\": {menuTitle: \"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},\n\t    \"nl\": {menuTitle: \"Nederlands\"},\n\t    \"oc\": {menuTitle: \"occitan\"},\n\t    \"pl\": {menuTitle: \"polski\"},\n\t    \"pt\": {menuTitle: \"portugus\\u00EA\"},\n\t    \"pt-br\": {menuTitle: \"portugu\\u00EAs do Brasil\"},\n\t    \"ru\": {menuTitle: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},\n\t    \"sco\": {menuTitle: \"Scots\"},\n\t    \"scn\": {menuTitle: \"sicilianu\"},\n\t    \"sl\": {menuTitle: \"sloven\\u0161\\u010Dina\"},\n\t    \"sv\": {menuTitle: \"svenska\"},\n\t    \"tr\": {menuTitle: \"T\\u00FCrk\\u00E7e\"},\n\t    \"uk\": {menuTitle: \"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},\n\t    \"vi\": {menuTitle: \"Ti\\u1EBFng Vi\\u1EC7t\"},\n\t    \"zh-hans\": {menuTitle: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"}\n\t  },\n\t\n\t  //\n\t  //  The pattern for substitution escapes:\n\t  //      %n or %{n} or %{plural:%n|option1|option1|...} or %c\n\t  //\n\t  pattern: /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,\n\t\n\t  SPLIT: (\"axb\".split(/(x)/).length === 3 ?\n\t    function (string,regex) {return string.split(regex)} :\n\t    //\n\t    //  IE8 and below don't do split() correctly when the pattern includes\n\t    //    parentheses (the split should include the matched exrepssions).\n\t    //    So implement it by hand here.\n\t    // \n\t    function (string,regex) {\n\t      var result = [], match, last = 0;\n\t      regex.lastIndex = 0;\n\t      while ((match = regex.exec(string))) {\n\t        result.push(string.substr(last,match.index-last));\n\t        result.push.apply(result,match.slice(1));\n\t        last = match.index + match[0].length;\n\t      }\n\t      result.push(string.substr(last));\n\t      return result;\n\t    }),\n\t  \n\t  _: function (id,phrase) {\n\t    if (MathJax.Object.isArray(phrase)) {return this.processSnippet(id,phrase)}\n\t    return this.processString(this.lookupPhrase(id,phrase),[].slice.call(arguments,2));\n\t  },\n\t  \n\t  processString: function (string,args,domain) {\n\t    //\n\t    //  Process arguments for substitution\n\t    //    If the argument is a snippet (and we are processing snippets) do so,\n\t    //    Otherwise, if it is a number, convert it for the lacale\n\t    //\n\t    var i, m, isArray = MathJax.Object.isArray;\n\t    for (i = 0, m = args.length; i < m; i++) {\n\t      if (domain && isArray(args[i])) {args[i] = this.processSnippet(domain,args[i])}\n\t    }\n\t    //\n\t    //  Split string at escapes and process them individually\n\t    //\n\t    var parts = this.SPLIT(string,this.pattern);\n\t    for (i = 1, m = parts.length; i < m; i += 2) {\n\t      var c = parts[i].charAt(0);  // first char will be { or \\d or a char to be kept literally\n\t      if (c >= \"0\" && c <= \"9\") {    // %n\n\t        parts[i] = args[parts[i]-1];\n\t        if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n\t      } else if (c === \"{\") {        // %{n} or %{plural:%n|...}\n\t        c = parts[i].substr(1);\n\t        if (c >= \"0\" && c <= \"9\") {  // %{n}\n\t          parts[i] = args[parts[i].substr(1,parts[i].length-2)-1];\n\t          if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n\t        } else {                     // %{plural:%n|...}\n\t          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n\t          if (match) {\n\t            if (match[1] === \"plural\") {\n\t              var n = args[match[2]-1];\n\t              if (typeof n === \"undefined\") {\n\t                parts[i] = \"???\";        // argument doesn't exist\n\t              } else {\n\t                n = this.plural(n) - 1;  // index of the form to use\n\t                var plurals = match[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/); // the parts (replacing %| with a special character)\n\t                if (n >= 0 && n < plurals.length) {\n\t                  parts[i] = this.processString(plurals[n].replace(/\\uEFEF/g,\"|\"),args,domain);\n\t                } else {\n\t                  parts[i] = \"???\";      // no string for this index\n\t                }\n\t              }\n\t            } else {parts[i] = \"%\"+parts[i]}  // not \"plural\", put back the % and leave unchanged\n\t          }\n\t        }\n\t      }\n\t      if (parts[i] == null) {parts[i] = \"???\"}\n\t    }\n\t    //\n\t    //  If we are not forming a snippet, return the completed string\n\t    //  \n\t    if (!domain) {return parts.join(\"\")}\n\t    //\n\t    //  We need to return an HTML snippet, so buld it from the\n\t    //  broken up string with inserted parts (that could be snippets)\n\t    //\n\t    var snippet = [], part = \"\";\n\t    for (i = 0; i < m; i++) {\n\t      part += parts[i]; i++;  // add the string and move on to substitution result\n\t      if (i < m) {\n\t        if (isArray(parts[i]))  {                // substitution was a snippet\n\t          snippet.push(part);                        // add the accumulated string\n\t          snippet = snippet.concat(parts[i]);        // concatenate the substution snippet\n\t          part = \"\";                                 // start accumulating a new string\n\t        } else {                                 // substitution was a string\n\t          part += parts[i];                          // add to accumulating string\n\t        }\n\t      }\n\t    }\n\t    if (part !== \"\") {snippet.push(part)} // add final string\n\t    return snippet;\n\t  },\n\t  \n\t  processSnippet: function (domain,snippet) {\n\t    var result = [];   // the new snippet\n\t    //\n\t    //  Look through the original snippet for\n\t    //   strings or snippets to translate\n\t    //\n\t    for (var i = 0, m = snippet.length; i < m; i++) {\n\t      if (MathJax.Object.isArray(snippet[i])) {\n\t        //\n\t        //  This could be a sub-snippet:\n\t        //    [\"tag\"] or [\"tag\",{properties}] or [\"tag\",{properties},snippet]\n\t        //  Or it could be something to translate:\n\t        //    [id,string,args] or [domain,snippet]\n\t        var data = snippet[i];\n\t        if (typeof data[1] === \"string\") {        // [id,string,args]\n\t          var id = data[0]; if (!MathJax.Object.isArray(id)) {id = [domain,id]}\n\t          var phrase = this.lookupPhrase(id,data[1]);\n\t          result = result.concat(this.processMarkdown(phrase,data.slice(2),domain));\n\t        } else if (MathJax.Object.isArray(data[1])) {    // [domain,snippet]\n\t          result = result.concat(this.processSnippet.apply(this,data));\n\t        } else if (data.length >= 3) {            // [\"tag\",{properties},snippet]\n\t          result.push([data[0],data[1],this.processSnippet(domain,data[2])]);\n\t        } else {                                  // [\"tag\"] or [\"tag\",{properties}]\n\t          result.push(snippet[i]);\n\t        }\n\t      } else {                                    // a string\n\t        result.push(snippet[i]);\n\t      }\n\t    }\n\t    return result;\n\t  },\n\t  \n\t  markdownPattern: /(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,\n\t  //   %c or *bold*, **italics**, ***bold-italics***, or `code`, or [link](url)\n\t   \n\t  processMarkdown: function (phrase,args,domain) {\n\t    var result = [], data;\n\t    //\n\t    //  Split the string by the Markdown pattern\n\t    //    (the text blocks are separated by \n\t    //      c,stars,star-text,backtics,code-text,link-text,URL).\n\t    //  Start with teh first text string from the split.\n\t    //\n\t    var parts = phrase.split(this.markdownPattern);\n\t    var string = parts[0];\n\t    //\n\t    //  Loop through the matches and process them\n\t    //\n\t    for (var i = 1, m = parts.length; i < m; i += 8) {\n\t      if (parts[i+1]) {        // stars (for bold/italic)\n\t        //\n\t        //  Select the tag to use by number of stars (three stars requires two tags)\n\t        //\n\t        data = this.processString(parts[i+2],args,domain);\n\t        if (!MathJax.Object.isArray(data)) {data = [data]}\n\t        data = [[\"b\",\"i\",\"i\"][parts[i+1].length-1],{},data]; // number of stars determines type\n\t        if (parts[i+1].length === 3) {data = [\"b\",{},data]}  // bold-italic\n\t      } else if (parts[i+3]) { //  backtics (for code)\n\t        //\n\t        //  Remove one leading or trailing space, and process substitutions\n\t        //  Make a <code> tag\n\t        //\n\t        data = this.processString(parts[i+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),args,domain);\n\t        if (!MathJax.Object.isArray(data)) {data = [data]}\n\t        data = [\"code\",{},data];\n\t      } else if (parts[i+5]) { //  hyperlink\n\t        //\n\t        //  Process the link text, and make an <a> tag with the URL\n\t        //\n\t        data = this.processString(parts[i+5],args,domain);\n\t        if (!MathJax.Object.isArray(data)) {data = [data]}\n\t        data = [\"a\",{href:this.processString(parts[i+6],args),target:\"_blank\"},data];\n\t      } else {\n\t        //\n\t        //  Escaped character (%c) gets added into the string.\n\t        //\n\t        string += parts[i]; data = null;\n\t      }\n\t      //\n\t      //  If there is a tag to insert,\n\t      //     Add any pending string, then push the tag\n\t      //\n\t      if (data) {\n\t        result = this.concatString(result,string,args,domain);\n\t        result.push(data); string = \"\";\n\t      }\n\t      //\n\t      //  Process the string that follows matches pattern\n\t      //\n\t      if (parts[i+7] !== \"\") {string += parts[i+7]}\n\t    };\n\t    //\n\t    //  Add any pending string and return the resulting snippet\n\t    //\n\t    result = this.concatString(result,string,args,domain);\n\t    return result;\n\t  },\n\t  concatString: function (result,string,args,domain) {\n\t    if (string != \"\") {\n\t      //\n\t      //  Process the substutions.\n\t      //  If the result is not a snippet, turn it into one.\n\t      //  Then concatenate the snippet to the current one\n\t      //\n\t      string = this.processString(string,args,domain);\n\t      if (!MathJax.Object.isArray(string)) {string = [string]}\n\t      result = result.concat(string);\n\t    }\n\t    return result;\n\t  },\n\t\n\t  lookupPhrase: function (id,phrase,domain) {\n\t    //\n\t    //  Get the domain and messageID\n\t    //\n\t    if (!domain) {domain = \"_\"}\n\t    if (MathJax.Object.isArray(id)) {domain = (id[0] || \"_\"); id = (id[1] || \"\")}\n\t    //\n\t    //  Check if the data is available and if not,\n\t    //    load it and throw a restart error so the calling\n\t    //    code can wait for the load and try again.\n\t    //\n\t    var load = this.loadDomain(domain);\n\t    if (load) {MathJax.Hub.RestartAfter(load)}\n\t    //\n\t    //  Look up the message in the localization data\n\t    //    (if not found, the original English is used)\n\t    //\n\t    var localeData = this.strings[this.locale];\n\t    if (localeData) {\n\t      if (localeData.domains && domain in localeData.domains) {\n\t        var domainData = localeData.domains[domain];\n\t        if (domainData.strings && id in domainData.strings)\n\t          {phrase = domainData.strings[id]}\n\t      }\n\t    }\n\t    //\n\t    //  return the translated phrase\n\t    //\n\t    return phrase;\n\t  },\n\t  \n\t  //\n\t  //  Load a langauge data file from the proper\n\t  //  directory and file.\n\t  //\n\t  loadFile: function (file,data,callback) {\n\t    callback = MathJax.Callback(callback);\n\t    file = (data.file || file);  // the data's file name or the default name\n\t    if (!file.match(/\\.js$/)) {file += \".js\"} // add .js if needed\n\t    //\n\t    //  Add the directory if the file doesn't\n\t    //  contain a full URL already.\n\t    //\n\t    if (!file.match(/^([a-z]+:|\\[MathJax\\])/)) {\n\t      var dir = (this.strings[this.locale].directory  || \n\t                 this.directory + \"/\" + this.locale ||\n\t                 \"[MathJax]/localization/\" + this.locale);\n\t      file = dir + \"/\" + file;\n\t    }\n\t    //\n\t    //  Load the file and mark the data as loaded (even if it\n\t    //  failed to load, so we don't continue to try to load it\n\t    //  over and over).\n\t    //\n\t    var load = MathJax.Ajax.Require(file,function () {data.isLoaded = true; return callback()});\n\t    //\n\t    //  Return the callback if needed, otherwise null.\n\t    //\n\t    return (load.called ? null : load);\n\t  },\n\t  \n\t  //\n\t  //  Check to see if the localization data are loaded\n\t  //  for the given domain; if not, load the data file,\n\t  //  and return a callback for the loading operation.\n\t  //  Otherwise return null (data are loaded).\n\t  //  \n\t  loadDomain: function (domain,callback) {\n\t    var load, localeData = this.strings[this.locale];\n\t    if (localeData) {\n\t      if (!localeData.isLoaded) {\n\t        load = this.loadFile(this.locale,localeData);\n\t        if (load) {\n\t          return MathJax.Callback.Queue(\n\t            load,[\"loadDomain\",this,domain] // call again to load domain\n\t          ).Push(callback||{});\n\t        }\n\t      }\n\t      if (localeData.domains && domain in localeData.domains) {\n\t        var domainData = localeData.domains[domain];\n\t        if (!domainData.isLoaded) {\n\t          load = this.loadFile(domain,domainData);\n\t          if (load) {return MathJax.Callback.Queue(load).Push(callback)}\n\t        }\n\t      }\n\t    } \n\t    // localization data are loaded, so just do the callback\n\t    return MathJax.Callback(callback)();\n\t  },\n\t\n\t  //\n\t  //  Perform a function, properly handling\n\t  //  restarts due to localization file loads.\n\t  //\n\t  //  Note that this may return before the function\n\t  //  has been called successfully, so you should\n\t  //  consider fn as running asynchronously.  (Callbacks\n\t  //  can be used to synchronize it with other actions.)\n\t  //\n\t  Try: function (fn) {\n\t    fn = MathJax.Callback(fn); fn.autoReset = true;\n\t    try {fn()} catch (err) {\n\t      if (!err.restart) {throw err}\n\t      MathJax.Callback.After([\"Try\",this,fn],err.restart);\n\t    }\n\t  },\n\t\n\t  //\n\t  //  Reset the current language\n\t  //\n\t  resetLocale: function(locale) {\n\t    // Selection algorithm:\n\t    // 1) Downcase locale name (e.g. \"en-US\" => \"en-us\")\n\t    // 2) Try a parent language (e.g. \"en-us\" => \"en\")\n\t    // 3) Try the fallback specified in the data (e.g. \"pt\" => \"pt-br\")\n\t    // 4) Otherwise don't change the locale.\n\t    if (!locale) return;\n\t    locale = locale.toLowerCase();\n\t    while (!this.strings[locale]) {\n\t      var dashPos = locale.lastIndexOf(\"-\");\n\t      if (dashPos === -1) return;\n\t      locale = locale.substring(0, dashPos);\n\t    }\n\t    var remap = this.strings[locale].remap;\n\t    this.locale = remap ? remap : locale;\n\t  },\n\t\n\t  //\n\t  //  Set the current language\n\t  //\n\t  setLocale: function(locale) {\n\t    this.resetLocale(locale);\n\t    if (MathJax.Menu) {this.loadDomain(\"MathMenu\")}\n\t  },\n\t\n\t  //\n\t  //  Add or update a language or domain\n\t  //\n\t  addTranslation: function (locale,domain,definition) {\n\t    var data = this.strings[locale], isNew = false;\n\t    if (!data) {data = this.strings[locale] = {}; isNew = true}\n\t    if (!data.domains) {data.domains = {}}\n\t    if (domain) {\n\t      if (!data.domains[domain]) {data.domains[domain] = {}}\n\t      data = data.domains[domain];\n\t    }\n\t    MathJax.Hub.Insert(data,definition);\n\t    if (isNew && MathJax.Menu.menu) {MathJax.Menu.CreateLocaleMenu()}\n\t  },\n\t  \n\t  //\n\t  //  Set CSS for an element based on font requirements\n\t  //\n\t  setCSS: function (div) {\n\t    var locale = this.strings[this.locale];\n\t    if (locale) {\n\t      if (locale.fontFamily) {div.style.fontFamily = locale.fontFamily}\n\t      if (locale.fontDirection) {\n\t        div.style.direction = locale.fontDirection;\n\t        if (locale.fontDirection === \"rtl\") {div.style.textAlign = \"right\"}\n\t      }\n\t    }\n\t    return div;\n\t  },\n\t  \n\t  //\n\t  //  Get the language's font family or direction\n\t  //\n\t  fontFamily: function () {\n\t    var locale = this.strings[this.locale];\n\t    return (locale ? locale.fontFamily : null);\n\t  },\n\t  fontDirection: function () {\n\t    var locale = this.strings[this.locale];\n\t    return (locale ? locale.fontDirection : null);\n\t  },\n\t\n\t  //\n\t  //  Get the language's plural index for a number\n\t  //\n\t  plural: function (n) {\n\t    var locale = this.strings[this.locale];\n\t    if (locale && locale.plural) {return locale.plural(n)}\n\t    // default\n\t    if (n == 1) {return 1} // one\n\t    return 2; // other\n\t  },\n\t\n\t  //\n\t  //  Convert a number to language-specific form\n\t  //\n\t  number: function(n) {\n\t    var locale = this.strings[this.locale];\n\t    if (locale && locale.number) {return locale.number(n)}\n\t    // default\n\t    return n;\n\t  }\n\t};\n\t\n\t\n\t/**********************************************************/\n\t\n\tMathJax.Message = {\n\t  ready: false,  // used to tell when the styles are available\n\t  log: [{}], current: null,\n\t  textNodeBug: (navigator.vendor === \"Apple Computer, Inc.\" &&\n\t                typeof navigator.vendorSub === \"undefined\") ||\n\t               (window.hasOwnProperty && window.hasOwnProperty(\"konqueror\")), // Konqueror displays some gibberish with text.nodeValue = \"...\"\n\t  \n\t  styles: {\n\t    \"#MathJax_Message\": {\n\t      position: \"fixed\", left: \"1px\", bottom: \"2px\",\n\t      'background-color': \"#E6E6E6\",  border: \"1px solid #959595\",\n\t      margin: \"0px\", padding: \"2px 8px\",\n\t      'z-index': \"102\", color: \"black\", 'font-size': \"80%\",\n\t      width: \"auto\", 'white-space': \"nowrap\"\n\t    },\n\t    \n\t    \"#MathJax_MSIE_Frame\": {\n\t      position: \"absolute\",\n\t      top:0, left: 0, width: \"0px\", 'z-index': 101,\n\t      border: \"0px\", margin: \"0px\", padding: \"0px\"\n\t    }\n\t  },\n\t  \n\t  browsers: {\n\t    MSIE: function (browser) {\n\t      MathJax.Message.msieFixedPositionBug = ((document.documentMode||0) < 7);\n\t      if (MathJax.Message.msieFixedPositionBug) \n\t        {MathJax.Hub.config.styles[\"#MathJax_Message\"].position = \"absolute\"}\n\t      MathJax.Message.quirks = (document.compatMode === \"BackCompat\");\n\t    },\n\t    Chrome: function (browser) {\n\t      MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom = \"1.5em\";\n\t      MathJax.Hub.config.styles[\"#MathJax_Message\"].left = \"1em\";\n\t    }\n\t  },\n\t  \n\t  Init: function (styles) {\n\t    if (styles) {this.ready = true}\n\t    if (!document.body || !this.ready) {return false}\n\t    //\n\t    //  ASCIIMathML replaces the entire page with a copy of itself (@#!#%@!!)\n\t    //  so check that this.div is still part of the page, otherwise look up\n\t    //  the copy and use that.\n\t    //\n\t    if (this.div && this.div.parentNode == null) {\n\t      this.div = document.getElementById(\"MathJax_Message\");\n\t      if (this.div) {this.text = this.div.firstChild}\n\t    }\n\t    if (!this.div) {\n\t      var frame = document.body;\n\t      if (this.msieFixedPositionBug && window.attachEvent) {\n\t        frame = this.frame = this.addDiv(document.body); frame.removeAttribute(\"id\");\n\t        frame.style.position = \"absolute\";\n\t        frame.style.border = frame.style.margin = frame.style.padding = \"0px\";\n\t        frame.style.zIndex = \"101\"; frame.style.height = \"0px\";\n\t        frame = this.addDiv(frame);\n\t        frame.id = \"MathJax_MSIE_Frame\";\n\t        window.attachEvent(\"onscroll\",this.MoveFrame);\n\t        window.attachEvent(\"onresize\",this.MoveFrame);\n\t        this.MoveFrame();\n\t      }\n\t      this.div = this.addDiv(frame); this.div.style.display = \"none\";\n\t      this.text = this.div.appendChild(document.createTextNode(\"\"));\n\t    }\n\t    return true;\n\t  },\n\t  \n\t  addDiv: function (parent) {\n\t    var div = document.createElement(\"div\");\n\t    div.id = \"MathJax_Message\";\n\t    if (parent.firstChild) {parent.insertBefore(div,parent.firstChild)}\n\t      else {parent.appendChild(div)}\n\t    return div;\n\t  },\n\t  \n\t  MoveFrame: function () {\n\t    var body = (MathJax.Message.quirks ? document.body : document.documentElement);\n\t    var frame = MathJax.Message.frame;\n\t    frame.style.left = body.scrollLeft + 'px';\n\t    frame.style.top = body.scrollTop + 'px';\n\t    frame.style.width = body.clientWidth + 'px';\n\t    frame = frame.firstChild;\n\t    frame.style.height = body.clientHeight + 'px';\n\t  },\n\t\n\t  localize: function (message) {\n\t    return MathJax.Localization._(message,message);\n\t  },\n\t  \n\t  filterText: function (text,n,id) {\n\t    if (MathJax.Hub.config.messageStyle === \"simple\") {\n\t      if (id === \"LoadFile\") {\n\t        if (!this.loading) {this.loading = this.localize(\"Loading\") + \" \"}\n\t        text = this.loading; this.loading += \".\";\n\t      } else if (id === \"ProcessMath\") {\n\t        if (!this.processing) {this.processing = this.localize(\"Processing\") + \" \"}\n\t        text = this.processing; this.processing += \".\";\n\t      } else if (id === \"TypesetMath\") {\n\t        if (!this.typesetting) {this.typesetting = this.localize(\"Typesetting\") + \" \"}\n\t        text = this.typesetting; this.typesetting += \".\";\n\t      }\n\t    }\n\t    return text;\n\t  },\n\t  \n\t  clearCounts: function () {\n\t    delete this.loading;\n\t    delete this.processing;\n\t    delete this.typesetting;\n\t  },\n\t  \n\t  Set: function (text,n,clearDelay) {\n\t    if (n == null) {n = this.log.length; this.log[n] = {}}\n\t    //\n\t    //  Translate message if it is [id,message,arguments]\n\t    //\n\t    var id = \"\";\n\t    if (MathJax.Object.isArray(text)) {\n\t      id = text[0]; if (MathJax.Object.isArray(id)) {id = id[1]}\n\t      //\n\t      // Localization._() will throw a restart error if a localization file\n\t      //   needs to be loaded, so trap that and redo the Set() call\n\t      //   after it is loaded.\n\t      //\n\t      try {\n\t        text = MathJax.Localization._.apply(MathJax.Localization,text);\n\t      } catch (err) {\n\t        if (!err.restart) {throw err}\n\t        if (!err.restart.called) {\n\t          //\n\t          //  Mark it so we can tell if the Clear() comes before the message is displayed\n\t          //\n\t          if (this.log[n].restarted == null) {this.log[n].restarted = 0}\n\t          this.log[n].restarted++; delete this.log[n].cleared;\n\t          MathJax.Callback.After([\"Set\",this,text,n,clearDelay],err.restart);\n\t          return n;\n\t        }\n\t      }\n\t    }\n\t    //\n\t    // Clear the timout timer.\n\t    //\n\t    if (this.timer) {clearTimeout(this.timer); delete this.timer}\n\t    //\n\t    //  Save the message and filtered message.\n\t    //\n\t    this.log[n].text = text; this.log[n].filteredText = text = this.filterText(text,n,id);\n\t    //\n\t    //  Hook the message into the message list so we can tell\n\t    //   what message to put up when this one is removed.\n\t    //\n\t    if (typeof(this.log[n].next) === \"undefined\") {\n\t      this.log[n].next = this.current;\n\t      if (this.current != null) {this.log[this.current].prev = n}\n\t      this.current = n;\n\t    }\n\t    //\n\t    //  Show the message if it is the currently active one.\n\t    //\n\t    if (this.current === n && MathJax.Hub.config.messageStyle !== \"none\") {\n\t      if (this.Init()) {\n\t        if (this.textNodeBug) {this.div.innerHTML = text} else {this.text.nodeValue = text}\n\t        this.div.style.display = \"\";\n\t        if (this.status) {window.status = \"\"; delete this.status}\n\t      } else {\n\t        window.status = text;\n\t        this.status = true;\n\t      }\n\t    }\n\t    //\n\t    //  Check if the message was resetarted to load a localization file\n\t    //    and if it has been cleared in the meanwhile.\n\t    //\n\t    if (this.log[n].restarted) {\n\t      if (this.log[n].cleared) {clearDelay = 0}\n\t      if (--this.log[n].restarted === 0) {delete this.log[n].cleared}\n\t    }\n\t    //\n\t    //  Check if we need to clear the message automatically.\n\t    //\n\t    if (clearDelay) {setTimeout(MathJax.Callback([\"Clear\",this,n]),clearDelay)}\n\t      else if (clearDelay == 0) {this.Clear(n,0)}\n\t    //\n\t    //  Return the message number.\n\t    //\n\t    return n;\n\t  },\n\t  \n\t  Clear: function (n,delay) {\n\t    //\n\t    //  Detatch the message from the active list.\n\t    //\n\t    if (this.log[n].prev != null) {this.log[this.log[n].prev].next = this.log[n].next}\n\t    if (this.log[n].next != null) {this.log[this.log[n].next].prev = this.log[n].prev}\n\t    //\n\t    //  If it is the current message, get the next one to show.\n\t    //\n\t    if (this.current === n) {\n\t      this.current = this.log[n].next;\n\t      if (this.text) {\n\t        if (this.div.parentNode == null) {this.Init()} // see ASCIIMathML comments above\n\t        if (this.current == null) {\n\t          //\n\t          //  If there are no more messages, remove the message box.\n\t          //\n\t          if (this.timer) {clearTimeout(this.timer); delete this.timer}\n\t          if (delay == null) {delay = 600}\n\t          if (delay === 0) {this.Remove()}\n\t\t    else {this.timer = setTimeout(MathJax.Callback([\"Remove\",this]),delay)}\n\t        } else if (MathJax.Hub.config.messageStyle !== \"none\") {\n\t          //\n\t          //  If there is an old message, put it in place\n\t          //\n\t          if (this.textNodeBug) {this.div.innerHTML = this.log[this.current].filteredText}\n\t                           else {this.text.nodeValue = this.log[this.current].filteredText}\n\t        }\n\t        if (this.status) {window.status = \"\"; delete this.status}\n\t      } else if (this.status) {\n\t        window.status = (this.current == null ? \"\" : this.log[this.current].text);\n\t      }\n\t    }\n\t    //\n\t    //  Clean up the log data no longer needed\n\t    //\n\t    delete this.log[n].next; delete this.log[n].prev;\n\t    delete this.log[n].filteredText;\n\t    //\n\t    //  If this is a restarted localization message, mark that it has been cleared\n\t    //    while waiting for the file to load.\n\t    //\n\t    if (this.log[n].restarted) {this.log[n].cleared = true}\n\t  },\n\t  \n\t  Remove: function () {\n\t    // FIXME:  do a fade out or something else interesting?\n\t    this.text.nodeValue = \"\";\n\t    this.div.style.display = \"none\";\n\t  },\n\t  \n\t  File: function (file) {\n\t    return this.Set([\"LoadFile\",\"Loading %1\",file],null,null);\n\t  },\n\t  \n\t  Log: function () {\n\t    var strings = [];\n\t    for (var i = 1, m = this.log.length; i < m; i++) {strings[i] = this.log[i].text}\n\t    return strings.join(\"\\n\");\n\t  }\n\t\n\t};\n\t\n\t/**********************************************************/\n\t\n\tMathJax.Hub = {\n\t  config: {\n\t    root: \"\",\n\t    config: [],      // list of configuration files to load\n\t    styleSheets: [], // list of CSS files to load\n\t    styles: {        // styles to generate in-line\n\t      \".MathJax_Preview\": {color: \"#888\"}\n\t    },\n\t    jax: [],         // list of input and output jax to load\n\t    extensions: [],  // list of extensions to load\n\t    preJax: null,    // pattern to remove from before math script tag\n\t    postJax: null,   // pattern to remove from after math script tag\n\t    displayAlign: 'center',       // how to align displayed equations (left, center, right)\n\t    displayIndent: '0',           // indentation for displayed equations (when not centered)\n\t    preRemoveClass: 'MathJax_Preview', // class of objects to remove preceeding math script\n\t    showProcessingMessages: true, // display \"Processing math: nn%\" messages or not\n\t    messageStyle: \"normal\",       // set to \"none\" or \"simple\" (for \"Loading...\" and \"Processing...\")\n\t    delayStartupUntil: \"none\",    // set to \"onload\" to delay setup until the onload handler runs\n\t                                  // set to \"configured\" to delay startup until MathJax.Hub.Configured() is called\n\t                                  // set to a Callback to wait for before continuing with the startup\n\t    skipStartupTypeset: false,    // set to true to skip PreProcess and Process during startup\n\t    elements: [],             // array of elements to process when none is given explicitly\n\t    positionToHash: true,    // after initial typeset pass, position to #hash location?\n\t     \n\t    showMathMenu: true,      // attach math context menu to typeset math?\n\t    showMathMenuMSIE: true,  // separtely determine if MSIE should have math menu\n\t                             //  (since the code for that is a bit delicate)\n\t    \n\t    menuSettings: {\n\t      zoom: \"None\",        //  when to do MathZoom\n\t      CTRL: false,         //    require CTRL for MathZoom?\n\t      ALT: false,          //    require Alt or Option?\n\t      CMD: false,          //    require CMD?\n\t      Shift: false,        //    require Shift?\n\t      discoverable: false, //  make math menu discoverable on hover?\n\t      zscale: \"200%\",      //  the scaling factor for MathZoom\n\t      renderer: null,      //  set when Jax are loaded\n\t      font: \"Auto\",        //  what font HTML-CSS should use\n\t      context: \"MathJax\",  //  or \"Browser\" for pass-through to browser menu\n\t      locale: null,        //  the language to use for messages\n\t      mpContext: false,    //  true means pass menu events to MathPlayer in IE\n\t      mpMouse: false,      //  true means pass mouse events to MathPlayer in IE\n\t      texHints: true,      //  include class names for TeXAtom elements\n\t      FastPreview: null,   //  use PreviewHTML output as preview?\n\t      assistiveMML: null,  //  include hidden MathML for screen readers?\n\t      inTabOrder: true,    //  set to false if math elements should be included in the tabindex\n\t      semantics: false     //  add semantics tag with original form in MathML output\n\t    },\n\t    \n\t    errorSettings: {\n\t       // localized HTML snippet structure for message to use\n\t      message: [\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],\n\t      style: {color: \"#CC0000\", \"font-style\":\"italic\"}  // style for message\n\t    },\n\t    \n\t    ignoreMMLattributes: {}  // attributes not to copy to HTML-CSS or SVG output\n\t                             //   from MathML input (in addition to the ones in MML.nocopyAttributes).\n\t                             //   An id set to true will be ignored, one set to false will\n\t                             //   be allowed (even if other criteria normally would prevent\n\t                             //   it from being copied); use false carefully!\n\t  },\n\t  \n\t  preProcessors: MathJax.Callback.Hooks(true), // list of callbacks for preprocessing (initialized by extensions)\n\t  inputJax: {},          // mime-type mapped to input jax (by registration)\n\t  outputJax: {order:{}}, // mime-type mapped to output jax list (by registration)\n\t\n\t  processSectionDelay: 50, // pause between input and output phases of processing\n\t  processUpdateTime: 250, // time between screen updates when processing math (milliseconds)\n\t  processUpdateDelay: 10, // pause between screen updates to allow other processing (milliseconds)\n\t\n\t  signal: MathJax.Callback.Signal(\"Hub\"), // Signal used for Hub events\n\t\n\t  Config: function (def) {\n\t    this.Insert(this.config,def);\n\t    if (this.config.Augment) {this.Augment(this.config.Augment)}\n\t  },\n\t  CombineConfig: function (name,def) {\n\t    var config = this.config, id, parent; name = name.split(/\\./);\n\t    for (var i = 0, m = name.length; i < m; i++) {\n\t      id = name[i]; if (!config[id]) {config[id] = {}}\n\t      parent = config; config = config[id];\n\t    }\n\t    parent[id] = config = this.Insert(def,config);\n\t    return config;\n\t  },\n\t  \n\t  Register: {\n\t    PreProcessor: function () {return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},\n\t    MessageHook: function () {return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},\n\t    StartupHook: function () {return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},\n\t    LoadHook: function () {return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}\n\t  },\n\t  UnRegister: {\n\t    PreProcessor: function (hook) {MathJax.Hub.preProcessors.Remove(hook)},\n\t    MessageHook: function (hook) {MathJax.Hub.signal.RemoveHook(hook)},\n\t    StartupHook: function (hook) {MathJax.Hub.Startup.signal.RemoveHook(hook)},\n\t    LoadHook: function (hook) {MathJax.Ajax.removeHook(hook)}\n\t  },\n\t  \n\t  getAllJax: function (element) {\n\t    var jax = [], scripts = this.elementScripts(element);\n\t    for (var i = 0, m = scripts.length; i < m; i++) {\n\t      if (scripts[i].MathJax && scripts[i].MathJax.elementJax)\n\t        {jax.push(scripts[i].MathJax.elementJax)}\n\t    }\n\t    return jax;\n\t  },\n\t  \n\t  getJaxByType: function (type,element) {\n\t    var jax = [], scripts = this.elementScripts(element);\n\t    for (var i = 0, m = scripts.length; i < m; i++) {\n\t      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n\t          scripts[i].MathJax.elementJax.mimeType === type)\n\t            {jax.push(scripts[i].MathJax.elementJax)}\n\t    }\n\t    return jax;\n\t  },\n\t  \n\t  getJaxByInputType: function (type,element) {\n\t    var jax = [], scripts = this.elementScripts(element);\n\t    for (var i = 0, m = scripts.length; i < m; i++) {\n\t      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n\t          scripts[i].type && scripts[i].type.replace(/ *;(.|\\s)*/,\"\") === type)\n\t        {jax.push(scripts[i].MathJax.elementJax)}\n\t    }\n\t    return jax;\n\t  },\n\t  \n\t  getJaxFor: function (element) {\n\t    if (typeof(element) === 'string') {element = document.getElementById(element)}\n\t    if (element && element.MathJax) {return element.MathJax.elementJax}\n\t    if (this.isMathJaxNode(element)) {\n\t      if (!element.isMathJax) {element = element.firstChild}  // for NativeMML output\n\t      while (element && !element.jaxID) {element = element.parentNode}\n\t      if (element) {return MathJax.OutputJax[element.jaxID].getJaxFromMath(element)}\n\t    }\n\t    return null;\n\t  },\n\t  \n\t  isJax: function (element) {\n\t    if (typeof(element) === 'string') {element = document.getElementById(element)}\n\t    if (this.isMathJaxNode(element)) {return 1}\n\t    if (element && (element.tagName||\"\").toLowerCase() === 'script') {\n\t      if (element.MathJax) \n\t        {return (element.MathJax.state === MathJax.ElementJax.STATE.PROCESSED ? 1 : -1)}\n\t      if (element.type && this.inputJax[element.type.replace(/ *;(.|\\s)*/,\"\")]) {return -1}\n\t    }\n\t    return 0;\n\t  },\n\t  isMathJaxNode: function (element) {\n\t    return !!element && (element.isMathJax || (element.className||\"\") === \"MathJax_MathML\");\n\t  },\n\t  \n\t  setRenderer: function (renderer,type) {\n\t    if (!renderer) return;\n\t    if (!MathJax.OutputJax[renderer]) {\n\t      this.config.menuSettings.renderer = \"\";\n\t      var file = \"[MathJax]/jax/output/\"+renderer+\"/config.js\";\n\t      return MathJax.Ajax.Require(file,[\"setRenderer\",this,renderer,type]);\n\t    } else {\n\t      this.config.menuSettings.renderer = renderer;\n\t      if (type == null) {type = \"jax/mml\"}\n\t      var jax = this.outputJax;\n\t      if (jax[type] && jax[type].length) {\n\t        if (renderer !== jax[type][0].id) {\n\t          jax[type].unshift(MathJax.OutputJax[renderer]);\n\t          return this.signal.Post([\"Renderer Selected\",renderer]);\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  },\n\t\n\t  Queue: function () {\n\t    return this.queue.Push.apply(this.queue,arguments);\n\t  },\n\t  \n\t  Typeset: function (element,callback) {\n\t    if (!MathJax.isReady) return null;\n\t    var ec = this.elementCallback(element,callback);\n\t    if (ec.count) {\n\t      var queue = MathJax.Callback.Queue(\n\t        [\"PreProcess\",this,ec.elements],\n\t        [\"Process\",this,ec.elements]\n\t      );\n\t    }\n\t    return queue.Push(ec.callback);\n\t  },\n\t  \n\t  PreProcess: function (element,callback) {\n\t    var ec = this.elementCallback(element,callback);\n\t    var queue = MathJax.Callback.Queue();\n\t    if (ec.count) {\n\t      var elements = (ec.count === 1 ? [ec.elements] : ec.elements);\n\t      queue.Push([\"Post\",this.signal,[\"Begin PreProcess\",ec.elements]]);\n\t      for (var i = 0, m = elements.length; i < m; i++) {\n\t        if (elements[i]) {queue.Push([\"Execute\",this.preProcessors,elements[i]])}\n\t      }\n\t      queue.Push([\"Post\",this.signal,[\"End PreProcess\",ec.elements]]);\n\t    }\n\t    return queue.Push(ec.callback);\n\t  },\n\t\n\t  Process:   function (element,callback) {return this.takeAction(\"Process\",element,callback)},\n\t  Update:    function (element,callback) {return this.takeAction(\"Update\",element,callback)},\n\t  Reprocess: function (element,callback) {return this.takeAction(\"Reprocess\",element,callback)},\n\t  Rerender:  function (element,callback) {return this.takeAction(\"Rerender\",element,callback)},\n\t  \n\t  takeAction: function (action,element,callback) {\n\t    var ec = this.elementCallback(element,callback);\n\t    var elements = ec.elements;\n\t    var queue = MathJax.Callback.Queue([\"Clear\",this.signal]);\n\t    var state = {\n\t      scripts: [],                  // filled in by prepareScripts\n\t      start: new Date().getTime(),  // timer for processing messages\n\t      i: 0, j: 0,                   // current script, current jax\n\t      jax: {},                      // scripts grouped by output jax\n\t      jaxIDs: []                    // id's of jax used\n\t    };\n\t    if (ec.count) {\n\t      var delay = [\"Delay\",MathJax.Callback,this.processSectionDelay];\n\t      if (!delay[2]) {delay = {}}\n\t      queue.Push(\n\t        [\"clearCounts\",MathJax.Message],\n\t        [\"Post\",this.signal,[\"Begin \"+action,elements]],\n\t        [\"Post\",this.signal,[\"Begin Math\",elements,action]],\n\t        [\"prepareScripts\",this,action,elements,state],\n\t        [\"Post\",this.signal,[\"Begin Math Input\",elements,action]],\n\t        [\"processInput\",this,state],\n\t        [\"Post\",this.signal,[\"End Math Input\",elements,action]],\n\t        delay,\n\t        [\"prepareOutput\",this,state,\"preProcess\"],\n\t        delay,\n\t        [\"Post\",this.signal,[\"Begin Math Output\",elements,action]],\n\t        [\"processOutput\",this,state],\n\t        [\"Post\",this.signal,[\"End Math Output\",elements,action]],\n\t        delay,\n\t        [\"prepareOutput\",this,state,\"postProcess\"],\n\t        delay,\n\t        [\"Post\",this.signal,[\"End Math\",elements,action]],\n\t        [\"Post\",this.signal,[\"End \"+action,elements]],\n\t        [\"clearCounts\",MathJax.Message]\n\t      );\n\t    }\n\t    return queue.Push(ec.callback);\n\t  },\n\t  \n\t  scriptAction: {\n\t    Process: function (script) {},\n\t    Update: function (script) {\n\t      var jax = script.MathJax.elementJax;\n\t      if (jax && jax.needsUpdate()) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n\t        else {script.MathJax.state = jax.STATE.PROCESSED}\n\t    },\n\t    Reprocess: function (script) {\n\t      var jax = script.MathJax.elementJax;\n\t      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n\t    },\n\t    Rerender: function (script) {\n\t      var jax = script.MathJax.elementJax;\n\t      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.OUTPUT}\n\t    }\n\t  },\n\t  \n\t  prepareScripts: function (action,element,state) {\n\t    if (arguments.callee.disabled) return;\n\t    var scripts = this.elementScripts(element);\n\t    var STATE = MathJax.ElementJax.STATE;\n\t    for (var i = 0, m = scripts.length; i < m; i++) {\n\t      var script = scripts[i];\n\t      if (script.type && this.inputJax[script.type.replace(/ *;(.|\\n)*/,\"\")]) {\n\t        if (script.MathJax) {\n\t          if (script.MathJax.elementJax && script.MathJax.elementJax.hover) {\n\t            MathJax.Extension.MathEvents.Hover.ClearHover(script.MathJax.elementJax);\n\t          }\n\t          if (script.MathJax.state !== STATE.PENDING) {this.scriptAction[action](script)}\n\t        }\n\t        if (!script.MathJax) {script.MathJax = {state: STATE.PENDING}}\n\t        if (script.MathJax.error) delete script.MathJax.error;\n\t        if (script.MathJax.state !== STATE.PROCESSED) {state.scripts.push(script)}\n\t      }\n\t    }\n\t  },\n\t  \n\t  checkScriptSiblings: function (script) {\n\t    if (script.MathJax.checked) return;\n\t    var config = this.config, pre = script.previousSibling;\n\t    if (pre && pre.nodeName === \"#text\") {\n\t      var preJax,postJax, post = script.nextSibling;\n\t      if (post && post.nodeName !== \"#text\") {post = null}\n\t      if (config.preJax) {\n\t        if (typeof(config.preJax) === \"string\") {config.preJax = new RegExp(config.preJax+\"$\")}\n\t        preJax = pre.nodeValue.match(config.preJax);\n\t      }\n\t      if (config.postJax && post) {\n\t        if (typeof(config.postJax) === \"string\") {config.postJax = new RegExp(\"^\"+config.postJax)}\n\t        postJax = post.nodeValue.match(config.postJax);\n\t      }\n\t      if (preJax && (!config.postJax || postJax)) {\n\t        pre.nodeValue  = pre.nodeValue.replace\n\t          (config.preJax,(preJax.length > 1? preJax[1] : \"\"));\n\t        pre = null;\n\t      }\n\t      if (postJax && (!config.preJax || preJax)) {\n\t        post.nodeValue = post.nodeValue.replace\n\t          (config.postJax,(postJax.length > 1? postJax[1] : \"\"));\n\t      }\n\t      if (pre && !pre.nodeValue.match(/\\S/)) {pre = pre.previousSibling}\n\t    }\n\t    if (config.preRemoveClass && pre && pre.className === config.preRemoveClass)\n\t      {script.MathJax.preview = pre}\n\t    script.MathJax.checked = 1;\n\t  },\n\t  \n\t  processInput: function (state) {\n\t    var jax, STATE = MathJax.ElementJax.STATE;\n\t    var script, prev, m = state.scripts.length;\n\t    try {\n\t      //\n\t      //  Loop through the scripts\n\t      //\n\t      while (state.i < m) {\n\t        script = state.scripts[state.i]; if (!script) {state.i++; continue}\n\t        //\n\t        //  Remove previous error marker, if any\n\t        //\n\t        prev = script.previousSibling;\n\t        if (prev && prev.className === \"MathJax_Error\") {prev.parentNode.removeChild(prev)}\n\t        //\n\t        //  Check if already processed or needs processing\n\t        //\n\t        if (!script.parentNode || !script.MathJax || script.MathJax.state === STATE.PROCESSED) {state.i++; continue};\n\t        if (!script.MathJax.elementJax || script.MathJax.state === STATE.UPDATE) {\n\t          this.checkScriptSiblings(script);                 // remove preJax/postJax etc.\n\t          var type = script.type.replace(/ *;(.|\\s)*/,\"\");  // the input jax type\n\t          var input = this.inputJax[type];                  // the input jax itself\n\t          jax = input.Process(script,state);                // run the input jax\n\t          if (typeof jax === 'function') {                  // if a callback was returned\n\t            if (jax.called) continue;                       //   go back and call Process() again\n\t            this.RestartAfter(jax);                         //   wait for the callback\n\t          }\n\t          jax = jax.Attach(script,input.id);                // register the jax on the script\n\t          this.saveScript(jax,state,script,STATE);          // add script to state\n\t          this.postInputHooks.Execute(jax,input.id,script); // run global jax filters\n\t        } else if (script.MathJax.state === STATE.OUTPUT) {\n\t          this.saveScript(script.MathJax.elementJax,state,script,STATE); // add script to state\n\t        }\n\t        //\n\t        //  Go on to the next script, and check if we need to update the processing message\n\t        //\n\t        state.i++; var now = new Date().getTime();\n\t        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n\t          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(1))}\n\t      }\n\t    } catch (err) {return this.processError(err,state,\"Input\")}\n\t    //\n\t    //  Put up final message, reset the state and return\n\t    //\n\t    if (state.scripts.length && this.config.showProcessingMessages)\n\t      {MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}\n\t    state.start = new Date().getTime(); state.i = state.j = 0;\n\t    return null;\n\t  },\n\t  postInputHooks: MathJax.Callback.Hooks(true),  // hooks to run after element jax is created\n\t  saveScript: function (jax,state,script,STATE) {\n\t    //\n\t    //  Check that output jax exists\n\t    //\n\t    if (!this.outputJax[jax.mimeType]) {\n\t      script.MathJax.state = STATE.UPDATE;\n\t      throw Error(\"No output jax registered for \"+jax.mimeType);\n\t    }\n\t    //\n\t    //  Record the output jax\n\t    //  and put this script in the queue for that jax\n\t    //\n\t    jax.outputJax = this.outputJax[jax.mimeType][0].id;\n\t    if (!state.jax[jax.outputJax]) {\n\t      if (state.jaxIDs.length === 0) {\n\t        // use original array until we know there are more (rather than two copies)\n\t        state.jax[jax.outputJax] = state.scripts;\n\t      } else {\n\t        if (state.jaxIDs.length === 1) // get the script so far for the existing jax\n\t          {state.jax[state.jaxIDs[0]] = state.scripts.slice(0,state.i)}\n\t        state.jax[jax.outputJax] = []; // start a new array for the new jax\n\t      }\n\t      state.jaxIDs.push(jax.outputJax); // save the ID of the jax\n\t    }\n\t    if (state.jaxIDs.length > 1) {state.jax[jax.outputJax].push(script)}\n\t    //\n\t    //  Mark script as needing output\n\t    //\n\t    script.MathJax.state = STATE.OUTPUT;\n\t  },\n\t  \n\t  //\n\t  //  Pre- and post-process scripts by jax\n\t  //    (to get scaling factors, hide/show output, and so on)\n\t  //  Since this can cause the jax to load, we need to trap restarts\n\t  //\n\t  prepareOutput: function (state,method) {\n\t    while (state.j < state.jaxIDs.length) {\n\t      var id = state.jaxIDs[state.j], JAX = MathJax.OutputJax[id];\n\t      if (JAX[method]) {\n\t        try {\n\t          var result = JAX[method](state);\n\t          if (typeof result === 'function') {\n\t            if (result.called) continue;  // go back and try again\n\t            this.RestartAfter(result);\n\t          }\n\t        } catch (err) {\n\t          if (!err.restart) {\n\t            MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",id,method],null,600);\n\t            MathJax.Hub.lastPrepError = err;\n\t            state.j++;\n\t          }\n\t          return MathJax.Callback.After([\"prepareOutput\",this,state,method],err.restart);\n\t        }\n\t      }\n\t      state.j++;\n\t    }\n\t    return null;\n\t  },\n\t\n\t  processOutput: function (state) {\n\t    var result, STATE = MathJax.ElementJax.STATE, script, m = state.scripts.length;\n\t    try {\n\t      //\n\t      //  Loop through the scripts\n\t      //\n\t      while (state.i < m) {\n\t        //\n\t        //  Check that there is an element jax\n\t        //\n\t        script = state.scripts[state.i];\n\t        if (!script || !script.parentNode || !script.MathJax || script.MathJax.error) {state.i++; continue}\n\t        var jax = script.MathJax.elementJax; if (!jax) {state.i++; continue}\n\t        //\n\t        //  Call the output Jax's Process method (which will be its Translate()\n\t        //  method once loaded).  Mark it as complete and remove the preview unless\n\t        //  the Process() call returns an explicit false value (in which case, it will\n\t        //  handle this later during the postProcess phase, as HTML-CSS does).\n\t        //\n\t        result = MathJax.OutputJax[jax.outputJax].Process(script,state);\n\t        if (result !== false) {\n\t          script.MathJax.state = STATE.PROCESSED;\n\t          if (script.MathJax.preview) {\n\t            script.MathJax.preview.innerHTML = \"\";\n\t            script.MathJax.preview.style.display = \"none\";\n\t          }\n\t          //\n\t          //  Signal that new math is available\n\t          //\n\t          this.signal.Post([\"New Math\",jax.inputID]); // FIXME: wait for this?  (i.e., restart if returns uncalled callback)\n\t        }\n\t        //\n\t        //  Go on to next math expression\n\t        //\n\t        state.i++;\n\t        //\n\t        //  Update the processing message, if needed\n\t        //\n\t        var now = new Date().getTime();\n\t        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n\t          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}\n\t      }\n\t    } catch (err) {return this.processError(err,state,\"Output\")}\n\t    //\n\t    //  Put up the typesetting-complete message\n\t    //\n\t    if (state.scripts.length && this.config.showProcessingMessages) {\n\t      MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);\n\t      MathJax.Message.Clear(0);\n\t    }\n\t    state.i = state.j = 0;\n\t    return null;\n\t  },\n\t  \n\t  processMessage: function (state,type) {\n\t    var m = Math.floor(state.i/(state.scripts.length)*100);\n\t    var message = (type === \"Output\" ? [\"TypesetMath\",\"Typesetting math: %1%%\"] :\n\t                                       [\"ProcessMath\",\"Processing math: %1%%\"]);\n\t    if (this.config.showProcessingMessages) {MathJax.Message.Set(message.concat(m),0)}\n\t  },\n\t\n\t  processError: function (err,state,type) {\n\t    if (!err.restart) {\n\t      if (!this.config.errorSettings.message) {throw err}\n\t      this.formatError(state.scripts[state.i],err); state.i++;\n\t    }\n\t    this.processMessage(state,type);\n\t    return MathJax.Callback.After([\"process\"+type,this,state],err.restart);\n\t  },\n\t  \n\t  formatError: function (script,err) {\n\t    var LOCALIZE = function (id,text,arg1,arg2) {return MathJax.Localization._(id,text,arg1,arg2)};\n\t    //\n\t    //  Get the error message, URL, and line, and save it for\n\t    //    reporting in the Show Math As Error menu\n\t    //\n\t    var message = LOCALIZE(\"ErrorMessage\",\"Error: %1\",err.message)+\"\\n\";\n\t    if (err.sourceURL||err.fileName) message += \"\\n\"+LOCALIZE(\"ErrorFile\",\"file: %1\",err.sourceURL||err.fileName);\n\t    if (err.line||err.lineNumber) message += \"\\n\"+LOCALIZE(\"ErrorLine\",\"line: %1\",err.line||err.lineNumber);\n\t    message += \"\\n\\n\"+LOCALIZE(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");\n\t    script.MathJax.error = MathJax.OutputJax.Error.Jax(message,script);\n\t    if (script.MathJax.elementJax)\n\t      script.MathJax.error.inputID = script.MathJax.elementJax.inputID;\n\t    //\n\t    //  Create the [Math Processing Error] span\n\t    //\n\t    var errorSettings = this.config.errorSettings;\n\t    var errorText = LOCALIZE(errorSettings.messageId,errorSettings.message);\n\t    var error = MathJax.HTML.Element(\"span\", {\n\t      className:\"MathJax_Error\", jaxID:\"Error\", isMathJax:true,\n\t      id: script.MathJax.error.inputID+\"-Frame\"\n\t    },[[\"span\",null,errorText]]);\n\t    //\n\t    //  Attach the menu events\n\t    //\n\t    MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function () {\n\t      var EVENT = MathJax.Extension.MathEvents.Event,\n\t          HUB = MathJax.Hub;\n\t      error.oncontextmenu = EVENT.Menu;\n\t      error.onmousedown = EVENT.Mousedown;\n\t      error.onkeydown = EVENT.Keydown;\n\t      error.tabIndex = HUB.getTabOrder(HUB.getJaxFor(script));\n\t    });\n\t    //\n\t    //  Insert the error into the page and remove any preview\n\t    //\n\t    var node = document.getElementById(error.id);\n\t    if (node) node.parentNode.removeChild(node);\n\t    if (script.parentNode) script.parentNode.insertBefore(error,script);\n\t    if (script.MathJax.preview) {\n\t      script.MathJax.preview.innerHTML = \"\";\n\t      script.MathJax.preview.style.display = \"none\";\n\t    }\n\t    //\n\t    //  Save the error for debugging purposes\n\t    //  Report the error as a signal\n\t    //\n\t    this.lastError = err;\n\t    this.signal.Post([\"Math Processing Error\",script,err]);\n\t  },\n\t  \n\t  RestartAfter: function (callback) {\n\t    throw this.Insert(Error(\"restart\"),{restart: MathJax.Callback(callback)});\n\t  },\n\t  \n\t  elementCallback: function (element,callback) {\n\t    if (callback == null && (MathJax.Object.isArray(element) || typeof element === 'function'))\n\t      {try {MathJax.Callback(element); callback = element; element = null} catch(e) {}}\n\t    if (element == null) {element = this.config.elements || []}\n\t    if (this.isHTMLCollection(element)) {element = this.HTMLCollection2Array(element)}\n\t    if (!MathJax.Object.isArray(element)) {element = [element]}\n\t    element = [].concat(element); // make a copy so the original isn't changed\n\t    for (var i = 0, m = element.length; i < m; i++)\n\t      {if (typeof(element[i]) === 'string') {element[i] = document.getElementById(element[i])}}\n\t    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n\t    if (element.length == 0) {element.push(document.body)}\n\t    if (!callback) {callback = {}}\n\t    return {\n\t      count: element.length, \n\t      elements: (element.length === 1 ? element[0] : element),\n\t      callback: callback\n\t    };\n\t  },\n\t  \n\t  elementScripts: function (element) {\n\t    var scripts = [];\n\t    if (MathJax.Object.isArray(element) || this.isHTMLCollection(element)) {\n\t      for (var i = 0, m = element.length; i < m; i++) {\n\t        var alreadyDone = 0;\n\t        for (var j = 0; j < i && !alreadyDone; j++)\n\t          {alreadyDone = element[j].contains(element[i])}\n\t        if (!alreadyDone) scripts.push.apply(scripts,this.elementScripts(element[i]));\n\t      }\n\t      return scripts;\n\t    }\n\t    if (typeof(element) === 'string') {element = document.getElementById(element)}\n\t    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n\t    if (element == null) {element = document.body}\n\t    if (element.tagName != null && element.tagName.toLowerCase() === \"script\") {return [element]}\n\t    scripts = element.getElementsByTagName(\"script\");\n\t    if (this.msieHTMLCollectionBug) {scripts = this.HTMLCollection2Array(scripts)}\n\t    return scripts;\n\t  },\n\t\n\t  //\n\t  //  IE8 fails to check \"obj instanceof HTMLCollection\" for some values of obj.\n\t  //\n\t  isHTMLCollection: function (obj) {\n\t    return (\"HTMLCollection\" in window && typeof(obj) === \"object\" && obj instanceof HTMLCollection);\n\t  },\n\t  //\n\t  //  IE8 doesn't deal with HTMLCollection as an array, so convert to array\n\t  //\n\t  HTMLCollection2Array: function (nodes) {\n\t    if (!this.msieHTMLCollectionBug) {return [].slice.call(nodes)}\n\t    var NODES = [];\n\t    for (var i = 0, m = nodes.length; i < m; i++) {NODES[i] = nodes[i]}\n\t    return NODES;\n\t  },\n\t  \n\t  Insert: function (dst,src) {\n\t    for (var id in src) {if (src.hasOwnProperty(id)) {\n\t      // allow for concatenation of arrays?\n\t      if (typeof src[id] === 'object' && !(MathJax.Object.isArray(src[id])) &&\n\t         (typeof dst[id] === 'object' || typeof dst[id] === 'function')) {\n\t        this.Insert(dst[id],src[id]);\n\t      } else {\n\t        dst[id] = src[id];\n\t      }\n\t    }}\n\t    return dst;\n\t  },\n\t\n\t  getTabOrder: function(script) {\n\t    return this.config.menuSettings.inTabOrder ? 0 : -1;\n\t  },\n\t\n\t  // Old browsers (e.g. Internet Explorer <= 8) do not support trim().\n\t  SplitList: (\"trim\" in String.prototype ?\n\t              function (list) {return list.trim().split(/\\s+/)} :\n\t              function (list) {return list.replace(/^\\s+/,'').\n\t                                           replace(/\\s+$/,'').split(/\\s+/)})\n\t};\n\tMathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);\n\tMathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});\n\t\n\t//\n\t//  Storage area for extensions and preprocessors\n\t//\n\tMathJax.Extension = {};\n\t\n\t//\n\t//  Hub Startup code\n\t//\n\tMathJax.Hub.Configured = MathJax.Callback({}); // called when configuration is complete\n\tMathJax.Hub.Startup = {\n\t  script: \"\", // the startup script from the SCRIPT call that loads MathJax.js\n\t  queue:   MathJax.Callback.Queue(),           // Queue used for startup actions\n\t  signal:  MathJax.Callback.Signal(\"Startup\"), // Signal used for startup events\n\t  params:  {},\n\t\n\t  //\n\t  //  Load the configuration files\n\t  //\n\t  Config: function () {\n\t    this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);\n\t    //\n\t    //  Make sure root is set before loading any files\n\t    //\n\t    if (MathJax.AuthorConfig && MathJax.AuthorConfig.root)\n\t      MathJax.Ajax.config.root = MathJax.AuthorConfig.root;\n\t    //\n\t    //  If a locale is given as a parameter,\n\t    //    set the locale and the default menu value for the locale\n\t    //\n\t    if (this.params.locale) {\n\t      MathJax.Localization.resetLocale(this.params.locale);\n\t      MathJax.Hub.config.menuSettings.locale = this.params.locale;\n\t    }\n\t    //\n\t    //  Run the config files, if any are given in the parameter list\n\t    //\n\t    if (this.params.config) {\n\t      var files = this.params.config.split(/,/);\n\t      for (var i = 0, m = files.length; i < m; i++) {\n\t        if (!files[i].match(/\\.js$/)) {files[i] += \".js\"}\n\t        this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",files[i])]);\n\t      }\n\t    }\n\t    //\n\t    //  Perform author configuration from in-line MathJax = {...}\n\t    //\n\t    this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);\n\t    //\n\t    //  Run the deprecated configuration script, if any (ignoring return value)\n\t    //  Wait for the startup delay signal\n\t    //  Run the mathjax-config blocks\n\t    //  Load the files in the configuration's config array\n\t    //\n\t    if (this.script.match(/\\S/)) {this.queue.Push(this.script+\";\\n1;\")}\n\t    this.queue.Push(\n\t      [\"ConfigDelay\",this],\n\t      [\"ConfigBlocks\",this],\n\t      [function (THIS) {return THIS.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],\n\t      [\"Post\",this.signal,\"End Config\"]\n\t    );\n\t  },\n\t  //\n\t  //  Return the delay callback\n\t  //\n\t  ConfigDelay: function () {\n\t    var delay = this.params.delayStartupUntil || MathJax.Hub.config.delayStartupUntil;\n\t    if (delay === \"onload\") {return this.onload}\n\t    if (delay === \"configured\") {return MathJax.Hub.Configured}\n\t    return delay;\n\t  },\n\t  //\n\t  //  Run the scripts of type=text/x-mathjax-config\n\t  //\n\t  ConfigBlocks: function () {\n\t    var scripts = document.getElementsByTagName(\"script\");\n\t    var queue = MathJax.Callback.Queue();\n\t    for (var i = 0, m = scripts.length; i < m; i++) {\n\t      var type = String(scripts[i].type).replace(/ /g,\"\");\n\t      if (type.match(/^text\\/x-mathjax-config(;.*)?$/) && !type.match(/;executed=true/)) {\n\t        scripts[i].type += \";executed=true\";\n\t        queue.Push(scripts[i].innerHTML+\";\\n1;\");\n\t      }\n\t    }\n\t    return queue.Push(function () {MathJax.Ajax.config.root = MathJax.Hub.config.root});\n\t  },\n\t\n\t  //\n\t  //  Read cookie and set up menu defaults\n\t  //  (set the locale according to the cookie)\n\t  //  (adjust the jax to accommodate renderer preferences)\n\t  //\n\t  Cookie: function () {\n\t    return this.queue.Push(\n\t      [\"Post\",this.signal,\"Begin Cookie\"],\n\t      [\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],\n\t      [function (config) {\n\t        var SETTINGS = config.menuSettings;\n\t        if (SETTINGS.locale) MathJax.Localization.resetLocale(SETTINGS.locale);\n\t        var renderer = config.menuSettings.renderer, jax = config.jax;\n\t        if (renderer) {\n\t          var name = \"output/\"+renderer; jax.sort();\n\t          for (var i = 0, m = jax.length; i < m; i++) {\n\t            if (jax[i].substr(0,7) === \"output/\") break;\n\t          }\n\t          if (i == m-1) {jax.pop()} else {\n\t            while (i < m) {if (jax[i] === name) {jax.splice(i,1); break}; i++}\n\t          }\n\t          jax.unshift(name);\n\t        }\n\t        if (SETTINGS.CHTMLpreview != null) {\n\t          if (SETTINGS.FastPreview == null) SETTINGS.FastPreview = SETTINGS.CHTMLpreview;\n\t          delete SETTINGS.CHTMLpreview;\n\t        }\n\t        if (SETTINGS.FastPreview && !MathJax.Extension[\"fast-preview\"])\n\t          MathJax.Hub.config.extensions.push(\"fast-preview.js\");\n\t        if (config.menuSettings.assistiveMML && !MathJax.Extension.AssistiveMML)\n\t          MathJax.Hub.config.extensions.push(\"AssistiveMML.js\");\n\t      },MathJax.Hub.config],\n\t      [\"Post\",this.signal,\"End Cookie\"]\n\t    );\n\t  },\n\t  //\n\t  //  Setup stylesheets and extra styles\n\t  //\n\t  Styles: function () {\n\t    return this.queue.Push(\n\t      [\"Post\",this.signal,\"Begin Styles\"],\n\t      [\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],\n\t      [\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],\n\t      [\"Post\",this.signal,\"End Styles\"]\n\t    );\n\t  },\n\t  //\n\t  //  Load the input and output jax\n\t  //\n\t  Jax: function () {\n\t    var config = MathJax.Hub.config, jax = MathJax.Hub.outputJax;\n\t    //  Save the order of the output jax since they are loading asynchronously\n\t    for (var i = 0, m = config.jax.length, k = 0; i < m; i++) {\n\t      var name = config.jax[i].substr(7);\n\t      if (config.jax[i].substr(0,7) === \"output/\" && jax.order[name] == null)\n\t        {jax.order[name] = k; k++}\n\t    }\n\t    var queue = MathJax.Callback.Queue();\n\t    return queue.Push(\n\t      [\"Post\",this.signal,\"Begin Jax\"],\n\t      [\"loadArray\",this,config.jax,\"jax\",\"config.js\"],\n\t      [\"Post\",this.signal,\"End Jax\"]\n\t    );\n\t  },\n\t  //\n\t  //  Load the extensions\n\t  //\n\t  Extensions: function () {\n\t    var queue = MathJax.Callback.Queue();\n\t    return queue.Push(\n\t      [\"Post\",this.signal,\"Begin Extensions\"],\n\t      [\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],\n\t      [\"Post\",this.signal,\"End Extensions\"]\n\t    );\n\t  },\n\t  \n\t  //\n\t  //  Initialize the Message system\n\t  //\n\t  Message: function () {\n\t    MathJax.Message.Init(true);\n\t  },\n\t  \n\t  //\n\t  //  Set the math menu renderer, if it isn't already\n\t  //  (this must come after the jax are loaded)\n\t  //\n\t  Menu: function () {\n\t    var menu = MathJax.Hub.config.menuSettings, jax = MathJax.Hub.outputJax, registered;\n\t    for (var id in jax) {if (jax.hasOwnProperty(id)) {\n\t      if (jax[id].length) {registered = jax[id]; break}\n\t    }}\n\t    if (registered && registered.length) {\n\t      if (menu.renderer && menu.renderer !== registered[0].id)\n\t        {registered.unshift(MathJax.OutputJax[menu.renderer])}\n\t      menu.renderer = registered[0].id;\n\t    }\n\t  },\n\t  \n\t  //\n\t  //  Set the location to the designated hash position\n\t  //\n\t  Hash: function () {\n\t    if (MathJax.Hub.config.positionToHash && document.location.hash &&\n\t        document.body && document.body.scrollIntoView) {\n\t      var name = document.location.hash.substr(1);\n\t      var target = document.getElementById(name);\n\t      if (!target) {\n\t        var a = document.getElementsByTagName(\"a\");\n\t        for (var i = 0, m = a.length; i < m; i++)\n\t          {if (a[i].name === name) {target = a[i]; break}}\n\t      }\n\t      if (target) {\n\t        while (!target.scrollIntoView) {target = target.parentNode}\n\t        target = this.HashCheck(target);\n\t        if (target && target.scrollIntoView)\n\t          {setTimeout(function () {target.scrollIntoView(true)},1)}\n\t      }\n\t    }\n\t  },\n\t  HashCheck: function (target) {\n\t    var jax = MathJax.Hub.getJaxFor(target);\n\t    if (jax && MathJax.OutputJax[jax.outputJax].hashCheck)\n\t      {target = MathJax.OutputJax[jax.outputJax].hashCheck(target)}\n\t    return target;\n\t  },\n\t  \n\t  //\n\t  //  Load the Menu and Zoom code, if it hasn't already been loaded.\n\t  //  This is called after the initial typeset, so should no longer be\n\t  //  competing with other page loads, but will make these available\n\t  //  if needed later on.\n\t  //\n\t  MenuZoom: function () {\n\t    if (MathJax.Hub.config.showMathMenu) {\n\t      if (!MathJax.Extension.MathMenu) {\n\t        setTimeout(\n\t          function () {\n\t            MathJax.Callback.Queue(\n\t              [\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],\n\t              [\"loadDomain\",MathJax.Localization,\"MathMenu\"]\n\t            )\n\t          },1000\n\t        );\n\t      } else {\n\t        setTimeout(\n\t          MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),\n\t          1000\n\t        );\n\t      }\n\t      if (!MathJax.Extension.MathZoom) {\n\t        setTimeout(\n\t          MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),\n\t          2000\n\t        );\n\t      }\n\t    }\n\t  },\n\t  \n\t  //\n\t  //  Setup the onload callback\n\t  //\n\t  onLoad: function () {\n\t    var onload = this.onload =\n\t      MathJax.Callback(function () {MathJax.Hub.Startup.signal.Post(\"onLoad\")});\n\t    if (document.body && document.readyState)\n\t      if (MathJax.Hub.Browser.isMSIE) {\n\t        // IE can change from loading to interactive before\n\t        //  full page is ready, so go with complete (even though\n\t        //  that means we may have to wait longer).\n\t        if (document.readyState === \"complete\") {return [onload]}\n\t      } else if (document.readyState !== \"loading\") {return [onload]}\n\t    if (window.addEventListener) {\n\t      window.addEventListener(\"load\",onload,false);\n\t      if (!this.params.noDOMContentEvent)\n\t        {window.addEventListener(\"DOMContentLoaded\",onload,false)}\n\t    }\n\t    else if (window.attachEvent) {window.attachEvent(\"onload\",onload)}\n\t    else {window.onload = onload}\n\t    return onload;\n\t  },\n\t\n\t  //\n\t  //  Perform the initial typesetting (or skip if configuration says to)\n\t  //\n\t  Typeset: function (element,callback) {\n\t    if (MathJax.Hub.config.skipStartupTypeset) {return function () {}}\n\t    return this.queue.Push(\n\t      [\"Post\",this.signal,\"Begin Typeset\"],\n\t      [\"Typeset\",MathJax.Hub,element,callback],\n\t      [\"Post\",this.signal,\"End Typeset\"]\n\t    );\n\t  },\n\t\n\t  //\n\t  //  Create a URL in the MathJax hierarchy\n\t  //\n\t  URL: function (dir,name) {\n\t    if (!name.match(/^([a-z]+:\\/\\/|\\[|\\/)/)) {name = \"[MathJax]/\"+dir+\"/\"+name}\n\t    return name;\n\t  },\n\t\n\t  //\n\t  //  Load an array of files, waiting for all of them\n\t  //  to be loaded before going on\n\t  //\n\t  loadArray: function (files,dir,name,synchronous) {\n\t    if (files) {\n\t      if (!MathJax.Object.isArray(files)) {files = [files]}\n\t      if (files.length) {\n\t        var queue = MathJax.Callback.Queue(), callback = {}, file;\n\t        for (var i = 0, m = files.length; i < m; i++) {\n\t          file = this.URL(dir,files[i]);\n\t          if (name) {file += \"/\" + name}\n\t          if (synchronous) {queue.Push([\"Require\",MathJax.Ajax,file,callback])}\n\t                      else {queue.Push(MathJax.Ajax.Require(file,callback))}\n\t        }\n\t        return queue.Push({}); // wait for everything to finish\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  \n\t};\n\t\n\t\n\t/**********************************************************/\n\t\n\t(function (BASENAME) {\n\t  var BASE = window[BASENAME], ROOT = \"[\"+BASENAME+\"]\";\n\t  var HUB = BASE.Hub, AJAX = BASE.Ajax, CALLBACK = BASE.Callback;\n\t\n\t  var JAX = MathJax.Object.Subclass({\n\t    JAXFILE: \"jax.js\",\n\t    require: null, // array of files to load before jax.js is complete\n\t    config: {},\n\t    //\n\t    //  Make a subclass and return an instance of it.\n\t    //  (FIXME: should we replace config with a copy of the constructor's\n\t    //   config?  Otherwise all subclasses share the same config structure.)\n\t    //\n\t    Init: function (def,cdef) {\n\t      if (arguments.length === 0) {return this}\n\t      return (this.constructor.Subclass(def,cdef))();\n\t    },\n\t    //\n\t    //  Augment by merging with class definition (not replacing)\n\t    //\n\t    Augment: function (def,cdef) {\n\t      var cObject = this.constructor, ndef = {};\n\t      if (def != null) {\n\t        for (var id in def) {if (def.hasOwnProperty(id)) {\n\t          if (typeof def[id] === \"function\")\n\t            {cObject.protoFunction(id,def[id])} else {ndef[id] = def[id]}\n\t        }}\n\t        // MSIE doesn't list toString even if it is not native so handle it separately\n\t        if (def.toString !== cObject.prototype.toString && def.toString !== {}.toString)\n\t          {cObject.protoFunction('toString',def.toString)}\n\t      }\n\t      HUB.Insert(cObject.prototype,ndef);\n\t      cObject.Augment(null,cdef);\n\t      return this;\n\t    },\n\t    Translate: function (script,state) {\n\t      throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\");\n\t    },\n\t    Register: function (mimetype) {},\n\t    Config: function () {\n\t      this.config = HUB.CombineConfig(this.id,this.config);\n\t      if (this.config.Augment) {this.Augment(this.config.Augment)}\n\t    },\n\t    Startup: function () {},\n\t    loadComplete: function (file) {\n\t      if (file === \"config.js\") {\n\t        return AJAX.loadComplete(this.directory+\"/\"+file);\n\t      } else {\n\t        var queue = CALLBACK.Queue();\n\t        queue.Push(\n\t          HUB.Register.StartupHook(\"End Config\",{}), // wait until config complete\n\t          [\"Post\",HUB.Startup.signal,this.id+\" Jax Config\"],\n\t          [\"Config\",this],\n\t          [\"Post\",HUB.Startup.signal,this.id+\" Jax Require\"],\n\t          // Config may set the required and extensions array,\n\t          //  so use functions to delay making the reference until needed\n\t          [function (THIS) {return MathJax.Hub.Startup.loadArray(THIS.require,this.directory)},this],\n\t          [function (config,id) {return MathJax.Hub.Startup.loadArray(config.extensions,\"extensions/\"+id)},this.config||{},this.id],\n\t          [\"Post\",HUB.Startup.signal,this.id+\" Jax Startup\"],\n\t          [\"Startup\",this],\n\t          [\"Post\",HUB.Startup.signal,this.id+\" Jax Ready\"]\n\t        );\n\t        if (this.copyTranslate) {\n\t          queue.Push(\n\t            [function (THIS) {\n\t              THIS.preProcess  = THIS.preTranslate;\n\t              THIS.Process     = THIS.Translate;\n\t              THIS.postProcess = THIS.postTranslate;\n\t            },this.constructor.prototype]\n\t          );\n\t        }\n\t        return queue.Push([\"loadComplete\",AJAX,this.directory+\"/\"+file]);\n\t      }\n\t    }\n\t  },{\n\t    id: \"Jax\",\n\t    version: \"2.7.0-beta\",\n\t    directory: ROOT+\"/jax\",\n\t    extensionDir: ROOT+\"/extensions\"\n\t  });\n\t\n\t  /***********************************/\n\t\n\t  BASE.InputJax = JAX.Subclass({\n\t    elementJax: \"mml\",  // the element jax to load for this input jax\n\t    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"],\n\t    copyTranslate: true,\n\t    Process: function (script,state) {\n\t      var queue = CALLBACK.Queue(), file;\n\t      // Load any needed element jax\n\t      var jax = this.elementJax; if (!BASE.Object.isArray(jax)) {jax = [jax]}\n\t      for (var i = 0, m = jax.length; i < m; i++) {\n\t        file = BASE.ElementJax.directory+\"/\"+jax[i]+\"/\"+this.JAXFILE;\n\t        if (!this.require) {this.require = []}\n\t          else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n\t        this.require.push(file);  // so Startup will wait for it to be loaded\n\t        queue.Push(AJAX.Require(file));\n\t      }\n\t      // Load the input jax\n\t      file = this.directory+\"/\"+this.JAXFILE;\n\t      var load = queue.Push(AJAX.Require(file));\n\t      if (!load.called) {\n\t        this.constructor.prototype.Process = function () {\n\t          if (!load.called) {return load}\n\t          throw Error(file+\" failed to load properly\");\n\t        }\n\t      }\n\t      // Load the associated output jax\n\t      jax = HUB.outputJax[\"jax/\"+jax[0]];\n\t      if (jax) {queue.Push(AJAX.Require(jax[0].directory+\"/\"+this.JAXFILE))}\n\t      return queue.Push({});\n\t    },\n\t    needsUpdate: function (jax) {\n\t      var script = jax.SourceElement();\n\t      return (jax.originalText !== BASE.HTML.getScript(script));\n\t    },\n\t    Register: function (mimetype) {\n\t      if (!HUB.inputJax) {HUB.inputJax = {}}\n\t      HUB.inputJax[mimetype] = this;\n\t    }\n\t  },{\n\t    id: \"InputJax\",\n\t    version: \"2.7.0-beta\",\n\t    directory: JAX.directory+\"/input\",\n\t    extensionDir: JAX.extensionDir\n\t  });\n\t\n\t  /***********************************/\n\t\n\t  BASE.OutputJax = JAX.Subclass({\n\t    copyTranslate: true,\n\t    preProcess: function (state) {\n\t      var load, file = this.directory+\"/\"+this.JAXFILE;\n\t      this.constructor.prototype.preProcess = function (state) {\n\t\tif (!load.called) {return load}\n\t        throw Error(file+\" failed to load properly\");\n\t      }\n\t      load = AJAX.Require(file);\n\t      return load;\n\t    },\n\t    Register: function (mimetype) {\n\t      var jax = HUB.outputJax;\n\t      if (!jax[mimetype]) {jax[mimetype] = []}\n\t      //  If the output jax is earlier in the original configuration list, put it first here\n\t      if (jax[mimetype].length && (this.id === HUB.config.menuSettings.renderer ||\n\t            (jax.order[this.id]||0) < (jax.order[jax[mimetype][0].id]||0)))\n\t        {jax[mimetype].unshift(this)} else {jax[mimetype].push(this)}\n\t      //  Make sure the element jax is loaded before Startup is called\n\t      if (!this.require) {this.require = []}\n\t        else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n\t      this.require.push(BASE.ElementJax.directory+\"/\"+(mimetype.split(/\\//)[1])+\"/\"+this.JAXFILE);\n\t    },\n\t    Remove: function (jax) {}\n\t  },{\n\t    id: \"OutputJax\",\n\t    version: \"2.7.0-beta\",\n\t    directory: JAX.directory+\"/output\",\n\t    extensionDir: JAX.extensionDir,\n\t    fontDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/fonts\",\n\t    imageDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/images\"\n\t  });\n\t  \n\t  /***********************************/\n\t\n\t  BASE.ElementJax = JAX.Subclass({\n\t    // make a subclass, not an instance\n\t    Init: function (def,cdef) {return this.constructor.Subclass(def,cdef)},\n\t    \n\t    inputJax: null,\n\t    outputJax: null,\n\t    inputID: null,\n\t    originalText: \"\",\n\t    mimeType: \"\",\n\t    sourceMenuTitle: /*_(MathMenu)*/ [\"MathMLcode\",\"MathML Code\"],\n\t    \n\t    Text: function (text,callback) {\n\t      var script = this.SourceElement();\n\t      BASE.HTML.setScript(script,text);\n\t      script.MathJax.state = this.STATE.UPDATE;\n\t      return HUB.Update(script,callback);\n\t    },\n\t    Reprocess: function (callback) {\n\t      var script = this.SourceElement();\n\t      script.MathJax.state = this.STATE.UPDATE;\n\t      return HUB.Reprocess(script,callback);\n\t    },\n\t    Update: function (callback) {return this.Rerender(callback)},\n\t    Rerender: function (callback) {\n\t      var script = this.SourceElement();\n\t      script.MathJax.state = this.STATE.OUTPUT;\n\t      return HUB.Process(script,callback);\n\t    },\n\t    Remove: function (keep) {\n\t      if (this.hover) {this.hover.clear(this)}\n\t      BASE.OutputJax[this.outputJax].Remove(this);\n\t      if (!keep) {\n\t        HUB.signal.Post([\"Remove Math\",this.inputID]); // wait for this to finish?\n\t        this.Detach();\n\t      }\n\t    },\n\t    needsUpdate: function () {\n\t      return BASE.InputJax[this.inputJax].needsUpdate(this);\n\t    },\n\t\n\t    SourceElement: function () {return document.getElementById(this.inputID)},\n\t    \n\t    Attach: function (script,inputJax) {\n\t      var jax = script.MathJax.elementJax;\n\t      if (script.MathJax.state === this.STATE.UPDATE) {\n\t        jax.Clone(this);\n\t      } else {\n\t        jax = script.MathJax.elementJax = this;\n\t        if (script.id) {this.inputID = script.id}\n\t          else {script.id = this.inputID = BASE.ElementJax.GetID(); this.newID = 1}\n\t      }\n\t      jax.originalText = BASE.HTML.getScript(script);\n\t      jax.inputJax = inputJax;\n\t      if (jax.root) {jax.root.inputID = jax.inputID}\n\t      return jax;\n\t    },\n\t    Detach: function () {\n\t      var script = this.SourceElement(); if (!script) return;\n\t      try {delete script.MathJax} catch(err) {script.MathJax = null}\n\t      if (this.newID) {script.id = \"\"}\n\t    },\n\t    Clone: function (jax) {\n\t      var id;\n\t      for (id in this) {\n\t        if (!this.hasOwnProperty(id)) continue;\n\t        if (typeof(jax[id]) === 'undefined' && id !== 'newID') {delete this[id]}\n\t      }\n\t      for (id in jax) {\n\t        if (!jax.hasOwnProperty(id)) continue;\n\t        if (typeof(this[id]) === 'undefined' || (this[id] !== jax[id] && id !== 'inputID'))\n\t          {this[id] = jax[id]}\n\t      }\n\t    }\n\t  },{\n\t    id: \"ElementJax\",\n\t    version: \"2.7.0-beta\",\n\t    directory: JAX.directory+\"/element\",\n\t    extensionDir: JAX.extensionDir,\n\t    ID: 0,  // jax counter (for IDs)\n\t    STATE: {\n\t      PENDING: 1,      // script is identified as math but not yet processed\n\t      PROCESSED: 2,    // script has been processed\n\t      UPDATE: 3,       // elementJax should be updated\n\t      OUTPUT: 4        // output should be updated (input is OK)\n\t    },\n\t    \n\t    GetID: function () {this.ID++; return \"MathJax-Element-\"+this.ID},\n\t    Subclass: function () {\n\t      var obj = JAX.Subclass.apply(this,arguments);\n\t      obj.loadComplete = this.prototype.loadComplete;\n\t      return obj;\n\t    }\n\t  });\n\t  BASE.ElementJax.prototype.STATE = BASE.ElementJax.STATE;\n\t\n\t  //\n\t  //  Some \"Fake\" jax used to allow menu access for \"Math Processing Error\" messages\n\t  //\n\t  BASE.OutputJax.Error = {\n\t    id: \"Error\", version: \"2.7.0-beta\", config: {}, errors: 0,\n\t    ContextMenu: function () {return BASE.Extension.MathEvents.Event.ContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n\t    Mousedown:   function () {return BASE.Extension.MathEvents.Event.AltContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n\t    getJaxFromMath: function (math) {return (math.nextSibling.MathJax||{}).error},\n\t    Jax: function (text,script) {\n\t      var jax = MathJax.Hub.inputJax[script.type.replace(/ *;(.|\\s)*/,\"\")];\n\t      this.errors++;\n\t      return {\n\t        inputJax: (jax||{id:\"Error\"}).id,  // Use Error InputJax as fallback\n\t        outputJax: \"Error\",\n\t        inputID: \"MathJax-Error-\"+this.errors,\n\t        sourceMenuTitle: /*_(MathMenu)*/ [\"ErrorMessage\",\"Error Message\"],\n\t        sourceMenuFormat: \"Error\",\n\t        originalText: MathJax.HTML.getScript(script),\n\t        errorText: text\n\t      }\n\t    }\n\t  };\n\t  BASE.InputJax.Error = {\n\t    id: \"Error\", version: \"2.7.0-beta\", config: {},\n\t    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"]\n\t  };\n\t  \n\t})(\"MathJax\");\n\t\n\t/**********************************************************/\n\t\n\t(function (BASENAME) {\n\t  var BASE = window[BASENAME];\n\t  if (!BASE) {BASE = window[BASENAME] = {}}\n\t\n\t  var HUB = BASE.Hub; var STARTUP = HUB.Startup; var CONFIG = HUB.config;\n\t  var HEAD = document.head || (document.getElementsByTagName(\"head\")[0]);\n\t  if (!HEAD) {HEAD = document.childNodes[0]};\n\t  var scripts = (document.documentElement || document).getElementsByTagName(\"script\");\n\t  if (scripts.length === 0 && HEAD.namespaceURI)\n\t    scripts = document.getElementsByTagNameNS(HEAD.namespaceURI,\"script\");\n\t  var namePattern = new RegExp(\"(^|/)\"+BASENAME+\"\\\\.js(\\\\?.*)?$\");\n\t  for (var i = scripts.length-1; i >= 0; i--) {\n\t    if ((scripts[i].src||\"\").match(namePattern)) {\n\t      STARTUP.script = scripts[i].innerHTML;\n\t      if (RegExp.$2) {\n\t        var params = RegExp.$2.substr(1).split(/\\&/);\n\t        for (var j = 0, m = params.length; j < m; j++) {\n\t          var KV = params[j].match(/(.*)=(.*)/);\n\t          if (KV) {STARTUP.params[unescape(KV[1])] = unescape(KV[2])}\n\t             else {STARTUP.params[params[j]] = true}\n\t        }\n\t      }\n\t      CONFIG.root = scripts[i].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,'')\n\t        // convert mathjax/latest to mathjax/x.y-latest so that all files are the same version\n\t        .replace(/^(https?:\\/\\/cdn.mathjax.org\\/mathjax\\/)(latest)/,\"$1\"+BASE.version.split(/\\./).slice(0,2).join(\".\")+\"-$2\");\n\t      BASE.Ajax.config.root = CONFIG.root;\n\t      BASE.Ajax.params = STARTUP.params;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var AGENT = navigator.userAgent;\n\t  var BROWSERS = {\n\t    isMac:       (navigator.platform.substr(0,3) === \"Mac\"),\n\t    isPC:        (navigator.platform.substr(0,3) === \"Win\"),\n\t    isMSIE:      (\"ActiveXObject\" in window && \"clipboardData\" in window),\n\t    isEdge:      (\"MSGestureEvent\" in window && \"chrome\" in window &&\n\t                     window.chrome.loadTimes == null),\n\t    isFirefox:   (!!AGENT.match(/Gecko\\//) && !AGENT.match(/like Gecko/)),\n\t    isSafari:    (!!AGENT.match(/ (Apple)?WebKit\\//) && !AGENT.match(/ like iPhone /) &&\n\t                     (!window.chrome || window.chrome.app == null)),\n\t    isChrome:    (\"chrome\" in window && window.chrome.loadTimes != null),\n\t    isOpera:     (\"opera\" in window && window.opera.version != null),\n\t    isKonqueror: (\"konqueror\" in window && navigator.vendor == \"KDE\"),\n\t    versionAtLeast: function (v) {\n\t      var bv = (this.version).split('.'); v = (new String(v)).split('.');\n\t      for (var i = 0, m = v.length; i < m; i++)\n\t        {if (bv[i] != v[i]) {return parseInt(bv[i]||\"0\") >= parseInt(v[i])}}\n\t      return true;\n\t    },\n\t    Select: function (choices) {\n\t      var browser = choices[HUB.Browser];\n\t      if (browser) {return browser(HUB.Browser)}\n\t      return null;\n\t    }\n\t  };\n\t\n\t  var xAGENT = AGENT\n\t    .replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\")                                   // remove initial Mozilla, which is never right\n\t    .replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\")  // remove linux version\n\t    .replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");               // special case for these\n\t\n\t  HUB.Browser = HUB.Insert(HUB.Insert(new String(\"Unknown\"),{version: \"0.0\"}),BROWSERS);\n\t  for (var browser in BROWSERS) {if (BROWSERS.hasOwnProperty(browser)) {\n\t    if (BROWSERS[browser] && browser.substr(0,2) === \"is\") {\n\t      browser = browser.slice(2);\n\t      if (browser === \"Mac\" || browser === \"PC\") continue;\n\t      HUB.Browser = HUB.Insert(new String(browser),BROWSERS);\n\t      var VERSION = new RegExp(\n\t        \".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|\" +                      // for Safari, Opera10, and IE11+\n\t        \".*(\"+browser+\")\"+(browser == \"MSIE\" ? \" \" : \"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|\"+  // for one of the main browsers\n\t        \"(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");  // for unrecognized browser\n\t      var MATCH = VERSION.exec(xAGENT) || [\"\",\"\",\"\",\"unknown\",\"0.0\"];\n\t      HUB.Browser.name = (MATCH[1] != \"\" ? browser : (MATCH[3] || MATCH[5]));\n\t      HUB.Browser.version = MATCH[2] || MATCH[4] || MATCH[6];\n\t      break;\n\t    }\n\t  }};\n\t  \n\t  //\n\t  //  Initial browser-specific info (e.g., touch up version or name, check for MathPlayer, etc.)\n\t  //  Wrap in try/catch just in case of error (see issue #1155).\n\t  //\n\t  try {HUB.Browser.Select({\n\t    Safari: function (browser) {\n\t      var v = parseInt((String(browser.version).split(\".\"))[0]);\n\t      if (v > 85) {browser.webkit = browser.version}\n\t      if      (v >= 538) {browser.version = \"8.0\"}\n\t      else if (v >= 537) {browser.version = \"7.0\"}\n\t      else if (v >= 536) {browser.version = \"6.0\"}\n\t      else if (v >= 534) {browser.version = \"5.1\"}\n\t      else if (v >= 533) {browser.version = \"5.0\"}\n\t      else if (v >= 526) {browser.version = \"4.0\"}\n\t      else if (v >= 525) {browser.version = \"3.1\"}\n\t      else if (v >  500) {browser.version = \"3.0\"}\n\t      else if (v >  400) {browser.version = \"2.0\"}\n\t      else if (v >   85) {browser.version = \"1.0\"}\n\t      browser.webkit = (navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];\n\t      browser.isMobile = (navigator.appVersion.match(/Mobile/i) != null);\n\t      browser.noContextMenu = browser.isMobile;\n\t    },\n\t    Firefox: function (browser) {\n\t      if ((browser.version === \"0.0\" || AGENT.match(/Firefox/) == null) &&\n\t           navigator.product === \"Gecko\") {\n\t        var rv = AGENT.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);\n\t        if (rv) {browser.version = rv[1]}\n\t        else {\n\t          var date = (navigator.buildID||navigator.productSub||\"0\").substr(0,8);\n\t          if      (date >= \"20111220\") {browser.version = \"9.0\"}\n\t          else if (date >= \"20111120\") {browser.version = \"8.0\"}\n\t          else if (date >= \"20110927\") {browser.version = \"7.0\"}\n\t          else if (date >= \"20110816\") {browser.version = \"6.0\"}\n\t          else if (date >= \"20110621\") {browser.version = \"5.0\"}\n\t          else if (date >= \"20110320\") {browser.version = \"4.0\"}\n\t          else if (date >= \"20100121\") {browser.version = \"3.6\"}\n\t          else if (date >= \"20090630\") {browser.version = \"3.5\"}\n\t          else if (date >= \"20080617\") {browser.version = \"3.0\"}\n\t          else if (date >= \"20061024\") {browser.version = \"2.0\"}\n\t        }\n\t      }\n\t      browser.isMobile = (navigator.appVersion.match(/Android/i) != null ||\n\t                          AGENT.match(/ Fennec\\//) != null ||\n\t                          AGENT.match(/Mobile/) != null);\n\t    },\n\t    Chrome: function (browser) {\n\t      browser.noContextMenu = browser.isMobile = !!navigator.userAgent.match(/ Mobile[ \\/]/);\n\t    },\n\t    Opera: function (browser) {browser.version = opera.version()},\n\t    Edge: function (browser) {\n\t      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n\t    },\n\t    MSIE: function (browser) {\n\t      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n\t      browser.isIE9 = !!(document.documentMode && (window.performance || window.msPerformance));\n\t      MathJax.HTML.setScriptBug = !browser.isIE9 || document.documentMode < 9;\n\t      MathJax.Hub.msieHTMLCollectionBug = (document.documentMode < 9);\n\t      //\n\t      //  MathPlayer doesn't function properly in IE10, and not at all in IE11,\n\t      //  so don't even try to load it.\n\t      //\n\t      if (document.documentMode < 10 && !STARTUP.params.NoMathPlayer) {\n\t        try {\n\t          new ActiveXObject(\"MathPlayer.Factory.1\");\n\t          browser.hasMathPlayer = true;\n\t        } catch (err) {}\n\t        try {\n\t          if (browser.hasMathPlayer) {\n\t            var mathplayer = document.createElement(\"object\");\n\t            mathplayer.id = \"mathplayer\"; mathplayer.classid = \"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";\n\t            HEAD.appendChild(mathplayer);\n\t            document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");\n\t            browser.mpNamespace = true;\n\t            if (document.readyState && (document.readyState === \"loading\" ||\n\t                                        document.readyState === \"interactive\")) {\n\t              document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');\n\t              browser.mpImported = true;\n\t            }\n\t          } else {\n\t            //  Adding any namespace avoids a crash in IE9 in IE9-standards mode\n\t            //  (any reference to document.namespaces before document.readyState is \n\t            //   \"complete\" causes an \"unspecified error\" to be thrown)\n\t            document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\");\n\t          }\n\t        } catch (err) {}\n\t      }\n\t    }\n\t  });} catch (err) {\n\t    console.error(err.message);\n\t  }\n\t  HUB.Browser.Select(MathJax.Message.browsers);\n\t\n\t  if (BASE.AuthorConfig && typeof BASE.AuthorConfig.AuthorInit === \"function\") {BASE.AuthorConfig.AuthorInit()}\n\t  HUB.queue = BASE.Callback.Queue();\n\t  HUB.queue.Push(\n\t    [\"Post\",STARTUP.signal,\"Begin\"],\n\t    [\"Config\",STARTUP],\n\t    [\"Cookie\",STARTUP],\n\t    [\"Styles\",STARTUP],\n\t    [\"Message\",STARTUP],\n\t    function () {\n\t      // Do Jax and Extensions in parallel, but wait for them all to complete\n\t      var queue = BASE.Callback.Queue(\n\t        STARTUP.Jax(),\n\t        STARTUP.Extensions()\n\t      );\n\t      return queue.Push({});\n\t    },\n\t    [\"Menu\",STARTUP],\n\t    STARTUP.onLoad(),\n\t    function () {MathJax.isReady = true}, // indicates that MathJax is ready to process math\n\t    [\"Typeset\",STARTUP],\n\t    [\"Hash\",STARTUP],\n\t    [\"MenuZoom\",STARTUP],\n\t    [\"Post\",STARTUP.signal,\"End\"]\n\t  );\n\t  \n\t})(\"MathJax\");\n\t\n\t}}\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** mathjax.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b16b1049d4ea060a467e\n **/","/* -*- Mode: Javascript; indent-tabs-mode:nil; js-indent-level: 2 -*- */\n/* vim: set ts=2 et sw=2 tw=80: */\n\n/*************************************************************\n *\n *  MathJax.js\n *  \n *  The main support code for the MathJax Hub, including the\n *  Ajax, Callback, Messaging, and Object-Oriented Programming\n *  libraries, as well as the base Jax classes, and startup\n *  processing code.\n *  \n *  ---------------------------------------------------------------------\n *  \n *  Copyright (c) 2009-2016 The MathJax Consortium\n * \n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n\n//\n//  Check if browser can support MathJax (no one fails this nowadays)\n//\nif (document.getElementById && document.childNodes && document.createElement) {\n//\n//  Skip if MathJax is already loaded\n//\nif (!(window.MathJax && MathJax.Hub)) {\n  \n//\n//  Get author configuration from MathJax variable, if any\n//\nif (window.MathJax) {window.MathJax = {AuthorConfig: window.MathJax}}\n               else {window.MathJax = {}}\n\n// MathJax.isPacked = true; // This line is uncommented by the packer.\n\nMathJax.version = \"2.7.0-beta\";\nMathJax.fileversion = \"2.7.0-beta\";\nMathJax.cdnVersion = \"2.7.0-beta\";  // specifies a revision to break caching\nMathJax.cdnFileVersions = {};  // can be used to specify revisions for individual files\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var PROTO = [];  // a static object used to indicate when a prototype is being created\n  var OBJECT = function (def) {\n    var obj = def.constructor; if (!obj) {obj = function () {}}\n    for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}}\n    return obj;\n  };\n  var CONSTRUCTOR = function () {\n    return function () {return arguments.callee.Init.call(this,arguments)};\n  };\n\n  BASE.Object = OBJECT({\n    constructor: CONSTRUCTOR(),\n    \n    Subclass: function (def,classdef) {\n      var obj = CONSTRUCTOR();\n      obj.SUPER = this; obj.Init = this.Init;\n      obj.Subclass = this.Subclass; obj.Augment = this.Augment;\n      obj.protoFunction = this.protoFunction;\n      obj.can = this.can; obj.has = this.has; obj.isa = this.isa;\n      obj.prototype = new this(PROTO);\n      obj.prototype.constructor = obj;  // the real constructor\n      obj.Augment(def,classdef);\n      return obj;\n    },\n  \n    Init: function (args) {\n      var obj = this;\n      if (args.length === 1 && args[0] === PROTO) {return obj}\n      if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)}\n      return obj.Init.apply(obj,args) || obj;\n    },\n    \n    Augment: function (def,classdef) {\n      var id;\n      if (def != null) {\n        for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== this.prototype.toString && def.toString !== {}.toString)\n          {this.protoFunction('toString',def.toString)}\n      }\n      if (classdef != null) {\n        for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}}\n      }\n      return this;\n    },\n  \n    protoFunction: function (id,def) {\n      this.prototype[id] = def;\n      if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype}\n    },\n  \n    prototype: {\n      Init: function () {},\n      SUPER: function (fn) {return fn.callee.SUPER},\n      can: function (method) {return typeof(this[method]) === \"function\"},\n      has: function (property) {return typeof(this[property]) !== \"undefined\"},\n      isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)}\n    },\n  \n    can: function (method)   {return this.prototype.can.call(this,method)},\n    has: function (property) {return this.prototype.has.call(this,property)},\n    isa: function (obj) {\n      var constructor = this;\n      while (constructor) {\n        if (constructor === obj) {return true} else {constructor = constructor.SUPER}\n      }\n      return false;\n    },\n\n\n    SimpleSUPER: OBJECT({\n      constructor: function (def) {return this.SimpleSUPER.define(def)},\n\n      define: function (src) {\n\tvar dst = {};\n\tif (src != null) {\n          for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}}\n\t  // MSIE doesn't list toString even if it is not native so handle it separately\n          if (src.toString !== this.prototype.toString && src.toString !== {}.toString)\n            {dst.toString = this.wrap('toString',src.toString)}\n\t}\n\treturn dst;\n      },\n\n      wrap: function (id,f) {\n        if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f}\n        var fn = function () {\n          this.SUPER = fn.SUPER[id];\n          try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err}\n          delete this.SUPER;\n          return result;\n        }\n        fn.toString = function () {return f.toString.apply(f,arguments)}\n        return fn;\n      }\n\n    })\n  });\n  \n  BASE.Object.isArray = Array.isArray || function (obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  \n  BASE.Object.Array = Array;\n\n})(\"MathJax\");\n\n/**********************************************************/\n\n/*\n *  Create a callback function from various forms of data:\n *  \n *     MathJax.Callback(fn)    -- callback to a function\n *\n *     MathJax.Callback([fn])  -- callback to function\n *     MathJax.Callback([fn,data...])\n *                             -- callback to function with given data as arguments\n *     MathJax.Callback([object,fn])\n *                             -- call fn with object as \"this\"\n *     MathJax.Callback([object,fn,data...])\n *                             -- call fn with object as \"this\" and data as arguments\n *     MathJax.Callback([\"method\",object])\n *                             -- call method of object wth object as \"this\"\n *     MathJax.Callback([\"method\",object,data...])\n *                             -- as above, but with data as arguments to method\n *\n *     MathJax.Callback({hook: fn, data: [...], object: this})\n *                             -- give function, data, and object to act as \"this\" explicitly\n *\n *     MathJax.Callback(\"code\")  -- callback that compiles and executes a string\n *\n *     MathJax.Callback([...],i)\n *                             -- use slice of array starting at i and interpret\n *                                result as above.  (Used for passing \"arguments\" array\n *                                and trimming initial arguments, if any.)\n */\n\n/*\n *    MathJax.Callback.After([...],cb1,cb2,...)\n *                             -- make a callback that isn't called until all the other\n *                                ones are called first.  I.e., wait for a union of\n *                                callbacks to occur before making the given callback.\n */\n\n/*\n *  MathJax.Callback.Queue([callback,...])\n *                             -- make a synchronized queue of commands that process\n *                                sequentially, waiting for those that return uncalled\n *                                callbacks.\n */\n\n/*\n *  MathJax.Callback.Signal(name)\n *                             -- finds or creates a names signal, to which listeners\n *                                can be attached and are signaled by messages posted\n *                                to the signal.  Responses can be asynchronous.\n */\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  var isArray = BASE.Object.isArray;\n  //\n  //  Create a callback from an associative array\n  //\n  var CALLBACK = function (data) {\n    var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)};\n    for (var id in CALLBACK.prototype) {\n      if (CALLBACK.prototype.hasOwnProperty(id)) {\n        if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]}\n                                         else {cb[id] = CALLBACK.prototype[id]}\n      }\n    }\n    cb.toString = CALLBACK.prototype.toString;\n    return cb;\n  };\n  CALLBACK.prototype = {\n    isCallback: true,\n    hook: function () {},\n    data: [],\n    object: window,\n    execute: function () {\n      if (!this.called || this.autoReset) {\n        this.called = !this.autoReset;\n        return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0)));\n      }\n    },\n    reset: function () {delete this.called},\n    toString: function () {return this.hook.toString.apply(this.hook,arguments)}\n  };\n  var ISCALLBACK = function (f) {\n    return (typeof(f) === \"function\" && f.isCallback);\n  }\n\n  //\n  //  Evaluate a string in global context\n  //\n  var EVAL = function (code) {return eval.call(window,code)}\n  var TESTEVAL = function () {\n    EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context\n    if (window.__TeSt_VaR__) {\n      try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode\n      catch (error) { window.__TeSt_VaR__ = null; } \n    } else {\n      if (window.execScript) {\n        // IE\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          window.execScript(code);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      } else {\n        // Safari2\n        EVAL = function (code) {\n          BASE.__code = code;\n          code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\";\n          var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body}\n          var script = document.createElement(\"script\");\n          script.appendChild(document.createTextNode(code));\n          head.appendChild(script); head.removeChild(script);\n          var result = BASE.__result; delete BASE.__result; delete BASE.__code;\n          if (result instanceof Error) {throw result}\n          return result;\n        }\n      }\n    }\n    TESTEVAL = null;\n  };\n  \n  //\n  //  Create a callback from various types of data\n  //\n  var USING = function (args,i) {\n    if (arguments.length > 1) {\n      if (arguments.length === 2 && !(typeof arguments[0] === 'function') &&\n          arguments[0] instanceof Object && typeof arguments[1] === 'number')\n            {args = [].slice.call(args,i)}\n      else {args = [].slice.call(arguments,0)}\n    }\n    if (isArray(args) && args.length === 1) {args = args[0]}\n    if (typeof args === 'function') {\n      if (args.execute === CALLBACK.prototype.execute) {return args}\n      return CALLBACK({hook: args});\n    } else if (isArray(args)) {\n      if (typeof(args[0]) === 'string' && args[1] instanceof Object &&\n                 typeof args[1][args[0]] === 'function') {\n        return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)});\n      } else if (typeof args[0] === 'function') {\n        return CALLBACK({hook: args[0], data: args.slice(1)});\n      } else if (typeof args[1] === 'function') {\n        return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)});\n      }\n    } else if (typeof(args) === 'string') {\n      if (TESTEVAL) TESTEVAL();\n      return CALLBACK({hook: EVAL, data: [args]});\n    } else if (args instanceof Object) {\n      return CALLBACK(args);\n    } else if (typeof(args) === 'undefined') {\n      return CALLBACK({});\n    }\n    throw Error(\"Can't make callback from given data\");\n  };\n  \n  //\n  //  Wait for a given time to elapse and then perform the callback\n  //\n  var DELAY = function (time,callback) {\n    callback = USING(callback);\n    callback.timeout = setTimeout(callback,time);\n    return callback;\n  };\n\n  //\n  //  Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed\n  //\n  var WAITFOR = function (callback,signal) {\n    callback = USING(callback);\n    if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++}\n  };\n  var WAITEXECUTE = function () {\n    var signals = this.signal; delete this.signal;\n    this.execute = this.oldExecute; delete this.oldExecute;\n    var result = this.execute.apply(this,arguments);\n    if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else {\n      for (var i = 0, m = signals.length; i < m; i++) {\n        signals[i].pending--;\n        if (signals[i].pending <= 0) {signals[i].call()}\n      }\n    }\n  };\n  var WAITSIGNAL = function (callback,signals) {\n    if (!isArray(signals)) {signals = [signals]}\n    if (!callback.signal) {\n      callback.oldExecute = callback.execute;\n      callback.execute = WAITEXECUTE;\n      callback.signal = signals;\n    } else if (signals.length === 1) {callback.signal.push(signals[0])}\n      else {callback.signal = callback.signal.concat(signals)}\n  };\n\n  //\n  //  Create a callback that is called when a collection of other callbacks have\n  //  all been executed.  If the callback gets called immediately (i.e., the\n  //  others are all already called), check if it returns another callback\n  //  and return that instead.\n  //\n  var AFTER = function (callback) {\n    callback = USING(callback);\n    callback.pending = 0;\n    for (var i = 1, m = arguments.length; i < m; i++)\n      {if (arguments[i]) {WAITFOR(arguments[i],callback)}}\n    if (callback.pending === 0) {\n      var result = callback();\n      if (ISCALLBACK(result)) {callback = result}\n    }\n    return callback;\n  };\n\n  //\n  //  An array of prioritized hooks that are executed sequentially\n  //  with a given set of data.\n  //\n  var HOOKS = MathJax.Object.Subclass({\n    //\n    //  Initialize the array and the auto-reset status\n    //\n    Init: function (reset) {\n      this.hooks = [];\n      this.remove = []; // used when hooks are removed during execution of list\n      this.reset = reset;\n      this.running = false;\n    },\n    //\n    //  Add a callback to the list, in priority order (default priority is 10)\n    //\n    Add: function (hook,priority) {\n      if (priority == null) {priority = 10}\n      if (!ISCALLBACK(hook)) {hook = USING(hook)}\n      hook.priority = priority;\n      var i = this.hooks.length;\n      while (i > 0 && priority < this.hooks[i-1].priority) {i--}\n      this.hooks.splice(i,0,hook);\n      return hook;\n    },\n    Remove: function (hook) {\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.hooks[i] === hook) {\n          if (this.running) {this.remove.push(i)}\n            else {this.hooks.splice(i,1)}\n          return;\n        }\n      }\n    },\n    //\n    //  Execute the list of callbacks, resetting them if requested.\n    //  If any return callbacks, return a callback that will be \n    //  executed when they all have completed.\n    //  Remove any hooks that requested being removed during processing.\n    //\n    Execute: function () {\n      var callbacks = [{}];\n      this.running = true;\n      for (var i = 0, m = this.hooks.length; i < m; i++) {\n        if (this.reset) {this.hooks[i].reset()}\n        var result = this.hooks[i].apply(window,arguments);\n        if (ISCALLBACK(result) && !result.called) {callbacks.push(result)}\n      }\n      this.running = false;\n      if (this.remove.length) {this.RemovePending()}\n      if (callbacks.length === 1) {return null}\n      if (callbacks.length === 2) {return callbacks[1]}\n      return AFTER.apply({},callbacks);\n    },\n    //\n    //  Remove hooks that asked to be removed during execution of list\n    //\n    RemovePending: function () {\n      this.remove = this.remove.sort();\n      for (var i = this.remove.length-1; i >= 0; i--) {this.hooks.splice(i,1)}\n      this.remove = [];\n    }\n\n  });\n  \n  //\n  //  Run an array of callbacks passing them the given data.\n  //  (Legacy function, since this has been replaced by the HOOKS object).\n  //\n  var EXECUTEHOOKS = function (hooks,data,reset) {\n    if (!hooks) {return null}\n    if (!isArray(hooks)) {hooks = [hooks]}\n    if (!isArray(data))  {data = (data == null ? [] : [data])}\n    var handler = HOOKS(reset);\n    for (var i = 0, m = hooks.length; i < m; i++) {handler.Add(hooks[i])}\n    return handler.Execute.apply(handler,data);\n  };\n   \n  //\n  //  Command queue that performs commands in order, waiting when\n  //  necessary for commands to complete asynchronousely\n  //\n  var QUEUE = BASE.Object.Subclass({\n    //\n    //  Create the queue and push any commands that are specified\n    //\n    Init: function () {\n      this.pending = this.running = 0;\n      this.queue = [];\n      this.Push.apply(this,arguments);\n    },\n    //\n    //  Add commands to the queue and run them. Adding a callback object\n    //  (rather than a callback specification) queues a wait for that callback.\n    //  Return the final callback for synchronization purposes.\n    //\n    Push: function () {\n      var callback;\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        callback = USING(arguments[i]);\n        if (callback === arguments[i] && !callback.called)\n          {callback = USING([\"wait\",this,callback])}\n        this.queue.push(callback);\n      }\n      if (!this.running && !this.pending) {this.Process()}\n      return callback;\n    },\n    //\n    //  Process the command queue if we aren't waiting on another command\n    //\n    Process: function (queue) {\n      while (!this.running && !this.pending && this.queue.length) {\n        var callback = this.queue[0];\n        queue = this.queue.slice(1); this.queue = [];\n        this.Suspend(); var result = callback(); this.Resume();\n        if (queue.length) {this.queue = queue.concat(this.queue)}\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n      }\n    },\n    //\n    //  Suspend/Resume command processing on this queue\n    //\n    Suspend: function () {this.running++},\n    Resume: function () {if (this.running) {this.running--}},\n    //\n    //  Used by WAITFOR to restart the queue when an action completes\n    //\n    call: function () {this.Process.apply(this,arguments)},\n    wait: function (callback) {return callback}\n  });\n  \n  //\n  //  Create a named signal that listeners can attach to, to be signaled by\n  //  postings made to the signal.  Posts are queued if they occur while one\n  //  is already in process.\n  //\n  var SIGNAL = QUEUE.Subclass({\n    Init: function (name) {\n      QUEUE.prototype.Init.call(this);\n      this.name = name;\n      this.posted = [];              // the messages posted so far\n      this.listeners = HOOKS(true);  // those with interest in this signal\n      this.posting = false;\n      this.callback = null;\n    },\n    //\n    // Post a message to the signal listeners, with callback for when complete\n    //\n    Post: function (message,callback,forget) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        this.Push([\"Post\",this,message,callback,forget]);\n      } else {\n        this.callback = callback; callback.reset();\n        if (!forget) {this.posted.push(message)}\n        this.Suspend(); this.posting = true;\n        var result = this.listeners.Execute(message);\n        if (ISCALLBACK(result) && !result.called) {WAITFOR(result,this)}\n        this.Resume(); this.posting = false;\n        if (!this.pending) {this.call()}\n      }\n      return callback;\n    },\n    //\n    //  Clear the post history (so new listeners won't get old messages)\n    //\n    Clear: function (callback) {\n      callback = USING(callback);\n      if (this.posting || this.pending) {\n        callback = this.Push([\"Clear\",this,callback]);\n      } else {\n        this.posted = [];\n        callback();\n      }\n      return callback;\n    },\n    //\n    //  Call the callback (all replies are in) and process the command queue\n    //\n    call: function () {this.callback(this); this.Process()},\n    \n    //\n    //  A listener calls this to register interest in the signal (so it will be called\n    //  when posts occur).  If ignorePast is true, it will not be sent the post history.\n    //\n    Interest: function (callback,ignorePast,priority) {\n      callback = USING(callback);\n      this.listeners.Add(callback,priority);\n      if (!ignorePast) {\n        for (var i = 0, m = this.posted.length; i < m; i++) {\n          callback.reset();\n          var result = callback(this.posted[i]);\n          if (ISCALLBACK(result) && i === this.posted.length-1) {WAITFOR(result,this)}\n        }\n      }\n      return callback;\n    },\n    //\n    //  A listener calls this to remove itself from a signal\n    //\n    NoInterest: function (callback) {\n      this.listeners.Remove(callback);\n    },\n    \n    //\n    //  Hook a callback to a particular message on this signal\n    //\n    MessageHook: function (msg,callback,priority) {\n      callback = USING(callback);\n      if (!this.hooks) {this.hooks = {}; this.Interest([\"ExecuteHooks\",this])}\n      if (!this.hooks[msg]) {this.hooks[msg] = HOOKS(true)}\n      this.hooks[msg].Add(callback,priority);\n      for (var i = 0, m = this.posted.length; i < m; i++)\n        {if (this.posted[i] == msg) {callback.reset(); callback(this.posted[i])}}\n      callback.msg = msg; // keep track so we can remove it\n      return callback;\n    },\n    //\n    //  Execute the message hooks for the given message\n    //\n    ExecuteHooks: function (msg) {\n      var type = (isArray(msg) ? msg[0] : msg);\n      if (!this.hooks[type]) {return null}\n      return this.hooks[type].Execute(msg);\n    },\n    //\n    //  Remove a hook safely\n    //\n    RemoveHook: function (hook) {\n      this.hooks[hook.msg].Remove(hook);\n    }\n    \n  },{\n    signals: {},  // the named signals\n    find: function (name) {\n      if (!SIGNAL.signals[name]) {SIGNAL.signals[name] = new SIGNAL(name)}\n      return SIGNAL.signals[name];\n    }\n  });\n  \n  //\n  //  The main entry-points\n  //\n  BASE.Callback = BASE.CallBack = USING;\n  BASE.Callback.Delay = DELAY;\n  BASE.Callback.After = AFTER;\n  BASE.Callback.Queue = QUEUE;\n  BASE.Callback.Signal = SIGNAL.find;\n  BASE.Callback.Hooks = HOOKS;\n  BASE.Callback.ExecuteHooks = EXECUTEHOOKS;\n})(\"MathJax\");\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n  \n  var isSafari2 = (navigator.vendor === \"Apple Computer, Inc.\" &&\n                   typeof navigator.vendorSub === \"undefined\");\n  var sheets = 0; // used by Safari2\n\n  //\n  //  Update sheets count and look up the head object\n  //  \n  var HEAD = function (head) {\n    if (document.styleSheets && document.styleSheets.length > sheets)\n      {sheets = document.styleSheets.length}\n    if (!head) {\n      head = document.head || ((document.getElementsByTagName(\"head\"))[0]);\n      if (!head) {head = document.body}\n    }\n    return head;\n  };\n  \n  //\n  //  Remove scripts that are completed so they don't clutter up the HEAD.\n  //  This runs via setTimeout since IE7 can't remove the script while it is running.\n  //\n  var SCRIPTS = [];  // stores scripts to be removed after a delay\n  var REMOVESCRIPTS = function () {\n    for (var i = 0, m = SCRIPTS.length; i < m; i++) {BASE.Ajax.head.removeChild(SCRIPTS[i])}\n    SCRIPTS = [];\n  };\n  \n  var PATH = {};\n  PATH[BASENAME] = \"\";  // empty path gets the root URL\n  PATH.Contrib = \"https://cdn.mathjax.org/mathjax/contrib\";   // the third-party extensions\n  \n  BASE.Ajax = {\n    loaded: {},         // files already loaded\n    loading: {},        // files currently in process of loading\n    loadHooks: {},      // hooks to call when files are loaded\n    timeout: 15*1000,   // timeout for loading of files (15 seconds)\n    styleDelay: 1,      // delay to use before styles are available\n    config: {\n      root: \"\",         // URL of root directory to load from\n      path: PATH        // paths to named URL's (e.g., [MathJax]/...)\n    },\n    params:  {},        // filled in from MathJax.js?...\n\n    STATUS: {\n      OK: 1,         // file is loading or did load OK\n      ERROR: -1      // file timed out during load\n    },\n\n    //\n    //  Return a complete URL to a file (replacing any root names)\n    //\n    fileURL: function (file) {\n      var match = file.match(/^\\[([-._a-z0-9]+)\\]/i);\n      if (match && match[1] in PATH)\n        {file = (PATH[match[1]]||this.config.root) + file.substr(match[1].length+2)}\n      return file;\n    },\n    //\n    //  Replace root names if URL includes one\n    //\n    fileName: function (url) {\n      var root = this.config.root;\n      if (url.substr(0,root.length) === root) {url = \"[\"+BASENAME+\"]\"+url.substr(root.length)}\n      else {\n        for (var id in PATH) {if (PATH.hasOwnProperty(id) && PATH[id]) {\n          if (url.substr(0,PATH[id].length) === PATH[id])\n            {url = \"[\"+id+\"]\"+url.substr(PATH[id].length); break}\n        }}\n      }\n      return url;\n    },\n    //\n    //  Cache-breaking revision number for file\n    //\n    fileRev: function (file) {\n      var V = BASE.cdnFileVersions[file] || BASE.cdnVersion || '';\n      if (V) {V = \"?V=\"+V}\n      return V;\n    },\n    urlRev: function (file) {return this.fileURL(file)+this.fileRev(file)},\n    \n    //\n    //  Load a file if it hasn't been already.\n    //  Make sure the file URL is \"safe\"?\n    //\n    Require: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      if (this.params.noContrib && file.substr(0,9) === \"[Contrib]\") {\n        callback(this.STATUS.ERROR);\n      } else {\n        file = this.fileURL(file);\n        // FIXME: check that URL is OK\n        if (this.loaded[file]) {\n          callback(this.loaded[file]);\n        } else {\n          var FILE = {}; FILE[type] = file;\n          this.Load(FILE,callback);\n        }\n      }\n      return callback;\n    },\n\n    //\n    //  Load a file regardless of where it is and whether it has\n    //  already been loaded.\n    //\n    Load: function (file,callback) {\n      callback = BASE.Callback(callback); var type;\n      if (file instanceof Object) {\n        for (var i in file)\n          {if (file.hasOwnProperty(i)) {type = i.toUpperCase(); file = file[i]}}\n      } else {type = file.split(/\\./).pop().toUpperCase()}\n      file = this.fileURL(file);\n      if (this.loading[file]) {\n        this.addHook(file,callback);\n      } else {\n        this.head = HEAD(this.head);\n        if (this.loader[type]) {this.loader[type].call(this,file,callback)}\n          else {throw Error(\"Can't load files of type \"+type)}\n      }\n      return callback;\n    },\n    \n    //\n    //  Register a load hook for a particular file (it will be called when\n    //  loadComplete() is called for that file)\n    //\n    LoadHook: function (file,callback,priority) {\n      callback = BASE.Callback(callback);\n      if (file instanceof Object)\n        {for (var i in file) {if (file.hasOwnProperty(i)) {file = file[i]}}}\n      file = this.fileURL(file);\n      if (this.loaded[file]) {callback(this.loaded[file])}\n        else {this.addHook(file,callback,priority)}\n      return callback;\n    },\n    addHook: function (file,callback,priority) {\n      if (!this.loadHooks[file]) {this.loadHooks[file] = MathJax.Callback.Hooks()}\n      this.loadHooks[file].Add(callback,priority);\n      callback.file = file;\n    },\n    removeHook: function (hook) {\n      if (this.loadHooks[hook.file]) {\n        this.loadHooks[hook.file].Remove(hook);\n        if (!this.loadHooks[hook.file].hooks.length) {delete this.loadHooks[hook.file]}\n      }\n    },\n    \n    //\n    //  Used when files are combined in a preloading configuration file\n    //\n    Preloading: function () {\n      for (var i = 0, m = arguments.length; i < m; i++) {\n        var file = this.fileURL(arguments[i]);\n        if (!this.loading[file]) {this.loading[file] = {preloaded: true}}\n      }\n    },\n    \n    //\n    //  Code used to load the various types of files\n    //  (JS for JavaScript, CSS for style sheets)\n    //\n    loader: {\n      //\n      //  Create a SCRIPT tag to load the file\n      //\n      JS: function (file,callback) {\n        var name = this.fileName(file);\n        var script = document.createElement(\"script\");\n        var timeout = BASE.Callback([\"loadTimeout\",this,file]);\n        this.loading[file] = {\n          callback: callback,\n          timeout: setTimeout(timeout,this.timeout),\n          status: this.STATUS.OK,\n          script: script\n        };\n        //\n        // Add this to the structure above after it is created to prevent recursion\n        //  when loading the initial localization file (before loading messsage is available)\n        //\n        this.loading[file].message = BASE.Message.File(name);\n        script.onerror = timeout;  // doesn't work in IE and no apparent substitute\n        script.type = \"text/javascript\";\n        script.src = file+this.fileRev(name);\n        this.head.appendChild(script);\n      },\n      //\n      //  Create a LINK tag to load the style sheet\n      //\n      CSS: function (file,callback) {\n        var name = this.fileName(file);\n        var link = document.createElement(\"link\");\n        link.rel = \"stylesheet\"; link.type = \"text/css\";\n        link.href = file+this.fileRev(name);\n        this.loading[file] = {\n          callback: callback,\n          message: BASE.Message.File(name),\n          status: this.STATUS.OK\n        };\n        this.head.appendChild(link);\n        this.timer.create.call(this,[this.timer.file,file],link);\n      }\n    },\n    \n    //\n    //  Timing code for checking when style sheets are available.\n    //\n    timer: {\n      //\n      //  Create the timing callback and start the timing loop.\n      //  We use a delay because some browsers need it to allow the styles\n      //  to be processed.\n      //\n      create: function (callback,node) {\n        callback = BASE.Callback(callback);\n        if (node.nodeName === \"STYLE\" && node.styleSheet &&\n            typeof(node.styleSheet.cssText) !== 'undefined') {\n          callback(this.STATUS.OK); // MSIE processes style immediately, but doesn't set its styleSheet!\n        } else if (window.chrome && node.nodeName === \"LINK\") {\n          callback(this.STATUS.OK); // Chrome doesn't give access to cssRules for stylesheet in\n                                    //   a link node, so we can't detect when it is loaded.\n        } else if (isSafari2) {\n          this.timer.start(this,[this.timer.checkSafari2,sheets++,callback],this.styleDelay);\n        } else {\n          this.timer.start(this,[this.timer.checkLength,node,callback],this.styleDelay);\n        }\n        return callback;\n      },\n      //\n      //  Start the timer for the given callback checker\n      //\n      start: function (AJAX,check,delay,timeout) {\n        check = BASE.Callback(check);\n        check.execute = this.execute; check.time = this.time;\n        check.STATUS = AJAX.STATUS; check.timeout = timeout || AJAX.timeout;\n        check.delay = check.total = delay || 0;\n        if (delay) {setTimeout(check,delay)} else {check()}\n      },\n      //\n      //  Increment the time total, increase the delay\n      //  and test if we are past the timeout time.\n      //  \n      time: function (callback) {\n        this.total += this.delay;\n        this.delay = Math.floor(this.delay * 1.05 + 5);\n        if (this.total >= this.timeout) {callback(this.STATUS.ERROR); return 1}\n        return 0;\n      },\n      //\n      //  For JS file loads, call the proper routine according to status\n      //\n      file: function (file,status) {\n        if (status < 0) {BASE.Ajax.loadTimeout(file)} else {BASE.Ajax.loadComplete(file)}\n      },\n      //\n      //  Call the hook with the required data\n      //\n      execute: function () {this.hook.call(this.object,this,this.data[0],this.data[1])},\n      //\n      //  Safari2 doesn't set the link's stylesheet, so we need to look in the\n      //  document.styleSheets array for the new sheet when it is created\n      //\n      checkSafari2: function (check,length,callback) {\n        if (check.time(callback)) return;\n        if (document.styleSheets.length > length &&\n            document.styleSheets[length].cssRules &&\n            document.styleSheets[length].cssRules.length)\n          {callback(check.STATUS.OK)} else {setTimeout(check,check.delay)}\n      },\n      //\n      //  Look for the stylesheets rules and check when they are defined\n      //  and no longer of length zero.  (This assumes there actually ARE\n      //  some rules in the stylesheet.)\n      //  \n      checkLength: function (check,node,callback) {\n        if (check.time(callback)) return;\n        var isStyle = 0; var sheet = (node.sheet || node.styleSheet);\n        try {if ((sheet.cssRules||sheet.rules||[]).length > 0) {isStyle = 1}} catch(err) {\n          if (err.message.match(/protected variable|restricted URI/)) {isStyle = 1}\n          else if (err.message.match(/Security error/)) {\n            // Firefox3 gives \"Security error\" for missing files, so\n            //   can't distinguish that from OK files on remote servers.\n            //   or OK files in different directory from local files.\n            isStyle = 1; // just say it is OK (can't really tell)\n          }\n        }\n        if (isStyle) {\n          // Opera 9.6 requires this setTimeout\n          setTimeout(BASE.Callback([callback,check.STATUS.OK]),0);\n        } else {\n          setTimeout(check,check.delay);\n        }\n      }\n    },\n\n    //\n    //  JavaScript code must call this when they are completely initialized\n    //  (this allows them to perform asynchronous actions before indicating\n    //  that they are complete).\n    //\n    loadComplete: function (file) {\n      file = this.fileURL(file);\n      var loading = this.loading[file];\n      if (loading && !loading.preloaded) {\n        BASE.Message.Clear(loading.message);\n        clearTimeout(loading.timeout);\n\tif (loading.script) {\n\t  if (SCRIPTS.length === 0) {setTimeout(REMOVESCRIPTS,0)}\n\t  SCRIPTS.push(loading.script);\n\t}\n        this.loaded[file] = loading.status; delete this.loading[file];\n        this.addHook(file,loading.callback);\n      } else {\n        if (loading) {delete this.loading[file]}\n        this.loaded[file] = this.STATUS.OK;\n        loading = {status: this.STATUS.OK}\n      }\n      if (!this.loadHooks[file]) {return null}\n      return this.loadHooks[file].Execute(loading.status);\n    },\n    \n    //\n    //  If a file fails to load within the timeout period (or the onerror handler\n    //  is called), this routine runs to signal the error condition.\n    //  \n    loadTimeout: function (file) {\n      if (this.loading[file].timeout) {clearTimeout(this.loading[file].timeout)}\n      this.loading[file].status = this.STATUS.ERROR;\n      this.loadError(file);\n      this.loadComplete(file);\n    },\n    \n    //\n    //  The default error hook for file load failures\n    //\n    loadError: function (file) {\n      BASE.Message.Set([\"LoadFailed\",\"File failed to load: %1\",file],null,2000);\n      BASE.Hub.signal.Post([\"file load error\",file]);\n    },\n\n    //\n    //  Defines a style sheet from a hash of style declarations (key:value pairs\n    //  where the key is the style selector and the value is a hash of CSS attributes \n    //  and values).\n    //\n    Styles: function (styles,callback) {\n      var styleString = this.StyleString(styles);\n      if (styleString === \"\") {\n        callback = BASE.Callback(callback);\n        callback();\n      } else {\n        var style = document.createElement(\"style\"); style.type = \"text/css\";\n        this.head = HEAD(this.head);\n        this.head.appendChild(style);\n        if (style.styleSheet && typeof(style.styleSheet.cssText) !== 'undefined') {\n          style.styleSheet.cssText = styleString;\n        } else {\n          style.appendChild(document.createTextNode(styleString));\n        }\n        callback = this.timer.create.call(this,callback,style);\n      }\n      return callback;\n    },\n    \n    //\n    //  Create a stylesheet string from a style declaration object\n    //\n    StyleString: function (styles) {\n      if (typeof(styles) === 'string') {return styles}\n      var string = \"\", id, style;\n      for (id in styles) {if (styles.hasOwnProperty(id)) {\n        if (typeof styles[id] === 'string') {\n          string += id + \" {\"+styles[id]+\"}\\n\";\n        } else if (BASE.Object.isArray(styles[id])) {\n          for (var i = 0; i < styles[id].length; i++) {\n            style = {}; style[id] = styles[id][i];\n            string += this.StyleString(style);\n          }\n        } else if (id.substr(0,6) === '@media') {\n          string += id + \" {\"+this.StyleString(styles[id])+\"}\\n\";\n        } else if (styles[id] != null) {\n          style = [];\n          for (var name in styles[id]) {if (styles[id].hasOwnProperty(name)) {\n            if (styles[id][name] != null) \n              {style[style.length] = name + ': ' + styles[id][name]}\n          }}\n          string += id +\" {\"+style.join('; ')+\"}\\n\";\n        }\n      }}\n      return string;\n    }\n  };\n  \n})(\"MathJax\");\n\n/**********************************************************/\n\nMathJax.HTML = {\n  //\n  //  Create an HTML element with given attributes and content.\n  //  The def parameter is an (optional) object containing key:value pairs\n  //  of the attributes and their values, and contents is an (optional)\n  //  array of strings to be inserted as text, or arrays of the form\n  //  [type,def,contents] that describes an HTML element to be inserted\n  //  into the current element.  Thus the contents can describe a complete\n  //  HTML snippet of arbitrary complexity.  E.g.:\n  //  \n  //    MathJax.HTML.Element(\"span\",{id:\"mySpan\",style{\"font-style\":\"italic\"}},[\n  //        \"(See the \",[\"a\",{href:\"http://www.mathjax.org\"},[\"MathJax home page\"]],\n  //        \" for more details.)\"]);\n  // \n  Element: function (type,def,contents) {\n    var obj = document.createElement(type), id;\n    if (def) {\n      if (def.hasOwnProperty(\"style\")) {\n        var style = def.style; def.style = {};\n        for (id in style) {if (style.hasOwnProperty(id))\n          {def.style[id.replace(/-([a-z])/g,this.ucMatch)] = style[id]}}\n      }\n      MathJax.Hub.Insert(obj,def);\n      for (id in def) {\n        if (id === \"role\" || id.substr(0,5) === \"aria-\") obj.setAttribute(id,def[id]);\n      }\n    }\n    if (contents) {\n      if (!MathJax.Object.isArray(contents)) {contents = [contents]}\n      for (var i = 0, m = contents.length; i < m; i++) {\n        if (MathJax.Object.isArray(contents[i])) {\n          obj.appendChild(this.Element(contents[i][0],contents[i][1],contents[i][2]));\n        } else if (type === \"script\") { // IE throws an error if script is added as a text node\n          this.setScript(obj, contents[i]);\n        } else {\n          obj.appendChild(document.createTextNode(contents[i]));\n        }\n      }\n    }\n    return obj;\n  },\n  ucMatch: function (match,c) {return c.toUpperCase()},\n  addElement: function (span,type,def,contents) {return span.appendChild(this.Element(type,def,contents))},\n  TextNode: function (text) {return document.createTextNode(text)},\n  addText: function (span,text) {return span.appendChild(this.TextNode(text))},\n\n  //\n  //  Set and get the text of a script\n  //\n  setScript: function (script,text) {\n    if (this.setScriptBug) {script.text = text} else {\n      while (script.firstChild) {script.removeChild(script.firstChild)}\n      this.addText(script,text);\n    }\n  },\n  getScript: function (script) {\n    var text = (script.text === \"\" ? script.innerHTML : script.text);\n    return text.replace(/^\\s+/,\"\").replace(/\\s+$/,\"\");\n  },\n\n  //\n  //  Manage cookies\n  //\n  Cookie: {\n    prefix: \"mjx\",\n    expires: 365,\n    \n    //\n    //  Save an object as a named cookie\n    //\n    Set: function (name,def) {\n      var keys = [];\n      if (def) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          keys.push(id+\":\"+def[id].toString().replace(/&/g,\"&&\"));\n        }}\n      }\n      var cookie = this.prefix+\".\"+name+\"=\"+escape(keys.join('&;'));\n      if (this.expires) {\n        var time = new Date(); time.setDate(time.getDate() + this.expires);\n        cookie += '; expires='+time.toGMTString();\n      }\n      try {document.cookie = cookie+\"; path=/\"} catch (err) {} // ignore errors saving cookies\n    },\n    \n    //\n    //  Get the contents of a named cookie and incorporate\n    //  it into the given object (or return a fresh one)\n    //\n    Get: function (name,obj) {\n      if (!obj) {obj = {}}\n      var pattern = new RegExp(\"(?:^|;\\\\s*)\"+this.prefix+\"\\\\.\"+name+\"=([^;]*)(?:;|$)\");\n      var match;\n      try {match = pattern.exec(document.cookie)} catch (err) {}; // ignore errors reading cookies\n      if (match && match[1] !== \"\") {\n        var keys = unescape(match[1]).split('&;');\n        for (var i = 0, m = keys.length; i < m; i++) {\n          match = keys[i].match(/([^:]+):(.*)/);\n          var value = match[2].replace(/&&/g,'&');\n          if (value === \"true\") {value = true} else if (value === \"false\") {value = false}\n            else if (value.match(/^-?(\\d+(\\.\\d+)?|\\.\\d+)$/)) {value = parseFloat(value)}\n          obj[match[1]] = value;\n        }\n      }\n      return obj;\n    }\n  }\n    \n};\n\n\n/**********************************************************/\n\nMathJax.Localization = {\n  \n  locale: \"en\",\n  directory: \"[MathJax]/localization\",\n  strings: {\n    // Currently, this list is not modified by the MathJax-i18n script. You can\n    // run the following command in MathJax/unpacked/localization to update it:\n    //\n    // find . -name \"*.js\" | xargs grep menuTitle\\: | grep -v qqq | sed 's/^\\.\\/\\(.*\\)\\/.*\\.js\\:  /    \"\\1\"\\: \\{/' | sed 's/,$/\\},/' | sed 's/\"English\"/\"English\", isLoaded: true/' > tmp ; sort tmp > tmp2 ; sed '$ s/,$//' tmp2 ; rm tmp*\n    //\n    // This only takes languages with localization data so you must also add\n    // the languages that use a remap but are not translated at all.\n    //\n    \"ast\": {menuTitle: \"asturianu\"},\n    \"bg\": {menuTitle: \"\\u0431\\u044A\\u043B\\u0433\\u0430\\u0440\\u0441\\u043A\\u0438\"},\n    \"bcc\": {menuTitle: \"\\u0628\\u0644\\u0648\\u0686\\u06CC\"},\n    \"br\": {menuTitle: \"brezhoneg\"},\n    \"ca\": {menuTitle: \"catal\\u00E0\"},\n    \"cdo\": {menuTitle: \"M\\u00ECng-d\\u0115\\u0324ng-ng\\u1E73\\u0304\"},\n    \"cs\": {menuTitle: \"\\u010De\\u0161tina\"},\n    \"da\": {menuTitle: \"dansk\"},\n    \"de\": {menuTitle: \"Deutsch\"},\n    \"diq\": {menuTitle: \"Zazaki\"},\n    \"en\": {menuTitle: \"English\", isLoaded: true},\n    \"eo\": {menuTitle: \"Esperanto\"},\n    \"es\": {menuTitle: \"espa\\u00F1ol\"},\n    \"fa\": {menuTitle: \"\\u0641\\u0627\\u0631\\u0633\\u06CC\"},\n    \"fi\": {menuTitle: \"suomi\"},\n    \"fr\": {menuTitle: \"fran\\u00E7ais\"},\n    \"gl\": {menuTitle: \"galego\"},\n    \"he\": {menuTitle: \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"},\n    \"ia\": {menuTitle: \"interlingua\"},\n    \"it\": {menuTitle: \"italiano\"},\n    \"ja\": {menuTitle: \"\\u65E5\\u672C\\u8A9E\"},\n    \"kn\": {menuTitle: \"\\u0C95\\u0CA8\\u0CCD\\u0CA8\\u0CA1\"},\n    \"ko\": {menuTitle: \"\\uD55C\\uAD6D\\uC5B4\"},\n    \"lb\": {menuTitle: \"L\\u00EBtzebuergesch\"},\n    \"lki\": {menuTitle: \"\\u0644\\u06D5\\u06A9\\u06CC\"},\n    \"lt\": {menuTitle: \"lietuvi\\u0173\"},\n    \"mk\": {menuTitle: \"\\u043C\\u0430\\u043A\\u0435\\u0434\\u043E\\u043D\\u0441\\u043A\\u0438\"},\n    \"nl\": {menuTitle: \"Nederlands\"},\n    \"oc\": {menuTitle: \"occitan\"},\n    \"pl\": {menuTitle: \"polski\"},\n    \"pt\": {menuTitle: \"portugus\\u00EA\"},\n    \"pt-br\": {menuTitle: \"portugu\\u00EAs do Brasil\"},\n    \"ru\": {menuTitle: \"\\u0440\\u0443\\u0441\\u0441\\u043A\\u0438\\u0439\"},\n    \"sco\": {menuTitle: \"Scots\"},\n    \"scn\": {menuTitle: \"sicilianu\"},\n    \"sl\": {menuTitle: \"sloven\\u0161\\u010Dina\"},\n    \"sv\": {menuTitle: \"svenska\"},\n    \"tr\": {menuTitle: \"T\\u00FCrk\\u00E7e\"},\n    \"uk\": {menuTitle: \"\\u0443\\u043A\\u0440\\u0430\\u0457\\u043D\\u0441\\u044C\\u043A\\u0430\"},\n    \"vi\": {menuTitle: \"Ti\\u1EBFng Vi\\u1EC7t\"},\n    \"zh-hans\": {menuTitle: \"\\u4E2D\\u6587\\uFF08\\u7B80\\u4F53\\uFF09\"}\n  },\n\n  //\n  //  The pattern for substitution escapes:\n  //      %n or %{n} or %{plural:%n|option1|option1|...} or %c\n  //\n  pattern: /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g,\n\n  SPLIT: (\"axb\".split(/(x)/).length === 3 ?\n    function (string,regex) {return string.split(regex)} :\n    //\n    //  IE8 and below don't do split() correctly when the pattern includes\n    //    parentheses (the split should include the matched exrepssions).\n    //    So implement it by hand here.\n    // \n    function (string,regex) {\n      var result = [], match, last = 0;\n      regex.lastIndex = 0;\n      while ((match = regex.exec(string))) {\n        result.push(string.substr(last,match.index-last));\n        result.push.apply(result,match.slice(1));\n        last = match.index + match[0].length;\n      }\n      result.push(string.substr(last));\n      return result;\n    }),\n  \n  _: function (id,phrase) {\n    if (MathJax.Object.isArray(phrase)) {return this.processSnippet(id,phrase)}\n    return this.processString(this.lookupPhrase(id,phrase),[].slice.call(arguments,2));\n  },\n  \n  processString: function (string,args,domain) {\n    //\n    //  Process arguments for substitution\n    //    If the argument is a snippet (and we are processing snippets) do so,\n    //    Otherwise, if it is a number, convert it for the lacale\n    //\n    var i, m, isArray = MathJax.Object.isArray;\n    for (i = 0, m = args.length; i < m; i++) {\n      if (domain && isArray(args[i])) {args[i] = this.processSnippet(domain,args[i])}\n    }\n    //\n    //  Split string at escapes and process them individually\n    //\n    var parts = this.SPLIT(string,this.pattern);\n    for (i = 1, m = parts.length; i < m; i += 2) {\n      var c = parts[i].charAt(0);  // first char will be { or \\d or a char to be kept literally\n      if (c >= \"0\" && c <= \"9\") {    // %n\n        parts[i] = args[parts[i]-1];\n        if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n      } else if (c === \"{\") {        // %{n} or %{plural:%n|...}\n        c = parts[i].substr(1);\n        if (c >= \"0\" && c <= \"9\") {  // %{n}\n          parts[i] = args[parts[i].substr(1,parts[i].length-2)-1];\n          if (typeof parts[i] === \"number\") parts[i] = this.number(parts[i]);\n        } else {                     // %{plural:%n|...}\n          var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n          if (match) {\n            if (match[1] === \"plural\") {\n              var n = args[match[2]-1];\n              if (typeof n === \"undefined\") {\n                parts[i] = \"???\";        // argument doesn't exist\n              } else {\n                n = this.plural(n) - 1;  // index of the form to use\n                var plurals = match[3].replace(/(^|[^%])(%%)*%\\|/g,\"$1$2%\\uEFEF\").split(/\\|/); // the parts (replacing %| with a special character)\n                if (n >= 0 && n < plurals.length) {\n                  parts[i] = this.processString(plurals[n].replace(/\\uEFEF/g,\"|\"),args,domain);\n                } else {\n                  parts[i] = \"???\";      // no string for this index\n                }\n              }\n            } else {parts[i] = \"%\"+parts[i]}  // not \"plural\", put back the % and leave unchanged\n          }\n        }\n      }\n      if (parts[i] == null) {parts[i] = \"???\"}\n    }\n    //\n    //  If we are not forming a snippet, return the completed string\n    //  \n    if (!domain) {return parts.join(\"\")}\n    //\n    //  We need to return an HTML snippet, so buld it from the\n    //  broken up string with inserted parts (that could be snippets)\n    //\n    var snippet = [], part = \"\";\n    for (i = 0; i < m; i++) {\n      part += parts[i]; i++;  // add the string and move on to substitution result\n      if (i < m) {\n        if (isArray(parts[i]))  {                // substitution was a snippet\n          snippet.push(part);                        // add the accumulated string\n          snippet = snippet.concat(parts[i]);        // concatenate the substution snippet\n          part = \"\";                                 // start accumulating a new string\n        } else {                                 // substitution was a string\n          part += parts[i];                          // add to accumulating string\n        }\n      }\n    }\n    if (part !== \"\") {snippet.push(part)} // add final string\n    return snippet;\n  },\n  \n  processSnippet: function (domain,snippet) {\n    var result = [];   // the new snippet\n    //\n    //  Look through the original snippet for\n    //   strings or snippets to translate\n    //\n    for (var i = 0, m = snippet.length; i < m; i++) {\n      if (MathJax.Object.isArray(snippet[i])) {\n        //\n        //  This could be a sub-snippet:\n        //    [\"tag\"] or [\"tag\",{properties}] or [\"tag\",{properties},snippet]\n        //  Or it could be something to translate:\n        //    [id,string,args] or [domain,snippet]\n        var data = snippet[i];\n        if (typeof data[1] === \"string\") {        // [id,string,args]\n          var id = data[0]; if (!MathJax.Object.isArray(id)) {id = [domain,id]}\n          var phrase = this.lookupPhrase(id,data[1]);\n          result = result.concat(this.processMarkdown(phrase,data.slice(2),domain));\n        } else if (MathJax.Object.isArray(data[1])) {    // [domain,snippet]\n          result = result.concat(this.processSnippet.apply(this,data));\n        } else if (data.length >= 3) {            // [\"tag\",{properties},snippet]\n          result.push([data[0],data[1],this.processSnippet(domain,data[2])]);\n        } else {                                  // [\"tag\"] or [\"tag\",{properties}]\n          result.push(snippet[i]);\n        }\n      } else {                                    // a string\n        result.push(snippet[i]);\n      }\n    }\n    return result;\n  },\n  \n  markdownPattern: /(%.)|(\\*{1,3})((?:%.|.)+?)\\2|(`+)((?:%.|.)+?)\\4|\\[((?:%.|.)+?)\\]\\(([^\\s\\)]+)\\)/,\n  //   %c or *bold*, **italics**, ***bold-italics***, or `code`, or [link](url)\n   \n  processMarkdown: function (phrase,args,domain) {\n    var result = [], data;\n    //\n    //  Split the string by the Markdown pattern\n    //    (the text blocks are separated by \n    //      c,stars,star-text,backtics,code-text,link-text,URL).\n    //  Start with teh first text string from the split.\n    //\n    var parts = phrase.split(this.markdownPattern);\n    var string = parts[0];\n    //\n    //  Loop through the matches and process them\n    //\n    for (var i = 1, m = parts.length; i < m; i += 8) {\n      if (parts[i+1]) {        // stars (for bold/italic)\n        //\n        //  Select the tag to use by number of stars (three stars requires two tags)\n        //\n        data = this.processString(parts[i+2],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [[\"b\",\"i\",\"i\"][parts[i+1].length-1],{},data]; // number of stars determines type\n        if (parts[i+1].length === 3) {data = [\"b\",{},data]}  // bold-italic\n      } else if (parts[i+3]) { //  backtics (for code)\n        //\n        //  Remove one leading or trailing space, and process substitutions\n        //  Make a <code> tag\n        //\n        data = this.processString(parts[i+4].replace(/^\\s/,\"\").replace(/\\s$/,\"\"),args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"code\",{},data];\n      } else if (parts[i+5]) { //  hyperlink\n        //\n        //  Process the link text, and make an <a> tag with the URL\n        //\n        data = this.processString(parts[i+5],args,domain);\n        if (!MathJax.Object.isArray(data)) {data = [data]}\n        data = [\"a\",{href:this.processString(parts[i+6],args),target:\"_blank\"},data];\n      } else {\n        //\n        //  Escaped character (%c) gets added into the string.\n        //\n        string += parts[i]; data = null;\n      }\n      //\n      //  If there is a tag to insert,\n      //     Add any pending string, then push the tag\n      //\n      if (data) {\n        result = this.concatString(result,string,args,domain);\n        result.push(data); string = \"\";\n      }\n      //\n      //  Process the string that follows matches pattern\n      //\n      if (parts[i+7] !== \"\") {string += parts[i+7]}\n    };\n    //\n    //  Add any pending string and return the resulting snippet\n    //\n    result = this.concatString(result,string,args,domain);\n    return result;\n  },\n  concatString: function (result,string,args,domain) {\n    if (string != \"\") {\n      //\n      //  Process the substutions.\n      //  If the result is not a snippet, turn it into one.\n      //  Then concatenate the snippet to the current one\n      //\n      string = this.processString(string,args,domain);\n      if (!MathJax.Object.isArray(string)) {string = [string]}\n      result = result.concat(string);\n    }\n    return result;\n  },\n\n  lookupPhrase: function (id,phrase,domain) {\n    //\n    //  Get the domain and messageID\n    //\n    if (!domain) {domain = \"_\"}\n    if (MathJax.Object.isArray(id)) {domain = (id[0] || \"_\"); id = (id[1] || \"\")}\n    //\n    //  Check if the data is available and if not,\n    //    load it and throw a restart error so the calling\n    //    code can wait for the load and try again.\n    //\n    var load = this.loadDomain(domain);\n    if (load) {MathJax.Hub.RestartAfter(load)}\n    //\n    //  Look up the message in the localization data\n    //    (if not found, the original English is used)\n    //\n    var localeData = this.strings[this.locale];\n    if (localeData) {\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (domainData.strings && id in domainData.strings)\n          {phrase = domainData.strings[id]}\n      }\n    }\n    //\n    //  return the translated phrase\n    //\n    return phrase;\n  },\n  \n  //\n  //  Load a langauge data file from the proper\n  //  directory and file.\n  //\n  loadFile: function (file,data,callback) {\n    callback = MathJax.Callback(callback);\n    file = (data.file || file);  // the data's file name or the default name\n    if (!file.match(/\\.js$/)) {file += \".js\"} // add .js if needed\n    //\n    //  Add the directory if the file doesn't\n    //  contain a full URL already.\n    //\n    if (!file.match(/^([a-z]+:|\\[MathJax\\])/)) {\n      var dir = (this.strings[this.locale].directory  || \n                 this.directory + \"/\" + this.locale ||\n                 \"[MathJax]/localization/\" + this.locale);\n      file = dir + \"/\" + file;\n    }\n    //\n    //  Load the file and mark the data as loaded (even if it\n    //  failed to load, so we don't continue to try to load it\n    //  over and over).\n    //\n    var load = MathJax.Ajax.Require(file,function () {data.isLoaded = true; return callback()});\n    //\n    //  Return the callback if needed, otherwise null.\n    //\n    return (load.called ? null : load);\n  },\n  \n  //\n  //  Check to see if the localization data are loaded\n  //  for the given domain; if not, load the data file,\n  //  and return a callback for the loading operation.\n  //  Otherwise return null (data are loaded).\n  //  \n  loadDomain: function (domain,callback) {\n    var load, localeData = this.strings[this.locale];\n    if (localeData) {\n      if (!localeData.isLoaded) {\n        load = this.loadFile(this.locale,localeData);\n        if (load) {\n          return MathJax.Callback.Queue(\n            load,[\"loadDomain\",this,domain] // call again to load domain\n          ).Push(callback||{});\n        }\n      }\n      if (localeData.domains && domain in localeData.domains) {\n        var domainData = localeData.domains[domain];\n        if (!domainData.isLoaded) {\n          load = this.loadFile(domain,domainData);\n          if (load) {return MathJax.Callback.Queue(load).Push(callback)}\n        }\n      }\n    } \n    // localization data are loaded, so just do the callback\n    return MathJax.Callback(callback)();\n  },\n\n  //\n  //  Perform a function, properly handling\n  //  restarts due to localization file loads.\n  //\n  //  Note that this may return before the function\n  //  has been called successfully, so you should\n  //  consider fn as running asynchronously.  (Callbacks\n  //  can be used to synchronize it with other actions.)\n  //\n  Try: function (fn) {\n    fn = MathJax.Callback(fn); fn.autoReset = true;\n    try {fn()} catch (err) {\n      if (!err.restart) {throw err}\n      MathJax.Callback.After([\"Try\",this,fn],err.restart);\n    }\n  },\n\n  //\n  //  Reset the current language\n  //\n  resetLocale: function(locale) {\n    // Selection algorithm:\n    // 1) Downcase locale name (e.g. \"en-US\" => \"en-us\")\n    // 2) Try a parent language (e.g. \"en-us\" => \"en\")\n    // 3) Try the fallback specified in the data (e.g. \"pt\" => \"pt-br\")\n    // 4) Otherwise don't change the locale.\n    if (!locale) return;\n    locale = locale.toLowerCase();\n    while (!this.strings[locale]) {\n      var dashPos = locale.lastIndexOf(\"-\");\n      if (dashPos === -1) return;\n      locale = locale.substring(0, dashPos);\n    }\n    var remap = this.strings[locale].remap;\n    this.locale = remap ? remap : locale;\n  },\n\n  //\n  //  Set the current language\n  //\n  setLocale: function(locale) {\n    this.resetLocale(locale);\n    if (MathJax.Menu) {this.loadDomain(\"MathMenu\")}\n  },\n\n  //\n  //  Add or update a language or domain\n  //\n  addTranslation: function (locale,domain,definition) {\n    var data = this.strings[locale], isNew = false;\n    if (!data) {data = this.strings[locale] = {}; isNew = true}\n    if (!data.domains) {data.domains = {}}\n    if (domain) {\n      if (!data.domains[domain]) {data.domains[domain] = {}}\n      data = data.domains[domain];\n    }\n    MathJax.Hub.Insert(data,definition);\n    if (isNew && MathJax.Menu.menu) {MathJax.Menu.CreateLocaleMenu()}\n  },\n  \n  //\n  //  Set CSS for an element based on font requirements\n  //\n  setCSS: function (div) {\n    var locale = this.strings[this.locale];\n    if (locale) {\n      if (locale.fontFamily) {div.style.fontFamily = locale.fontFamily}\n      if (locale.fontDirection) {\n        div.style.direction = locale.fontDirection;\n        if (locale.fontDirection === \"rtl\") {div.style.textAlign = \"right\"}\n      }\n    }\n    return div;\n  },\n  \n  //\n  //  Get the language's font family or direction\n  //\n  fontFamily: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontFamily : null);\n  },\n  fontDirection: function () {\n    var locale = this.strings[this.locale];\n    return (locale ? locale.fontDirection : null);\n  },\n\n  //\n  //  Get the language's plural index for a number\n  //\n  plural: function (n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.plural) {return locale.plural(n)}\n    // default\n    if (n == 1) {return 1} // one\n    return 2; // other\n  },\n\n  //\n  //  Convert a number to language-specific form\n  //\n  number: function(n) {\n    var locale = this.strings[this.locale];\n    if (locale && locale.number) {return locale.number(n)}\n    // default\n    return n;\n  }\n};\n\n\n/**********************************************************/\n\nMathJax.Message = {\n  ready: false,  // used to tell when the styles are available\n  log: [{}], current: null,\n  textNodeBug: (navigator.vendor === \"Apple Computer, Inc.\" &&\n                typeof navigator.vendorSub === \"undefined\") ||\n               (window.hasOwnProperty && window.hasOwnProperty(\"konqueror\")), // Konqueror displays some gibberish with text.nodeValue = \"...\"\n  \n  styles: {\n    \"#MathJax_Message\": {\n      position: \"fixed\", left: \"1px\", bottom: \"2px\",\n      'background-color': \"#E6E6E6\",  border: \"1px solid #959595\",\n      margin: \"0px\", padding: \"2px 8px\",\n      'z-index': \"102\", color: \"black\", 'font-size': \"80%\",\n      width: \"auto\", 'white-space': \"nowrap\"\n    },\n    \n    \"#MathJax_MSIE_Frame\": {\n      position: \"absolute\",\n      top:0, left: 0, width: \"0px\", 'z-index': 101,\n      border: \"0px\", margin: \"0px\", padding: \"0px\"\n    }\n  },\n  \n  browsers: {\n    MSIE: function (browser) {\n      MathJax.Message.msieFixedPositionBug = ((document.documentMode||0) < 7);\n      if (MathJax.Message.msieFixedPositionBug) \n        {MathJax.Hub.config.styles[\"#MathJax_Message\"].position = \"absolute\"}\n      MathJax.Message.quirks = (document.compatMode === \"BackCompat\");\n    },\n    Chrome: function (browser) {\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].bottom = \"1.5em\";\n      MathJax.Hub.config.styles[\"#MathJax_Message\"].left = \"1em\";\n    }\n  },\n  \n  Init: function (styles) {\n    if (styles) {this.ready = true}\n    if (!document.body || !this.ready) {return false}\n    //\n    //  ASCIIMathML replaces the entire page with a copy of itself (@#!#%@!!)\n    //  so check that this.div is still part of the page, otherwise look up\n    //  the copy and use that.\n    //\n    if (this.div && this.div.parentNode == null) {\n      this.div = document.getElementById(\"MathJax_Message\");\n      if (this.div) {this.text = this.div.firstChild}\n    }\n    if (!this.div) {\n      var frame = document.body;\n      if (this.msieFixedPositionBug && window.attachEvent) {\n        frame = this.frame = this.addDiv(document.body); frame.removeAttribute(\"id\");\n        frame.style.position = \"absolute\";\n        frame.style.border = frame.style.margin = frame.style.padding = \"0px\";\n        frame.style.zIndex = \"101\"; frame.style.height = \"0px\";\n        frame = this.addDiv(frame);\n        frame.id = \"MathJax_MSIE_Frame\";\n        window.attachEvent(\"onscroll\",this.MoveFrame);\n        window.attachEvent(\"onresize\",this.MoveFrame);\n        this.MoveFrame();\n      }\n      this.div = this.addDiv(frame); this.div.style.display = \"none\";\n      this.text = this.div.appendChild(document.createTextNode(\"\"));\n    }\n    return true;\n  },\n  \n  addDiv: function (parent) {\n    var div = document.createElement(\"div\");\n    div.id = \"MathJax_Message\";\n    if (parent.firstChild) {parent.insertBefore(div,parent.firstChild)}\n      else {parent.appendChild(div)}\n    return div;\n  },\n  \n  MoveFrame: function () {\n    var body = (MathJax.Message.quirks ? document.body : document.documentElement);\n    var frame = MathJax.Message.frame;\n    frame.style.left = body.scrollLeft + 'px';\n    frame.style.top = body.scrollTop + 'px';\n    frame.style.width = body.clientWidth + 'px';\n    frame = frame.firstChild;\n    frame.style.height = body.clientHeight + 'px';\n  },\n\n  localize: function (message) {\n    return MathJax.Localization._(message,message);\n  },\n  \n  filterText: function (text,n,id) {\n    if (MathJax.Hub.config.messageStyle === \"simple\") {\n      if (id === \"LoadFile\") {\n        if (!this.loading) {this.loading = this.localize(\"Loading\") + \" \"}\n        text = this.loading; this.loading += \".\";\n      } else if (id === \"ProcessMath\") {\n        if (!this.processing) {this.processing = this.localize(\"Processing\") + \" \"}\n        text = this.processing; this.processing += \".\";\n      } else if (id === \"TypesetMath\") {\n        if (!this.typesetting) {this.typesetting = this.localize(\"Typesetting\") + \" \"}\n        text = this.typesetting; this.typesetting += \".\";\n      }\n    }\n    return text;\n  },\n  \n  clearCounts: function () {\n    delete this.loading;\n    delete this.processing;\n    delete this.typesetting;\n  },\n  \n  Set: function (text,n,clearDelay) {\n    if (n == null) {n = this.log.length; this.log[n] = {}}\n    //\n    //  Translate message if it is [id,message,arguments]\n    //\n    var id = \"\";\n    if (MathJax.Object.isArray(text)) {\n      id = text[0]; if (MathJax.Object.isArray(id)) {id = id[1]}\n      //\n      // Localization._() will throw a restart error if a localization file\n      //   needs to be loaded, so trap that and redo the Set() call\n      //   after it is loaded.\n      //\n      try {\n        text = MathJax.Localization._.apply(MathJax.Localization,text);\n      } catch (err) {\n        if (!err.restart) {throw err}\n        if (!err.restart.called) {\n          //\n          //  Mark it so we can tell if the Clear() comes before the message is displayed\n          //\n          if (this.log[n].restarted == null) {this.log[n].restarted = 0}\n          this.log[n].restarted++; delete this.log[n].cleared;\n          MathJax.Callback.After([\"Set\",this,text,n,clearDelay],err.restart);\n          return n;\n        }\n      }\n    }\n    //\n    // Clear the timout timer.\n    //\n    if (this.timer) {clearTimeout(this.timer); delete this.timer}\n    //\n    //  Save the message and filtered message.\n    //\n    this.log[n].text = text; this.log[n].filteredText = text = this.filterText(text,n,id);\n    //\n    //  Hook the message into the message list so we can tell\n    //   what message to put up when this one is removed.\n    //\n    if (typeof(this.log[n].next) === \"undefined\") {\n      this.log[n].next = this.current;\n      if (this.current != null) {this.log[this.current].prev = n}\n      this.current = n;\n    }\n    //\n    //  Show the message if it is the currently active one.\n    //\n    if (this.current === n && MathJax.Hub.config.messageStyle !== \"none\") {\n      if (this.Init()) {\n        if (this.textNodeBug) {this.div.innerHTML = text} else {this.text.nodeValue = text}\n        this.div.style.display = \"\";\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else {\n        window.status = text;\n        this.status = true;\n      }\n    }\n    //\n    //  Check if the message was resetarted to load a localization file\n    //    and if it has been cleared in the meanwhile.\n    //\n    if (this.log[n].restarted) {\n      if (this.log[n].cleared) {clearDelay = 0}\n      if (--this.log[n].restarted === 0) {delete this.log[n].cleared}\n    }\n    //\n    //  Check if we need to clear the message automatically.\n    //\n    if (clearDelay) {setTimeout(MathJax.Callback([\"Clear\",this,n]),clearDelay)}\n      else if (clearDelay == 0) {this.Clear(n,0)}\n    //\n    //  Return the message number.\n    //\n    return n;\n  },\n  \n  Clear: function (n,delay) {\n    //\n    //  Detatch the message from the active list.\n    //\n    if (this.log[n].prev != null) {this.log[this.log[n].prev].next = this.log[n].next}\n    if (this.log[n].next != null) {this.log[this.log[n].next].prev = this.log[n].prev}\n    //\n    //  If it is the current message, get the next one to show.\n    //\n    if (this.current === n) {\n      this.current = this.log[n].next;\n      if (this.text) {\n        if (this.div.parentNode == null) {this.Init()} // see ASCIIMathML comments above\n        if (this.current == null) {\n          //\n          //  If there are no more messages, remove the message box.\n          //\n          if (this.timer) {clearTimeout(this.timer); delete this.timer}\n          if (delay == null) {delay = 600}\n          if (delay === 0) {this.Remove()}\n\t    else {this.timer = setTimeout(MathJax.Callback([\"Remove\",this]),delay)}\n        } else if (MathJax.Hub.config.messageStyle !== \"none\") {\n          //\n          //  If there is an old message, put it in place\n          //\n          if (this.textNodeBug) {this.div.innerHTML = this.log[this.current].filteredText}\n                           else {this.text.nodeValue = this.log[this.current].filteredText}\n        }\n        if (this.status) {window.status = \"\"; delete this.status}\n      } else if (this.status) {\n        window.status = (this.current == null ? \"\" : this.log[this.current].text);\n      }\n    }\n    //\n    //  Clean up the log data no longer needed\n    //\n    delete this.log[n].next; delete this.log[n].prev;\n    delete this.log[n].filteredText;\n    //\n    //  If this is a restarted localization message, mark that it has been cleared\n    //    while waiting for the file to load.\n    //\n    if (this.log[n].restarted) {this.log[n].cleared = true}\n  },\n  \n  Remove: function () {\n    // FIXME:  do a fade out or something else interesting?\n    this.text.nodeValue = \"\";\n    this.div.style.display = \"none\";\n  },\n  \n  File: function (file) {\n    return this.Set([\"LoadFile\",\"Loading %1\",file],null,null);\n  },\n  \n  Log: function () {\n    var strings = [];\n    for (var i = 1, m = this.log.length; i < m; i++) {strings[i] = this.log[i].text}\n    return strings.join(\"\\n\");\n  }\n\n};\n\n/**********************************************************/\n\nMathJax.Hub = {\n  config: {\n    root: \"\",\n    config: [],      // list of configuration files to load\n    styleSheets: [], // list of CSS files to load\n    styles: {        // styles to generate in-line\n      \".MathJax_Preview\": {color: \"#888\"}\n    },\n    jax: [],         // list of input and output jax to load\n    extensions: [],  // list of extensions to load\n    preJax: null,    // pattern to remove from before math script tag\n    postJax: null,   // pattern to remove from after math script tag\n    displayAlign: 'center',       // how to align displayed equations (left, center, right)\n    displayIndent: '0',           // indentation for displayed equations (when not centered)\n    preRemoveClass: 'MathJax_Preview', // class of objects to remove preceeding math script\n    showProcessingMessages: true, // display \"Processing math: nn%\" messages or not\n    messageStyle: \"normal\",       // set to \"none\" or \"simple\" (for \"Loading...\" and \"Processing...\")\n    delayStartupUntil: \"none\",    // set to \"onload\" to delay setup until the onload handler runs\n                                  // set to \"configured\" to delay startup until MathJax.Hub.Configured() is called\n                                  // set to a Callback to wait for before continuing with the startup\n    skipStartupTypeset: false,    // set to true to skip PreProcess and Process during startup\n    elements: [],             // array of elements to process when none is given explicitly\n    positionToHash: true,    // after initial typeset pass, position to #hash location?\n     \n    showMathMenu: true,      // attach math context menu to typeset math?\n    showMathMenuMSIE: true,  // separtely determine if MSIE should have math menu\n                             //  (since the code for that is a bit delicate)\n    \n    menuSettings: {\n      zoom: \"None\",        //  when to do MathZoom\n      CTRL: false,         //    require CTRL for MathZoom?\n      ALT: false,          //    require Alt or Option?\n      CMD: false,          //    require CMD?\n      Shift: false,        //    require Shift?\n      discoverable: false, //  make math menu discoverable on hover?\n      zscale: \"200%\",      //  the scaling factor for MathZoom\n      renderer: null,      //  set when Jax are loaded\n      font: \"Auto\",        //  what font HTML-CSS should use\n      context: \"MathJax\",  //  or \"Browser\" for pass-through to browser menu\n      locale: null,        //  the language to use for messages\n      mpContext: false,    //  true means pass menu events to MathPlayer in IE\n      mpMouse: false,      //  true means pass mouse events to MathPlayer in IE\n      texHints: true,      //  include class names for TeXAtom elements\n      FastPreview: null,   //  use PreviewHTML output as preview?\n      assistiveMML: null,  //  include hidden MathML for screen readers?\n      inTabOrder: true,    //  set to false if math elements should be included in the tabindex\n      semantics: false     //  add semantics tag with original form in MathML output\n    },\n    \n    errorSettings: {\n       // localized HTML snippet structure for message to use\n      message: [\"[\",[\"MathProcessingError\",\"Math Processing Error\"],\"]\"],\n      style: {color: \"#CC0000\", \"font-style\":\"italic\"}  // style for message\n    },\n    \n    ignoreMMLattributes: {}  // attributes not to copy to HTML-CSS or SVG output\n                             //   from MathML input (in addition to the ones in MML.nocopyAttributes).\n                             //   An id set to true will be ignored, one set to false will\n                             //   be allowed (even if other criteria normally would prevent\n                             //   it from being copied); use false carefully!\n  },\n  \n  preProcessors: MathJax.Callback.Hooks(true), // list of callbacks for preprocessing (initialized by extensions)\n  inputJax: {},          // mime-type mapped to input jax (by registration)\n  outputJax: {order:{}}, // mime-type mapped to output jax list (by registration)\n\n  processSectionDelay: 50, // pause between input and output phases of processing\n  processUpdateTime: 250, // time between screen updates when processing math (milliseconds)\n  processUpdateDelay: 10, // pause between screen updates to allow other processing (milliseconds)\n\n  signal: MathJax.Callback.Signal(\"Hub\"), // Signal used for Hub events\n\n  Config: function (def) {\n    this.Insert(this.config,def);\n    if (this.config.Augment) {this.Augment(this.config.Augment)}\n  },\n  CombineConfig: function (name,def) {\n    var config = this.config, id, parent; name = name.split(/\\./);\n    for (var i = 0, m = name.length; i < m; i++) {\n      id = name[i]; if (!config[id]) {config[id] = {}}\n      parent = config; config = config[id];\n    }\n    parent[id] = config = this.Insert(def,config);\n    return config;\n  },\n  \n  Register: {\n    PreProcessor: function () {return MathJax.Hub.preProcessors.Add.apply(MathJax.Hub.preProcessors,arguments)},\n    MessageHook: function () {return MathJax.Hub.signal.MessageHook.apply(MathJax.Hub.signal,arguments)},\n    StartupHook: function () {return MathJax.Hub.Startup.signal.MessageHook.apply(MathJax.Hub.Startup.signal,arguments)},\n    LoadHook: function () {return MathJax.Ajax.LoadHook.apply(MathJax.Ajax,arguments)}\n  },\n  UnRegister: {\n    PreProcessor: function (hook) {MathJax.Hub.preProcessors.Remove(hook)},\n    MessageHook: function (hook) {MathJax.Hub.signal.RemoveHook(hook)},\n    StartupHook: function (hook) {MathJax.Hub.Startup.signal.RemoveHook(hook)},\n    LoadHook: function (hook) {MathJax.Ajax.removeHook(hook)}\n  },\n  \n  getAllJax: function (element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxByType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].MathJax.elementJax.mimeType === type)\n            {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxByInputType: function (type,element) {\n    var jax = [], scripts = this.elementScripts(element);\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      if (scripts[i].MathJax && scripts[i].MathJax.elementJax &&\n          scripts[i].type && scripts[i].type.replace(/ *;(.|\\s)*/,\"\") === type)\n        {jax.push(scripts[i].MathJax.elementJax)}\n    }\n    return jax;\n  },\n  \n  getJaxFor: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (element && element.MathJax) {return element.MathJax.elementJax}\n    if (this.isMathJaxNode(element)) {\n      if (!element.isMathJax) {element = element.firstChild}  // for NativeMML output\n      while (element && !element.jaxID) {element = element.parentNode}\n      if (element) {return MathJax.OutputJax[element.jaxID].getJaxFromMath(element)}\n    }\n    return null;\n  },\n  \n  isJax: function (element) {\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (this.isMathJaxNode(element)) {return 1}\n    if (element && (element.tagName||\"\").toLowerCase() === 'script') {\n      if (element.MathJax) \n        {return (element.MathJax.state === MathJax.ElementJax.STATE.PROCESSED ? 1 : -1)}\n      if (element.type && this.inputJax[element.type.replace(/ *;(.|\\s)*/,\"\")]) {return -1}\n    }\n    return 0;\n  },\n  isMathJaxNode: function (element) {\n    return !!element && (element.isMathJax || (element.className||\"\") === \"MathJax_MathML\");\n  },\n  \n  setRenderer: function (renderer,type) {\n    if (!renderer) return;\n    if (!MathJax.OutputJax[renderer]) {\n      this.config.menuSettings.renderer = \"\";\n      var file = \"[MathJax]/jax/output/\"+renderer+\"/config.js\";\n      return MathJax.Ajax.Require(file,[\"setRenderer\",this,renderer,type]);\n    } else {\n      this.config.menuSettings.renderer = renderer;\n      if (type == null) {type = \"jax/mml\"}\n      var jax = this.outputJax;\n      if (jax[type] && jax[type].length) {\n        if (renderer !== jax[type][0].id) {\n          jax[type].unshift(MathJax.OutputJax[renderer]);\n          return this.signal.Post([\"Renderer Selected\",renderer]);\n        }\n      }\n      return null;\n    }\n  },\n\n  Queue: function () {\n    return this.queue.Push.apply(this.queue,arguments);\n  },\n  \n  Typeset: function (element,callback) {\n    if (!MathJax.isReady) return null;\n    var ec = this.elementCallback(element,callback);\n    if (ec.count) {\n      var queue = MathJax.Callback.Queue(\n        [\"PreProcess\",this,ec.elements],\n        [\"Process\",this,ec.elements]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n  \n  PreProcess: function (element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var queue = MathJax.Callback.Queue();\n    if (ec.count) {\n      var elements = (ec.count === 1 ? [ec.elements] : ec.elements);\n      queue.Push([\"Post\",this.signal,[\"Begin PreProcess\",ec.elements]]);\n      for (var i = 0, m = elements.length; i < m; i++) {\n        if (elements[i]) {queue.Push([\"Execute\",this.preProcessors,elements[i]])}\n      }\n      queue.Push([\"Post\",this.signal,[\"End PreProcess\",ec.elements]]);\n    }\n    return queue.Push(ec.callback);\n  },\n\n  Process:   function (element,callback) {return this.takeAction(\"Process\",element,callback)},\n  Update:    function (element,callback) {return this.takeAction(\"Update\",element,callback)},\n  Reprocess: function (element,callback) {return this.takeAction(\"Reprocess\",element,callback)},\n  Rerender:  function (element,callback) {return this.takeAction(\"Rerender\",element,callback)},\n  \n  takeAction: function (action,element,callback) {\n    var ec = this.elementCallback(element,callback);\n    var elements = ec.elements;\n    var queue = MathJax.Callback.Queue([\"Clear\",this.signal]);\n    var state = {\n      scripts: [],                  // filled in by prepareScripts\n      start: new Date().getTime(),  // timer for processing messages\n      i: 0, j: 0,                   // current script, current jax\n      jax: {},                      // scripts grouped by output jax\n      jaxIDs: []                    // id's of jax used\n    };\n    if (ec.count) {\n      var delay = [\"Delay\",MathJax.Callback,this.processSectionDelay];\n      if (!delay[2]) {delay = {}}\n      queue.Push(\n        [\"clearCounts\",MathJax.Message],\n        [\"Post\",this.signal,[\"Begin \"+action,elements]],\n        [\"Post\",this.signal,[\"Begin Math\",elements,action]],\n        [\"prepareScripts\",this,action,elements,state],\n        [\"Post\",this.signal,[\"Begin Math Input\",elements,action]],\n        [\"processInput\",this,state],\n        [\"Post\",this.signal,[\"End Math Input\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"preProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"Begin Math Output\",elements,action]],\n        [\"processOutput\",this,state],\n        [\"Post\",this.signal,[\"End Math Output\",elements,action]],\n        delay,\n        [\"prepareOutput\",this,state,\"postProcess\"],\n        delay,\n        [\"Post\",this.signal,[\"End Math\",elements,action]],\n        [\"Post\",this.signal,[\"End \"+action,elements]],\n        [\"clearCounts\",MathJax.Message]\n      );\n    }\n    return queue.Push(ec.callback);\n  },\n  \n  scriptAction: {\n    Process: function (script) {},\n    Update: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax && jax.needsUpdate()) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n        else {script.MathJax.state = jax.STATE.PROCESSED}\n    },\n    Reprocess: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.UPDATE}\n    },\n    Rerender: function (script) {\n      var jax = script.MathJax.elementJax;\n      if (jax) {jax.Remove(true); script.MathJax.state = jax.STATE.OUTPUT}\n    }\n  },\n  \n  prepareScripts: function (action,element,state) {\n    if (arguments.callee.disabled) return;\n    var scripts = this.elementScripts(element);\n    var STATE = MathJax.ElementJax.STATE;\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var script = scripts[i];\n      if (script.type && this.inputJax[script.type.replace(/ *;(.|\\n)*/,\"\")]) {\n        if (script.MathJax) {\n          if (script.MathJax.elementJax && script.MathJax.elementJax.hover) {\n            MathJax.Extension.MathEvents.Hover.ClearHover(script.MathJax.elementJax);\n          }\n          if (script.MathJax.state !== STATE.PENDING) {this.scriptAction[action](script)}\n        }\n        if (!script.MathJax) {script.MathJax = {state: STATE.PENDING}}\n        if (script.MathJax.error) delete script.MathJax.error;\n        if (script.MathJax.state !== STATE.PROCESSED) {state.scripts.push(script)}\n      }\n    }\n  },\n  \n  checkScriptSiblings: function (script) {\n    if (script.MathJax.checked) return;\n    var config = this.config, pre = script.previousSibling;\n    if (pre && pre.nodeName === \"#text\") {\n      var preJax,postJax, post = script.nextSibling;\n      if (post && post.nodeName !== \"#text\") {post = null}\n      if (config.preJax) {\n        if (typeof(config.preJax) === \"string\") {config.preJax = new RegExp(config.preJax+\"$\")}\n        preJax = pre.nodeValue.match(config.preJax);\n      }\n      if (config.postJax && post) {\n        if (typeof(config.postJax) === \"string\") {config.postJax = new RegExp(\"^\"+config.postJax)}\n        postJax = post.nodeValue.match(config.postJax);\n      }\n      if (preJax && (!config.postJax || postJax)) {\n        pre.nodeValue  = pre.nodeValue.replace\n          (config.preJax,(preJax.length > 1? preJax[1] : \"\"));\n        pre = null;\n      }\n      if (postJax && (!config.preJax || preJax)) {\n        post.nodeValue = post.nodeValue.replace\n          (config.postJax,(postJax.length > 1? postJax[1] : \"\"));\n      }\n      if (pre && !pre.nodeValue.match(/\\S/)) {pre = pre.previousSibling}\n    }\n    if (config.preRemoveClass && pre && pre.className === config.preRemoveClass)\n      {script.MathJax.preview = pre}\n    script.MathJax.checked = 1;\n  },\n  \n  processInput: function (state) {\n    var jax, STATE = MathJax.ElementJax.STATE;\n    var script, prev, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        script = state.scripts[state.i]; if (!script) {state.i++; continue}\n        //\n        //  Remove previous error marker, if any\n        //\n        prev = script.previousSibling;\n        if (prev && prev.className === \"MathJax_Error\") {prev.parentNode.removeChild(prev)}\n        //\n        //  Check if already processed or needs processing\n        //\n        if (!script.parentNode || !script.MathJax || script.MathJax.state === STATE.PROCESSED) {state.i++; continue};\n        if (!script.MathJax.elementJax || script.MathJax.state === STATE.UPDATE) {\n          this.checkScriptSiblings(script);                 // remove preJax/postJax etc.\n          var type = script.type.replace(/ *;(.|\\s)*/,\"\");  // the input jax type\n          var input = this.inputJax[type];                  // the input jax itself\n          jax = input.Process(script,state);                // run the input jax\n          if (typeof jax === 'function') {                  // if a callback was returned\n            if (jax.called) continue;                       //   go back and call Process() again\n            this.RestartAfter(jax);                         //   wait for the callback\n          }\n          jax = jax.Attach(script,input.id);                // register the jax on the script\n          this.saveScript(jax,state,script,STATE);          // add script to state\n          this.postInputHooks.Execute(jax,input.id,script); // run global jax filters\n        } else if (script.MathJax.state === STATE.OUTPUT) {\n          this.saveScript(script.MathJax.elementJax,state,script,STATE); // add script to state\n        }\n        //\n        //  Go on to the next script, and check if we need to update the processing message\n        //\n        state.i++; var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(1))}\n      }\n    } catch (err) {return this.processError(err,state,\"Input\")}\n    //\n    //  Put up final message, reset the state and return\n    //\n    if (state.scripts.length && this.config.showProcessingMessages)\n      {MathJax.Message.Set([\"ProcessMath\",\"Processing math: %1%%\",100],0)}\n    state.start = new Date().getTime(); state.i = state.j = 0;\n    return null;\n  },\n  postInputHooks: MathJax.Callback.Hooks(true),  // hooks to run after element jax is created\n  saveScript: function (jax,state,script,STATE) {\n    //\n    //  Check that output jax exists\n    //\n    if (!this.outputJax[jax.mimeType]) {\n      script.MathJax.state = STATE.UPDATE;\n      throw Error(\"No output jax registered for \"+jax.mimeType);\n    }\n    //\n    //  Record the output jax\n    //  and put this script in the queue for that jax\n    //\n    jax.outputJax = this.outputJax[jax.mimeType][0].id;\n    if (!state.jax[jax.outputJax]) {\n      if (state.jaxIDs.length === 0) {\n        // use original array until we know there are more (rather than two copies)\n        state.jax[jax.outputJax] = state.scripts;\n      } else {\n        if (state.jaxIDs.length === 1) // get the script so far for the existing jax\n          {state.jax[state.jaxIDs[0]] = state.scripts.slice(0,state.i)}\n        state.jax[jax.outputJax] = []; // start a new array for the new jax\n      }\n      state.jaxIDs.push(jax.outputJax); // save the ID of the jax\n    }\n    if (state.jaxIDs.length > 1) {state.jax[jax.outputJax].push(script)}\n    //\n    //  Mark script as needing output\n    //\n    script.MathJax.state = STATE.OUTPUT;\n  },\n  \n  //\n  //  Pre- and post-process scripts by jax\n  //    (to get scaling factors, hide/show output, and so on)\n  //  Since this can cause the jax to load, we need to trap restarts\n  //\n  prepareOutput: function (state,method) {\n    while (state.j < state.jaxIDs.length) {\n      var id = state.jaxIDs[state.j], JAX = MathJax.OutputJax[id];\n      if (JAX[method]) {\n        try {\n          var result = JAX[method](state);\n          if (typeof result === 'function') {\n            if (result.called) continue;  // go back and try again\n            this.RestartAfter(result);\n          }\n        } catch (err) {\n          if (!err.restart) {\n            MathJax.Message.Set([\"PrepError\",\"Error preparing %1 output (%2)\",id,method],null,600);\n            MathJax.Hub.lastPrepError = err;\n            state.j++;\n          }\n          return MathJax.Callback.After([\"prepareOutput\",this,state,method],err.restart);\n        }\n      }\n      state.j++;\n    }\n    return null;\n  },\n\n  processOutput: function (state) {\n    var result, STATE = MathJax.ElementJax.STATE, script, m = state.scripts.length;\n    try {\n      //\n      //  Loop through the scripts\n      //\n      while (state.i < m) {\n        //\n        //  Check that there is an element jax\n        //\n        script = state.scripts[state.i];\n        if (!script || !script.parentNode || !script.MathJax || script.MathJax.error) {state.i++; continue}\n        var jax = script.MathJax.elementJax; if (!jax) {state.i++; continue}\n        //\n        //  Call the output Jax's Process method (which will be its Translate()\n        //  method once loaded).  Mark it as complete and remove the preview unless\n        //  the Process() call returns an explicit false value (in which case, it will\n        //  handle this later during the postProcess phase, as HTML-CSS does).\n        //\n        result = MathJax.OutputJax[jax.outputJax].Process(script,state);\n        if (result !== false) {\n          script.MathJax.state = STATE.PROCESSED;\n          if (script.MathJax.preview) {\n            script.MathJax.preview.innerHTML = \"\";\n            script.MathJax.preview.style.display = \"none\";\n          }\n          //\n          //  Signal that new math is available\n          //\n          this.signal.Post([\"New Math\",jax.inputID]); // FIXME: wait for this?  (i.e., restart if returns uncalled callback)\n        }\n        //\n        //  Go on to next math expression\n        //\n        state.i++;\n        //\n        //  Update the processing message, if needed\n        //\n        var now = new Date().getTime();\n        if (now - state.start > this.processUpdateTime && state.i < state.scripts.length)\n          {state.start = now; this.RestartAfter(MathJax.Callback.Delay(this.processUpdateDelay))}\n      }\n    } catch (err) {return this.processError(err,state,\"Output\")}\n    //\n    //  Put up the typesetting-complete message\n    //\n    if (state.scripts.length && this.config.showProcessingMessages) {\n      MathJax.Message.Set([\"TypesetMath\",\"Typesetting math: %1%%\",100],0);\n      MathJax.Message.Clear(0);\n    }\n    state.i = state.j = 0;\n    return null;\n  },\n  \n  processMessage: function (state,type) {\n    var m = Math.floor(state.i/(state.scripts.length)*100);\n    var message = (type === \"Output\" ? [\"TypesetMath\",\"Typesetting math: %1%%\"] :\n                                       [\"ProcessMath\",\"Processing math: %1%%\"]);\n    if (this.config.showProcessingMessages) {MathJax.Message.Set(message.concat(m),0)}\n  },\n\n  processError: function (err,state,type) {\n    if (!err.restart) {\n      if (!this.config.errorSettings.message) {throw err}\n      this.formatError(state.scripts[state.i],err); state.i++;\n    }\n    this.processMessage(state,type);\n    return MathJax.Callback.After([\"process\"+type,this,state],err.restart);\n  },\n  \n  formatError: function (script,err) {\n    var LOCALIZE = function (id,text,arg1,arg2) {return MathJax.Localization._(id,text,arg1,arg2)};\n    //\n    //  Get the error message, URL, and line, and save it for\n    //    reporting in the Show Math As Error menu\n    //\n    var message = LOCALIZE(\"ErrorMessage\",\"Error: %1\",err.message)+\"\\n\";\n    if (err.sourceURL||err.fileName) message += \"\\n\"+LOCALIZE(\"ErrorFile\",\"file: %1\",err.sourceURL||err.fileName);\n    if (err.line||err.lineNumber) message += \"\\n\"+LOCALIZE(\"ErrorLine\",\"line: %1\",err.line||err.lineNumber);\n    message += \"\\n\\n\"+LOCALIZE(\"ErrorTips\",\"Debugging tips: use %1, inspect %2 in the browser console\",\"'unpacked/MathJax.js'\",\"'MathJax.Hub.lastError'\");\n    script.MathJax.error = MathJax.OutputJax.Error.Jax(message,script);\n    if (script.MathJax.elementJax)\n      script.MathJax.error.inputID = script.MathJax.elementJax.inputID;\n    //\n    //  Create the [Math Processing Error] span\n    //\n    var errorSettings = this.config.errorSettings;\n    var errorText = LOCALIZE(errorSettings.messageId,errorSettings.message);\n    var error = MathJax.HTML.Element(\"span\", {\n      className:\"MathJax_Error\", jaxID:\"Error\", isMathJax:true,\n      id: script.MathJax.error.inputID+\"-Frame\"\n    },[[\"span\",null,errorText]]);\n    //\n    //  Attach the menu events\n    //\n    MathJax.Ajax.Require(\"[MathJax]/extensions/MathEvents.js\",function () {\n      var EVENT = MathJax.Extension.MathEvents.Event,\n          HUB = MathJax.Hub;\n      error.oncontextmenu = EVENT.Menu;\n      error.onmousedown = EVENT.Mousedown;\n      error.onkeydown = EVENT.Keydown;\n      error.tabIndex = HUB.getTabOrder(HUB.getJaxFor(script));\n    });\n    //\n    //  Insert the error into the page and remove any preview\n    //\n    var node = document.getElementById(error.id);\n    if (node) node.parentNode.removeChild(node);\n    if (script.parentNode) script.parentNode.insertBefore(error,script);\n    if (script.MathJax.preview) {\n      script.MathJax.preview.innerHTML = \"\";\n      script.MathJax.preview.style.display = \"none\";\n    }\n    //\n    //  Save the error for debugging purposes\n    //  Report the error as a signal\n    //\n    this.lastError = err;\n    this.signal.Post([\"Math Processing Error\",script,err]);\n  },\n  \n  RestartAfter: function (callback) {\n    throw this.Insert(Error(\"restart\"),{restart: MathJax.Callback(callback)});\n  },\n  \n  elementCallback: function (element,callback) {\n    if (callback == null && (MathJax.Object.isArray(element) || typeof element === 'function'))\n      {try {MathJax.Callback(element); callback = element; element = null} catch(e) {}}\n    if (element == null) {element = this.config.elements || []}\n    if (this.isHTMLCollection(element)) {element = this.HTMLCollection2Array(element)}\n    if (!MathJax.Object.isArray(element)) {element = [element]}\n    element = [].concat(element); // make a copy so the original isn't changed\n    for (var i = 0, m = element.length; i < m; i++)\n      {if (typeof(element[i]) === 'string') {element[i] = document.getElementById(element[i])}}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element.length == 0) {element.push(document.body)}\n    if (!callback) {callback = {}}\n    return {\n      count: element.length, \n      elements: (element.length === 1 ? element[0] : element),\n      callback: callback\n    };\n  },\n  \n  elementScripts: function (element) {\n    var scripts = [];\n    if (MathJax.Object.isArray(element) || this.isHTMLCollection(element)) {\n      for (var i = 0, m = element.length; i < m; i++) {\n        var alreadyDone = 0;\n        for (var j = 0; j < i && !alreadyDone; j++)\n          {alreadyDone = element[j].contains(element[i])}\n        if (!alreadyDone) scripts.push.apply(scripts,this.elementScripts(element[i]));\n      }\n      return scripts;\n    }\n    if (typeof(element) === 'string') {element = document.getElementById(element)}\n    if (!document.body) {document.body = document.getElementsByTagName(\"body\")[0]}\n    if (element == null) {element = document.body}\n    if (element.tagName != null && element.tagName.toLowerCase() === \"script\") {return [element]}\n    scripts = element.getElementsByTagName(\"script\");\n    if (this.msieHTMLCollectionBug) {scripts = this.HTMLCollection2Array(scripts)}\n    return scripts;\n  },\n\n  //\n  //  IE8 fails to check \"obj instanceof HTMLCollection\" for some values of obj.\n  //\n  isHTMLCollection: function (obj) {\n    return (\"HTMLCollection\" in window && typeof(obj) === \"object\" && obj instanceof HTMLCollection);\n  },\n  //\n  //  IE8 doesn't deal with HTMLCollection as an array, so convert to array\n  //\n  HTMLCollection2Array: function (nodes) {\n    if (!this.msieHTMLCollectionBug) {return [].slice.call(nodes)}\n    var NODES = [];\n    for (var i = 0, m = nodes.length; i < m; i++) {NODES[i] = nodes[i]}\n    return NODES;\n  },\n  \n  Insert: function (dst,src) {\n    for (var id in src) {if (src.hasOwnProperty(id)) {\n      // allow for concatenation of arrays?\n      if (typeof src[id] === 'object' && !(MathJax.Object.isArray(src[id])) &&\n         (typeof dst[id] === 'object' || typeof dst[id] === 'function')) {\n        this.Insert(dst[id],src[id]);\n      } else {\n        dst[id] = src[id];\n      }\n    }}\n    return dst;\n  },\n\n  getTabOrder: function(script) {\n    return this.config.menuSettings.inTabOrder ? 0 : -1;\n  },\n\n  // Old browsers (e.g. Internet Explorer <= 8) do not support trim().\n  SplitList: (\"trim\" in String.prototype ?\n              function (list) {return list.trim().split(/\\s+/)} :\n              function (list) {return list.replace(/^\\s+/,'').\n                                           replace(/\\s+$/,'').split(/\\s+/)})\n};\nMathJax.Hub.Insert(MathJax.Hub.config.styles,MathJax.Message.styles);\nMathJax.Hub.Insert(MathJax.Hub.config.styles,{\".MathJax_Error\":MathJax.Hub.config.errorSettings.style});\n\n//\n//  Storage area for extensions and preprocessors\n//\nMathJax.Extension = {};\n\n//\n//  Hub Startup code\n//\nMathJax.Hub.Configured = MathJax.Callback({}); // called when configuration is complete\nMathJax.Hub.Startup = {\n  script: \"\", // the startup script from the SCRIPT call that loads MathJax.js\n  queue:   MathJax.Callback.Queue(),           // Queue used for startup actions\n  signal:  MathJax.Callback.Signal(\"Startup\"), // Signal used for startup events\n  params:  {},\n\n  //\n  //  Load the configuration files\n  //\n  Config: function () {\n    this.queue.Push([\"Post\",this.signal,\"Begin Config\"]);\n    //\n    //  Make sure root is set before loading any files\n    //\n    if (MathJax.AuthorConfig && MathJax.AuthorConfig.root)\n      MathJax.Ajax.config.root = MathJax.AuthorConfig.root;\n    //\n    //  If a locale is given as a parameter,\n    //    set the locale and the default menu value for the locale\n    //\n    if (this.params.locale) {\n      MathJax.Localization.resetLocale(this.params.locale);\n      MathJax.Hub.config.menuSettings.locale = this.params.locale;\n    }\n    //\n    //  Run the config files, if any are given in the parameter list\n    //\n    if (this.params.config) {\n      var files = this.params.config.split(/,/);\n      for (var i = 0, m = files.length; i < m; i++) {\n        if (!files[i].match(/\\.js$/)) {files[i] += \".js\"}\n        this.queue.Push([\"Require\",MathJax.Ajax,this.URL(\"config\",files[i])]);\n      }\n    }\n    //\n    //  Perform author configuration from in-line MathJax = {...}\n    //\n    this.queue.Push([\"Config\",MathJax.Hub,MathJax.AuthorConfig]);\n    //\n    //  Run the deprecated configuration script, if any (ignoring return value)\n    //  Wait for the startup delay signal\n    //  Run the mathjax-config blocks\n    //  Load the files in the configuration's config array\n    //\n    if (this.script.match(/\\S/)) {this.queue.Push(this.script+\";\\n1;\")}\n    this.queue.Push(\n      [\"ConfigDelay\",this],\n      [\"ConfigBlocks\",this],\n      [function (THIS) {return THIS.loadArray(MathJax.Hub.config.config,\"config\",null,true)},this],\n      [\"Post\",this.signal,\"End Config\"]\n    );\n  },\n  //\n  //  Return the delay callback\n  //\n  ConfigDelay: function () {\n    var delay = this.params.delayStartupUntil || MathJax.Hub.config.delayStartupUntil;\n    if (delay === \"onload\") {return this.onload}\n    if (delay === \"configured\") {return MathJax.Hub.Configured}\n    return delay;\n  },\n  //\n  //  Run the scripts of type=text/x-mathjax-config\n  //\n  ConfigBlocks: function () {\n    var scripts = document.getElementsByTagName(\"script\");\n    var queue = MathJax.Callback.Queue();\n    for (var i = 0, m = scripts.length; i < m; i++) {\n      var type = String(scripts[i].type).replace(/ /g,\"\");\n      if (type.match(/^text\\/x-mathjax-config(;.*)?$/) && !type.match(/;executed=true/)) {\n        scripts[i].type += \";executed=true\";\n        queue.Push(scripts[i].innerHTML+\";\\n1;\");\n      }\n    }\n    return queue.Push(function () {MathJax.Ajax.config.root = MathJax.Hub.config.root});\n  },\n\n  //\n  //  Read cookie and set up menu defaults\n  //  (set the locale according to the cookie)\n  //  (adjust the jax to accommodate renderer preferences)\n  //\n  Cookie: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Cookie\"],\n      [\"Get\",MathJax.HTML.Cookie,\"menu\",MathJax.Hub.config.menuSettings],\n      [function (config) {\n        var SETTINGS = config.menuSettings;\n        if (SETTINGS.locale) MathJax.Localization.resetLocale(SETTINGS.locale);\n        var renderer = config.menuSettings.renderer, jax = config.jax;\n        if (renderer) {\n          var name = \"output/\"+renderer; jax.sort();\n          for (var i = 0, m = jax.length; i < m; i++) {\n            if (jax[i].substr(0,7) === \"output/\") break;\n          }\n          if (i == m-1) {jax.pop()} else {\n            while (i < m) {if (jax[i] === name) {jax.splice(i,1); break}; i++}\n          }\n          jax.unshift(name);\n        }\n        if (SETTINGS.CHTMLpreview != null) {\n          if (SETTINGS.FastPreview == null) SETTINGS.FastPreview = SETTINGS.CHTMLpreview;\n          delete SETTINGS.CHTMLpreview;\n        }\n        if (SETTINGS.FastPreview && !MathJax.Extension[\"fast-preview\"])\n          MathJax.Hub.config.extensions.push(\"fast-preview.js\");\n        if (config.menuSettings.assistiveMML && !MathJax.Extension.AssistiveMML)\n          MathJax.Hub.config.extensions.push(\"AssistiveMML.js\");\n      },MathJax.Hub.config],\n      [\"Post\",this.signal,\"End Cookie\"]\n    );\n  },\n  //\n  //  Setup stylesheets and extra styles\n  //\n  Styles: function () {\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Styles\"],\n      [\"loadArray\",this,MathJax.Hub.config.styleSheets,\"config\"],\n      [\"Styles\",MathJax.Ajax,MathJax.Hub.config.styles],\n      [\"Post\",this.signal,\"End Styles\"]\n    );\n  },\n  //\n  //  Load the input and output jax\n  //\n  Jax: function () {\n    var config = MathJax.Hub.config, jax = MathJax.Hub.outputJax;\n    //  Save the order of the output jax since they are loading asynchronously\n    for (var i = 0, m = config.jax.length, k = 0; i < m; i++) {\n      var name = config.jax[i].substr(7);\n      if (config.jax[i].substr(0,7) === \"output/\" && jax.order[name] == null)\n        {jax.order[name] = k; k++}\n    }\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Jax\"],\n      [\"loadArray\",this,config.jax,\"jax\",\"config.js\"],\n      [\"Post\",this.signal,\"End Jax\"]\n    );\n  },\n  //\n  //  Load the extensions\n  //\n  Extensions: function () {\n    var queue = MathJax.Callback.Queue();\n    return queue.Push(\n      [\"Post\",this.signal,\"Begin Extensions\"],\n      [\"loadArray\",this,MathJax.Hub.config.extensions,\"extensions\"],\n      [\"Post\",this.signal,\"End Extensions\"]\n    );\n  },\n  \n  //\n  //  Initialize the Message system\n  //\n  Message: function () {\n    MathJax.Message.Init(true);\n  },\n  \n  //\n  //  Set the math menu renderer, if it isn't already\n  //  (this must come after the jax are loaded)\n  //\n  Menu: function () {\n    var menu = MathJax.Hub.config.menuSettings, jax = MathJax.Hub.outputJax, registered;\n    for (var id in jax) {if (jax.hasOwnProperty(id)) {\n      if (jax[id].length) {registered = jax[id]; break}\n    }}\n    if (registered && registered.length) {\n      if (menu.renderer && menu.renderer !== registered[0].id)\n        {registered.unshift(MathJax.OutputJax[menu.renderer])}\n      menu.renderer = registered[0].id;\n    }\n  },\n  \n  //\n  //  Set the location to the designated hash position\n  //\n  Hash: function () {\n    if (MathJax.Hub.config.positionToHash && document.location.hash &&\n        document.body && document.body.scrollIntoView) {\n      var name = document.location.hash.substr(1);\n      var target = document.getElementById(name);\n      if (!target) {\n        var a = document.getElementsByTagName(\"a\");\n        for (var i = 0, m = a.length; i < m; i++)\n          {if (a[i].name === name) {target = a[i]; break}}\n      }\n      if (target) {\n        while (!target.scrollIntoView) {target = target.parentNode}\n        target = this.HashCheck(target);\n        if (target && target.scrollIntoView)\n          {setTimeout(function () {target.scrollIntoView(true)},1)}\n      }\n    }\n  },\n  HashCheck: function (target) {\n    var jax = MathJax.Hub.getJaxFor(target);\n    if (jax && MathJax.OutputJax[jax.outputJax].hashCheck)\n      {target = MathJax.OutputJax[jax.outputJax].hashCheck(target)}\n    return target;\n  },\n  \n  //\n  //  Load the Menu and Zoom code, if it hasn't already been loaded.\n  //  This is called after the initial typeset, so should no longer be\n  //  competing with other page loads, but will make these available\n  //  if needed later on.\n  //\n  MenuZoom: function () {\n    if (MathJax.Hub.config.showMathMenu) {\n      if (!MathJax.Extension.MathMenu) {\n        setTimeout(\n          function () {\n            MathJax.Callback.Queue(\n              [\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathMenu.js\",{}],\n              [\"loadDomain\",MathJax.Localization,\"MathMenu\"]\n            )\n          },1000\n        );\n      } else {\n        setTimeout(\n          MathJax.Callback([\"loadDomain\",MathJax.Localization,\"MathMenu\"]),\n          1000\n        );\n      }\n      if (!MathJax.Extension.MathZoom) {\n        setTimeout(\n          MathJax.Callback([\"Require\",MathJax.Ajax,\"[MathJax]/extensions/MathZoom.js\",{}]),\n          2000\n        );\n      }\n    }\n  },\n  \n  //\n  //  Setup the onload callback\n  //\n  onLoad: function () {\n    var onload = this.onload =\n      MathJax.Callback(function () {MathJax.Hub.Startup.signal.Post(\"onLoad\")});\n    if (document.body && document.readyState)\n      if (MathJax.Hub.Browser.isMSIE) {\n        // IE can change from loading to interactive before\n        //  full page is ready, so go with complete (even though\n        //  that means we may have to wait longer).\n        if (document.readyState === \"complete\") {return [onload]}\n      } else if (document.readyState !== \"loading\") {return [onload]}\n    if (window.addEventListener) {\n      window.addEventListener(\"load\",onload,false);\n      if (!this.params.noDOMContentEvent)\n        {window.addEventListener(\"DOMContentLoaded\",onload,false)}\n    }\n    else if (window.attachEvent) {window.attachEvent(\"onload\",onload)}\n    else {window.onload = onload}\n    return onload;\n  },\n\n  //\n  //  Perform the initial typesetting (or skip if configuration says to)\n  //\n  Typeset: function (element,callback) {\n    if (MathJax.Hub.config.skipStartupTypeset) {return function () {}}\n    return this.queue.Push(\n      [\"Post\",this.signal,\"Begin Typeset\"],\n      [\"Typeset\",MathJax.Hub,element,callback],\n      [\"Post\",this.signal,\"End Typeset\"]\n    );\n  },\n\n  //\n  //  Create a URL in the MathJax hierarchy\n  //\n  URL: function (dir,name) {\n    if (!name.match(/^([a-z]+:\\/\\/|\\[|\\/)/)) {name = \"[MathJax]/\"+dir+\"/\"+name}\n    return name;\n  },\n\n  //\n  //  Load an array of files, waiting for all of them\n  //  to be loaded before going on\n  //\n  loadArray: function (files,dir,name,synchronous) {\n    if (files) {\n      if (!MathJax.Object.isArray(files)) {files = [files]}\n      if (files.length) {\n        var queue = MathJax.Callback.Queue(), callback = {}, file;\n        for (var i = 0, m = files.length; i < m; i++) {\n          file = this.URL(dir,files[i]);\n          if (name) {file += \"/\" + name}\n          if (synchronous) {queue.Push([\"Require\",MathJax.Ajax,file,callback])}\n                      else {queue.Push(MathJax.Ajax.Require(file,callback))}\n        }\n        return queue.Push({}); // wait for everything to finish\n      }\n    }\n    return null;\n  }\n  \n};\n\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME], ROOT = \"[\"+BASENAME+\"]\";\n  var HUB = BASE.Hub, AJAX = BASE.Ajax, CALLBACK = BASE.Callback;\n\n  var JAX = MathJax.Object.Subclass({\n    JAXFILE: \"jax.js\",\n    require: null, // array of files to load before jax.js is complete\n    config: {},\n    //\n    //  Make a subclass and return an instance of it.\n    //  (FIXME: should we replace config with a copy of the constructor's\n    //   config?  Otherwise all subclasses share the same config structure.)\n    //\n    Init: function (def,cdef) {\n      if (arguments.length === 0) {return this}\n      return (this.constructor.Subclass(def,cdef))();\n    },\n    //\n    //  Augment by merging with class definition (not replacing)\n    //\n    Augment: function (def,cdef) {\n      var cObject = this.constructor, ndef = {};\n      if (def != null) {\n        for (var id in def) {if (def.hasOwnProperty(id)) {\n          if (typeof def[id] === \"function\")\n            {cObject.protoFunction(id,def[id])} else {ndef[id] = def[id]}\n        }}\n        // MSIE doesn't list toString even if it is not native so handle it separately\n        if (def.toString !== cObject.prototype.toString && def.toString !== {}.toString)\n          {cObject.protoFunction('toString',def.toString)}\n      }\n      HUB.Insert(cObject.prototype,ndef);\n      cObject.Augment(null,cdef);\n      return this;\n    },\n    Translate: function (script,state) {\n      throw Error(this.directory+\"/\"+this.JAXFILE+\" failed to define the Translate() method\");\n    },\n    Register: function (mimetype) {},\n    Config: function () {\n      this.config = HUB.CombineConfig(this.id,this.config);\n      if (this.config.Augment) {this.Augment(this.config.Augment)}\n    },\n    Startup: function () {},\n    loadComplete: function (file) {\n      if (file === \"config.js\") {\n        return AJAX.loadComplete(this.directory+\"/\"+file);\n      } else {\n        var queue = CALLBACK.Queue();\n        queue.Push(\n          HUB.Register.StartupHook(\"End Config\",{}), // wait until config complete\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Config\"],\n          [\"Config\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Require\"],\n          // Config may set the required and extensions array,\n          //  so use functions to delay making the reference until needed\n          [function (THIS) {return MathJax.Hub.Startup.loadArray(THIS.require,this.directory)},this],\n          [function (config,id) {return MathJax.Hub.Startup.loadArray(config.extensions,\"extensions/\"+id)},this.config||{},this.id],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Startup\"],\n          [\"Startup\",this],\n          [\"Post\",HUB.Startup.signal,this.id+\" Jax Ready\"]\n        );\n        if (this.copyTranslate) {\n          queue.Push(\n            [function (THIS) {\n              THIS.preProcess  = THIS.preTranslate;\n              THIS.Process     = THIS.Translate;\n              THIS.postProcess = THIS.postTranslate;\n            },this.constructor.prototype]\n          );\n        }\n        return queue.Push([\"loadComplete\",AJAX,this.directory+\"/\"+file]);\n      }\n    }\n  },{\n    id: \"Jax\",\n    version: \"2.7.0-beta\",\n    directory: ROOT+\"/jax\",\n    extensionDir: ROOT+\"/extensions\"\n  });\n\n  /***********************************/\n\n  BASE.InputJax = JAX.Subclass({\n    elementJax: \"mml\",  // the element jax to load for this input jax\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"],\n    copyTranslate: true,\n    Process: function (script,state) {\n      var queue = CALLBACK.Queue(), file;\n      // Load any needed element jax\n      var jax = this.elementJax; if (!BASE.Object.isArray(jax)) {jax = [jax]}\n      for (var i = 0, m = jax.length; i < m; i++) {\n        file = BASE.ElementJax.directory+\"/\"+jax[i]+\"/\"+this.JAXFILE;\n        if (!this.require) {this.require = []}\n          else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n        this.require.push(file);  // so Startup will wait for it to be loaded\n        queue.Push(AJAX.Require(file));\n      }\n      // Load the input jax\n      file = this.directory+\"/\"+this.JAXFILE;\n      var load = queue.Push(AJAX.Require(file));\n      if (!load.called) {\n        this.constructor.prototype.Process = function () {\n          if (!load.called) {return load}\n          throw Error(file+\" failed to load properly\");\n        }\n      }\n      // Load the associated output jax\n      jax = HUB.outputJax[\"jax/\"+jax[0]];\n      if (jax) {queue.Push(AJAX.Require(jax[0].directory+\"/\"+this.JAXFILE))}\n      return queue.Push({});\n    },\n    needsUpdate: function (jax) {\n      var script = jax.SourceElement();\n      return (jax.originalText !== BASE.HTML.getScript(script));\n    },\n    Register: function (mimetype) {\n      if (!HUB.inputJax) {HUB.inputJax = {}}\n      HUB.inputJax[mimetype] = this;\n    }\n  },{\n    id: \"InputJax\",\n    version: \"2.7.0-beta\",\n    directory: JAX.directory+\"/input\",\n    extensionDir: JAX.extensionDir\n  });\n\n  /***********************************/\n\n  BASE.OutputJax = JAX.Subclass({\n    copyTranslate: true,\n    preProcess: function (state) {\n      var load, file = this.directory+\"/\"+this.JAXFILE;\n      this.constructor.prototype.preProcess = function (state) {\n\tif (!load.called) {return load}\n        throw Error(file+\" failed to load properly\");\n      }\n      load = AJAX.Require(file);\n      return load;\n    },\n    Register: function (mimetype) {\n      var jax = HUB.outputJax;\n      if (!jax[mimetype]) {jax[mimetype] = []}\n      //  If the output jax is earlier in the original configuration list, put it first here\n      if (jax[mimetype].length && (this.id === HUB.config.menuSettings.renderer ||\n            (jax.order[this.id]||0) < (jax.order[jax[mimetype][0].id]||0)))\n        {jax[mimetype].unshift(this)} else {jax[mimetype].push(this)}\n      //  Make sure the element jax is loaded before Startup is called\n      if (!this.require) {this.require = []}\n        else if (!BASE.Object.isArray(this.require)) {this.require = [this.require]};\n      this.require.push(BASE.ElementJax.directory+\"/\"+(mimetype.split(/\\//)[1])+\"/\"+this.JAXFILE);\n    },\n    Remove: function (jax) {}\n  },{\n    id: \"OutputJax\",\n    version: \"2.7.0-beta\",\n    directory: JAX.directory+\"/output\",\n    extensionDir: JAX.extensionDir,\n    fontDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/fonts\",\n    imageDir: ROOT+(BASE.isPacked?\"\":\"/..\")+\"/images\"\n  });\n  \n  /***********************************/\n\n  BASE.ElementJax = JAX.Subclass({\n    // make a subclass, not an instance\n    Init: function (def,cdef) {return this.constructor.Subclass(def,cdef)},\n    \n    inputJax: null,\n    outputJax: null,\n    inputID: null,\n    originalText: \"\",\n    mimeType: \"\",\n    sourceMenuTitle: /*_(MathMenu)*/ [\"MathMLcode\",\"MathML Code\"],\n    \n    Text: function (text,callback) {\n      var script = this.SourceElement();\n      BASE.HTML.setScript(script,text);\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Update(script,callback);\n    },\n    Reprocess: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.UPDATE;\n      return HUB.Reprocess(script,callback);\n    },\n    Update: function (callback) {return this.Rerender(callback)},\n    Rerender: function (callback) {\n      var script = this.SourceElement();\n      script.MathJax.state = this.STATE.OUTPUT;\n      return HUB.Process(script,callback);\n    },\n    Remove: function (keep) {\n      if (this.hover) {this.hover.clear(this)}\n      BASE.OutputJax[this.outputJax].Remove(this);\n      if (!keep) {\n        HUB.signal.Post([\"Remove Math\",this.inputID]); // wait for this to finish?\n        this.Detach();\n      }\n    },\n    needsUpdate: function () {\n      return BASE.InputJax[this.inputJax].needsUpdate(this);\n    },\n\n    SourceElement: function () {return document.getElementById(this.inputID)},\n    \n    Attach: function (script,inputJax) {\n      var jax = script.MathJax.elementJax;\n      if (script.MathJax.state === this.STATE.UPDATE) {\n        jax.Clone(this);\n      } else {\n        jax = script.MathJax.elementJax = this;\n        if (script.id) {this.inputID = script.id}\n          else {script.id = this.inputID = BASE.ElementJax.GetID(); this.newID = 1}\n      }\n      jax.originalText = BASE.HTML.getScript(script);\n      jax.inputJax = inputJax;\n      if (jax.root) {jax.root.inputID = jax.inputID}\n      return jax;\n    },\n    Detach: function () {\n      var script = this.SourceElement(); if (!script) return;\n      try {delete script.MathJax} catch(err) {script.MathJax = null}\n      if (this.newID) {script.id = \"\"}\n    },\n    Clone: function (jax) {\n      var id;\n      for (id in this) {\n        if (!this.hasOwnProperty(id)) continue;\n        if (typeof(jax[id]) === 'undefined' && id !== 'newID') {delete this[id]}\n      }\n      for (id in jax) {\n        if (!jax.hasOwnProperty(id)) continue;\n        if (typeof(this[id]) === 'undefined' || (this[id] !== jax[id] && id !== 'inputID'))\n          {this[id] = jax[id]}\n      }\n    }\n  },{\n    id: \"ElementJax\",\n    version: \"2.7.0-beta\",\n    directory: JAX.directory+\"/element\",\n    extensionDir: JAX.extensionDir,\n    ID: 0,  // jax counter (for IDs)\n    STATE: {\n      PENDING: 1,      // script is identified as math but not yet processed\n      PROCESSED: 2,    // script has been processed\n      UPDATE: 3,       // elementJax should be updated\n      OUTPUT: 4        // output should be updated (input is OK)\n    },\n    \n    GetID: function () {this.ID++; return \"MathJax-Element-\"+this.ID},\n    Subclass: function () {\n      var obj = JAX.Subclass.apply(this,arguments);\n      obj.loadComplete = this.prototype.loadComplete;\n      return obj;\n    }\n  });\n  BASE.ElementJax.prototype.STATE = BASE.ElementJax.STATE;\n\n  //\n  //  Some \"Fake\" jax used to allow menu access for \"Math Processing Error\" messages\n  //\n  BASE.OutputJax.Error = {\n    id: \"Error\", version: \"2.7.0-beta\", config: {}, errors: 0,\n    ContextMenu: function () {return BASE.Extension.MathEvents.Event.ContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    Mousedown:   function () {return BASE.Extension.MathEvents.Event.AltContextMenu.apply(BASE.Extension.MathEvents.Event,arguments)},\n    getJaxFromMath: function (math) {return (math.nextSibling.MathJax||{}).error},\n    Jax: function (text,script) {\n      var jax = MathJax.Hub.inputJax[script.type.replace(/ *;(.|\\s)*/,\"\")];\n      this.errors++;\n      return {\n        inputJax: (jax||{id:\"Error\"}).id,  // Use Error InputJax as fallback\n        outputJax: \"Error\",\n        inputID: \"MathJax-Error-\"+this.errors,\n        sourceMenuTitle: /*_(MathMenu)*/ [\"ErrorMessage\",\"Error Message\"],\n        sourceMenuFormat: \"Error\",\n        originalText: MathJax.HTML.getScript(script),\n        errorText: text\n      }\n    }\n  };\n  BASE.InputJax.Error = {\n    id: \"Error\", version: \"2.7.0-beta\", config: {},\n    sourceMenuTitle: /*_(MathMenu)*/ [\"Original\",\"Original Form\"]\n  };\n  \n})(\"MathJax\");\n\n/**********************************************************/\n\n(function (BASENAME) {\n  var BASE = window[BASENAME];\n  if (!BASE) {BASE = window[BASENAME] = {}}\n\n  var HUB = BASE.Hub; var STARTUP = HUB.Startup; var CONFIG = HUB.config;\n  var HEAD = document.head || (document.getElementsByTagName(\"head\")[0]);\n  if (!HEAD) {HEAD = document.childNodes[0]};\n  var scripts = (document.documentElement || document).getElementsByTagName(\"script\");\n  if (scripts.length === 0 && HEAD.namespaceURI)\n    scripts = document.getElementsByTagNameNS(HEAD.namespaceURI,\"script\");\n  var namePattern = new RegExp(\"(^|/)\"+BASENAME+\"\\\\.js(\\\\?.*)?$\");\n  for (var i = scripts.length-1; i >= 0; i--) {\n    if ((scripts[i].src||\"\").match(namePattern)) {\n      STARTUP.script = scripts[i].innerHTML;\n      if (RegExp.$2) {\n        var params = RegExp.$2.substr(1).split(/\\&/);\n        for (var j = 0, m = params.length; j < m; j++) {\n          var KV = params[j].match(/(.*)=(.*)/);\n          if (KV) {STARTUP.params[unescape(KV[1])] = unescape(KV[2])}\n             else {STARTUP.params[params[j]] = true}\n        }\n      }\n      CONFIG.root = scripts[i].src.replace(/(^|\\/)[^\\/]*(\\?.*)?$/,'')\n        // convert mathjax/latest to mathjax/x.y-latest so that all files are the same version\n        .replace(/^(https?:\\/\\/cdn.mathjax.org\\/mathjax\\/)(latest)/,\"$1\"+BASE.version.split(/\\./).slice(0,2).join(\".\")+\"-$2\");\n      BASE.Ajax.config.root = CONFIG.root;\n      BASE.Ajax.params = STARTUP.params;\n      break;\n    }\n  }\n\n  var AGENT = navigator.userAgent;\n  var BROWSERS = {\n    isMac:       (navigator.platform.substr(0,3) === \"Mac\"),\n    isPC:        (navigator.platform.substr(0,3) === \"Win\"),\n    isMSIE:      (\"ActiveXObject\" in window && \"clipboardData\" in window),\n    isEdge:      (\"MSGestureEvent\" in window && \"chrome\" in window &&\n                     window.chrome.loadTimes == null),\n    isFirefox:   (!!AGENT.match(/Gecko\\//) && !AGENT.match(/like Gecko/)),\n    isSafari:    (!!AGENT.match(/ (Apple)?WebKit\\//) && !AGENT.match(/ like iPhone /) &&\n                     (!window.chrome || window.chrome.app == null)),\n    isChrome:    (\"chrome\" in window && window.chrome.loadTimes != null),\n    isOpera:     (\"opera\" in window && window.opera.version != null),\n    isKonqueror: (\"konqueror\" in window && navigator.vendor == \"KDE\"),\n    versionAtLeast: function (v) {\n      var bv = (this.version).split('.'); v = (new String(v)).split('.');\n      for (var i = 0, m = v.length; i < m; i++)\n        {if (bv[i] != v[i]) {return parseInt(bv[i]||\"0\") >= parseInt(v[i])}}\n      return true;\n    },\n    Select: function (choices) {\n      var browser = choices[HUB.Browser];\n      if (browser) {return browser(HUB.Browser)}\n      return null;\n    }\n  };\n\n  var xAGENT = AGENT\n    .replace(/^Mozilla\\/(\\d+\\.)+\\d+ /,\"\")                                   // remove initial Mozilla, which is never right\n    .replace(/[a-z][-a-z0-9._: ]+\\/\\d+[^ ]*-[^ ]*\\.([a-z][a-z])?\\d+ /i,\"\")  // remove linux version\n    .replace(/Gentoo |Ubuntu\\/(\\d+\\.)*\\d+ (\\([^)]*\\) )?/,\"\");               // special case for these\n\n  HUB.Browser = HUB.Insert(HUB.Insert(new String(\"Unknown\"),{version: \"0.0\"}),BROWSERS);\n  for (var browser in BROWSERS) {if (BROWSERS.hasOwnProperty(browser)) {\n    if (BROWSERS[browser] && browser.substr(0,2) === \"is\") {\n      browser = browser.slice(2);\n      if (browser === \"Mac\" || browser === \"PC\") continue;\n      HUB.Browser = HUB.Insert(new String(browser),BROWSERS);\n      var VERSION = new RegExp(\n        \".*(Version/| Trident/.*; rv:)((?:\\\\d+\\\\.)+\\\\d+)|\" +                      // for Safari, Opera10, and IE11+\n        \".*(\"+browser+\")\"+(browser == \"MSIE\" ? \" \" : \"/\")+\"((?:\\\\d+\\\\.)*\\\\d+)|\"+  // for one of the main browsers\n        \"(?:^|\\\\(| )([a-z][-a-z0-9._: ]+|(?:Apple)?WebKit)/((?:\\\\d+\\\\.)+\\\\d+)\");  // for unrecognized browser\n      var MATCH = VERSION.exec(xAGENT) || [\"\",\"\",\"\",\"unknown\",\"0.0\"];\n      HUB.Browser.name = (MATCH[1] != \"\" ? browser : (MATCH[3] || MATCH[5]));\n      HUB.Browser.version = MATCH[2] || MATCH[4] || MATCH[6];\n      break;\n    }\n  }};\n  \n  //\n  //  Initial browser-specific info (e.g., touch up version or name, check for MathPlayer, etc.)\n  //  Wrap in try/catch just in case of error (see issue #1155).\n  //\n  try {HUB.Browser.Select({\n    Safari: function (browser) {\n      var v = parseInt((String(browser.version).split(\".\"))[0]);\n      if (v > 85) {browser.webkit = browser.version}\n      if      (v >= 538) {browser.version = \"8.0\"}\n      else if (v >= 537) {browser.version = \"7.0\"}\n      else if (v >= 536) {browser.version = \"6.0\"}\n      else if (v >= 534) {browser.version = \"5.1\"}\n      else if (v >= 533) {browser.version = \"5.0\"}\n      else if (v >= 526) {browser.version = \"4.0\"}\n      else if (v >= 525) {browser.version = \"3.1\"}\n      else if (v >  500) {browser.version = \"3.0\"}\n      else if (v >  400) {browser.version = \"2.0\"}\n      else if (v >   85) {browser.version = \"1.0\"}\n      browser.webkit = (navigator.appVersion.match(/WebKit\\/(\\d+)\\./))[1];\n      browser.isMobile = (navigator.appVersion.match(/Mobile/i) != null);\n      browser.noContextMenu = browser.isMobile;\n    },\n    Firefox: function (browser) {\n      if ((browser.version === \"0.0\" || AGENT.match(/Firefox/) == null) &&\n           navigator.product === \"Gecko\") {\n        var rv = AGENT.match(/[\\/ ]rv:(\\d+\\.\\d.*?)[\\) ]/);\n        if (rv) {browser.version = rv[1]}\n        else {\n          var date = (navigator.buildID||navigator.productSub||\"0\").substr(0,8);\n          if      (date >= \"20111220\") {browser.version = \"9.0\"}\n          else if (date >= \"20111120\") {browser.version = \"8.0\"}\n          else if (date >= \"20110927\") {browser.version = \"7.0\"}\n          else if (date >= \"20110816\") {browser.version = \"6.0\"}\n          else if (date >= \"20110621\") {browser.version = \"5.0\"}\n          else if (date >= \"20110320\") {browser.version = \"4.0\"}\n          else if (date >= \"20100121\") {browser.version = \"3.6\"}\n          else if (date >= \"20090630\") {browser.version = \"3.5\"}\n          else if (date >= \"20080617\") {browser.version = \"3.0\"}\n          else if (date >= \"20061024\") {browser.version = \"2.0\"}\n        }\n      }\n      browser.isMobile = (navigator.appVersion.match(/Android/i) != null ||\n                          AGENT.match(/ Fennec\\//) != null ||\n                          AGENT.match(/Mobile/) != null);\n    },\n    Chrome: function (browser) {\n      browser.noContextMenu = browser.isMobile = !!navigator.userAgent.match(/ Mobile[ \\/]/);\n    },\n    Opera: function (browser) {browser.version = opera.version()},\n    Edge: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n    },\n    MSIE: function (browser) {\n      browser.isMobile = !!navigator.userAgent.match(/ Phone/);\n      browser.isIE9 = !!(document.documentMode && (window.performance || window.msPerformance));\n      MathJax.HTML.setScriptBug = !browser.isIE9 || document.documentMode < 9;\n      MathJax.Hub.msieHTMLCollectionBug = (document.documentMode < 9);\n      //\n      //  MathPlayer doesn't function properly in IE10, and not at all in IE11,\n      //  so don't even try to load it.\n      //\n      if (document.documentMode < 10 && !STARTUP.params.NoMathPlayer) {\n        try {\n          new ActiveXObject(\"MathPlayer.Factory.1\");\n          browser.hasMathPlayer = true;\n        } catch (err) {}\n        try {\n          if (browser.hasMathPlayer) {\n            var mathplayer = document.createElement(\"object\");\n            mathplayer.id = \"mathplayer\"; mathplayer.classid = \"clsid:32F66A20-7614-11D4-BD11-00104BD3F987\";\n            HEAD.appendChild(mathplayer);\n            document.namespaces.add(\"m\",\"http://www.w3.org/1998/Math/MathML\");\n            browser.mpNamespace = true;\n            if (document.readyState && (document.readyState === \"loading\" ||\n                                        document.readyState === \"interactive\")) {\n              document.write('<?import namespace=\"m\" implementation=\"#MathPlayer\">');\n              browser.mpImported = true;\n            }\n          } else {\n            //  Adding any namespace avoids a crash in IE9 in IE9-standards mode\n            //  (any reference to document.namespaces before document.readyState is \n            //   \"complete\" causes an \"unspecified error\" to be thrown)\n            document.namespaces.add(\"mjx_IE_fix\",\"http://www.w3.org/1999/xlink\");\n          }\n        } catch (err) {}\n      }\n    }\n  });} catch (err) {\n    console.error(err.message);\n  }\n  HUB.Browser.Select(MathJax.Message.browsers);\n\n  if (BASE.AuthorConfig && typeof BASE.AuthorConfig.AuthorInit === \"function\") {BASE.AuthorConfig.AuthorInit()}\n  HUB.queue = BASE.Callback.Queue();\n  HUB.queue.Push(\n    [\"Post\",STARTUP.signal,\"Begin\"],\n    [\"Config\",STARTUP],\n    [\"Cookie\",STARTUP],\n    [\"Styles\",STARTUP],\n    [\"Message\",STARTUP],\n    function () {\n      // Do Jax and Extensions in parallel, but wait for them all to complete\n      var queue = BASE.Callback.Queue(\n        STARTUP.Jax(),\n        STARTUP.Extensions()\n      );\n      return queue.Push({});\n    },\n    [\"Menu\",STARTUP],\n    STARTUP.onLoad(),\n    function () {MathJax.isReady = true}, // indicates that MathJax is ready to process math\n    [\"Typeset\",STARTUP],\n    [\"Hash\",STARTUP],\n    [\"MenuZoom\",STARTUP],\n    [\"Post\",STARTUP.signal,\"End\"]\n  );\n  \n})(\"MathJax\");\n\n}}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjax/unpacked/MathJax.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}